ARM GAS  C:\Users\LuckyE\AppData\Local\Temp\cc6Ct15h.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"los_heap.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.__get_max_free,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	__get_max_free:
  25              	.LFB309:
  26              		.file 1 "../../iot_link/os/liteos/base/include/cm-tlsf.h"
   1:../../iot_link/os/liteos/base/include/cm-tlsf.h **** /*----------------------------------------------------------------------------
   2:../../iot_link/os/liteos/base/include/cm-tlsf.h ****  * Copyright (c) <2018>, <Huawei Technologies Co., Ltd>
   3:../../iot_link/os/liteos/base/include/cm-tlsf.h ****  * All rights reserved.
   4:../../iot_link/os/liteos/base/include/cm-tlsf.h ****  * Redistribution and use in source and binary forms, with or without modification,
   5:../../iot_link/os/liteos/base/include/cm-tlsf.h ****  * are permitted provided that the following conditions are met:
   6:../../iot_link/os/liteos/base/include/cm-tlsf.h ****  * 1. Redistributions of source code must retain the above copyright notice, this list of
   7:../../iot_link/os/liteos/base/include/cm-tlsf.h ****  * conditions and the following disclaimer.
   8:../../iot_link/os/liteos/base/include/cm-tlsf.h ****  * 2. Redistributions in binary form must reproduce the above copyright notice, this list
   9:../../iot_link/os/liteos/base/include/cm-tlsf.h ****  * of conditions and the following disclaimer in the documentation and/or other materials
  10:../../iot_link/os/liteos/base/include/cm-tlsf.h ****  * provided with the distribution.
  11:../../iot_link/os/liteos/base/include/cm-tlsf.h ****  * 3. Neither the name of the copyright holder nor the names of its contributors may be used
  12:../../iot_link/os/liteos/base/include/cm-tlsf.h ****  * to endorse or promote products derived from this software without specific prior written
  13:../../iot_link/os/liteos/base/include/cm-tlsf.h ****  * permission.
  14:../../iot_link/os/liteos/base/include/cm-tlsf.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  15:../../iot_link/os/liteos/base/include/cm-tlsf.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
  16:../../iot_link/os/liteos/base/include/cm-tlsf.h ****  * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
  17:../../iot_link/os/liteos/base/include/cm-tlsf.h ****  * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
  18:../../iot_link/os/liteos/base/include/cm-tlsf.h ****  * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
  19:../../iot_link/os/liteos/base/include/cm-tlsf.h ****  * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
  20:../../iot_link/os/liteos/base/include/cm-tlsf.h ****  * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
  21:../../iot_link/os/liteos/base/include/cm-tlsf.h ****  * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
  22:../../iot_link/os/liteos/base/include/cm-tlsf.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
  23:../../iot_link/os/liteos/base/include/cm-tlsf.h ****  * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
  24:../../iot_link/os/liteos/base/include/cm-tlsf.h ****  * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  25:../../iot_link/os/liteos/base/include/cm-tlsf.h ****  *---------------------------------------------------------------------------*/
  26:../../iot_link/os/liteos/base/include/cm-tlsf.h **** /*----------------------------------------------------------------------------
  27:../../iot_link/os/liteos/base/include/cm-tlsf.h ****  * Notice of Export Control Law
  28:../../iot_link/os/liteos/base/include/cm-tlsf.h ****  * ===============================================
  29:../../iot_link/os/liteos/base/include/cm-tlsf.h ****  * Huawei LiteOS may be subject to applicable export control laws and regulations, which might
  30:../../iot_link/os/liteos/base/include/cm-tlsf.h ****  * include those applicable to Huawei LiteOS of U.S. and the country in which you are located.
  31:../../iot_link/os/liteos/base/include/cm-tlsf.h ****  * Import, export and usage of Huawei LiteOS in any manner by you shall be in compliance with such
  32:../../iot_link/os/liteos/base/include/cm-tlsf.h ****  * applicable export control laws and regulations.
ARM GAS  C:\Users\LuckyE\AppData\Local\Temp\cc6Ct15h.s 			page 2


  33:../../iot_link/os/liteos/base/include/cm-tlsf.h ****  *---------------------------------------------------------------------------*/
  34:../../iot_link/os/liteos/base/include/cm-tlsf.h **** 
  35:../../iot_link/os/liteos/base/include/cm-tlsf.h **** #ifndef __CM_TLSF_H__
  36:../../iot_link/os/liteos/base/include/cm-tlsf.h **** #define __CM_TLSF_H__
  37:../../iot_link/os/liteos/base/include/cm-tlsf.h **** 
  38:../../iot_link/os/liteos/base/include/cm-tlsf.h **** #include <list.h>
  39:../../iot_link/os/liteos/base/include/cm-tlsf.h **** #include "los_common.h"
  40:../../iot_link/os/liteos/base/include/cm-tlsf.h **** 
  41:../../iot_link/os/liteos/base/include/cm-tlsf.h **** #include "chunk.h"
  42:../../iot_link/os/liteos/base/include/cm-tlsf.h **** 
  43:../../iot_link/os/liteos/base/include/cm-tlsf.h **** /*
  44:../../iot_link/os/liteos/base/include/cm-tlsf.h ****  * chunks are inserted to chunk lists in a 2d "chunk_t *" array,
  45:../../iot_link/os/liteos/base/include/cm-tlsf.h ****  * "chunks [max_nr_fl] [max_nr_sl]" according to their size:
  46:../../iot_link/os/liteos/base/include/cm-tlsf.h ****  *
  47:../../iot_link/os/liteos/base/include/cm-tlsf.h ****  * the index in the 1st level is the last (most-significant) bit set:
  48:../../iot_link/os/liteos/base/include/cm-tlsf.h ****  *
  49:../../iot_link/os/liteos/base/include/cm-tlsf.h ****  *     fl_idx = fls (size);
  50:../../iot_link/os/liteos/base/include/cm-tlsf.h ****  *
  51:../../iot_link/os/liteos/base/include/cm-tlsf.h ****  * the index in the 2nd level is SL_BITS bits followed the bit:
  52:../../iot_link/os/liteos/base/include/cm-tlsf.h ****  *
  53:../../iot_link/os/liteos/base/include/cm-tlsf.h ****  *     sl_idx = (size - (1 << fl_idx)) >> (fl_idx - SL_BITS) =
  54:../../iot_link/os/liteos/base/include/cm-tlsf.h ****  *            = (size >> (fl_idx - SL_BITS)) - (1 << SL_BITS);
  55:../../iot_link/os/liteos/base/include/cm-tlsf.h ****  *
  56:../../iot_link/os/liteos/base/include/cm-tlsf.h ****  * given a size with the value of 74, its binary value is:
  57:../../iot_link/os/liteos/base/include/cm-tlsf.h ****  *
  58:../../iot_link/os/liteos/base/include/cm-tlsf.h ****  *     size = 74 = 0b01001010:
  59:../../iot_link/os/liteos/base/include/cm-tlsf.h ****  *
  60:../../iot_link/os/liteos/base/include/cm-tlsf.h ****  * fl_idx = 6
  61:../../iot_link/os/liteos/base/include/cm-tlsf.h ****  *          |
  62:../../iot_link/os/liteos/base/include/cm-tlsf.h ****  *        7 6 5 4 3 2 1 0
  63:../../iot_link/os/liteos/base/include/cm-tlsf.h ****  *      +-----------------+
  64:../../iot_link/os/liteos/base/include/cm-tlsf.h ****  *      | 0 1 0 0 1 0 1 0 |
  65:../../iot_link/os/liteos/base/include/cm-tlsf.h ****  *      +-----------------+
  66:../../iot_link/os/liteos/base/include/cm-tlsf.h ****  *        7 6 5 4 3 2 1 0
  67:../../iot_link/os/liteos/base/include/cm-tlsf.h ****  * sl_idx =   0 0          0 if SL_BITS = 2
  68:../../iot_link/os/liteos/base/include/cm-tlsf.h ****  * sl_idx =   0 0 1        1 if SL_BITS = 3
  69:../../iot_link/os/liteos/base/include/cm-tlsf.h ****  * sl_idx =   0 0 1 0      2 if SL_BITS = 4
  70:../../iot_link/os/liteos/base/include/cm-tlsf.h ****  *
  71:../../iot_link/os/liteos/base/include/cm-tlsf.h ****  * but we only support 2 or 3 as the value of SL_BITS, so sl_bmap can be a
  72:../../iot_link/os/liteos/base/include/cm-tlsf.h ****  * array of uint8_t
  73:../../iot_link/os/liteos/base/include/cm-tlsf.h ****  */
  74:../../iot_link/os/liteos/base/include/cm-tlsf.h **** 
  75:../../iot_link/os/liteos/base/include/cm-tlsf.h **** #define SL_BITS                 2   /* valid value only 2 or 3 */
  76:../../iot_link/os/liteos/base/include/cm-tlsf.h **** 
  77:../../iot_link/os/liteos/base/include/cm-tlsf.h **** /*
  78:../../iot_link/os/liteos/base/include/cm-tlsf.h ****  * the minimum chunks managed is sizeof (chunk_t) which size is:
  79:../../iot_link/os/liteos/base/include/cm-tlsf.h ****  *
  80:../../iot_link/os/liteos/base/include/cm-tlsf.h ****  *     4 * sizeof (uintptr_t)
  81:../../iot_link/os/liteos/base/include/cm-tlsf.h ****  *
  82:../../iot_link/os/liteos/base/include/cm-tlsf.h ****  * so fl_idx is always greater or equal to:
  83:../../iot_link/os/liteos/base/include/cm-tlsf.h ****  *
  84:../../iot_link/os/liteos/base/include/cm-tlsf.h ****  *     fls (sizeof (chunk_t))
  85:../../iot_link/os/liteos/base/include/cm-tlsf.h ****  *
  86:../../iot_link/os/liteos/base/include/cm-tlsf.h ****  * so fl_idx from [0 ~ fls (sizeof (chunk_t)) - 1] will never be used for
  87:../../iot_link/os/liteos/base/include/cm-tlsf.h ****  * space saving purpose, we use the following index map:
  88:../../iot_link/os/liteos/base/include/cm-tlsf.h ****  *
  89:../../iot_link/os/liteos/base/include/cm-tlsf.h ****  *     real idx - fl_idx
ARM GAS  C:\Users\LuckyE\AppData\Local\Temp\cc6Ct15h.s 			page 3


  90:../../iot_link/os/liteos/base/include/cm-tlsf.h ****  *            0 - fls (sizeof (chunk_t))
  91:../../iot_link/os/liteos/base/include/cm-tlsf.h ****  *            1 - fls (sizeof (chunk_t)) + 1
  92:../../iot_link/os/liteos/base/include/cm-tlsf.h ****  *          ... - ...
  93:../../iot_link/os/liteos/base/include/cm-tlsf.h ****  *
  94:../../iot_link/os/liteos/base/include/cm-tlsf.h ****  * so the 'real idx' to fl_idx have a fixed gap (called 'bias' here):
  95:../../iot_link/os/liteos/base/include/cm-tlsf.h ****  *
  96:../../iot_link/os/liteos/base/include/cm-tlsf.h ****  *     bias = fls (sizeof (chunk_t)) == log2 (sizeof (chunk_t))
  97:../../iot_link/os/liteos/base/include/cm-tlsf.h ****  */
  98:../../iot_link/os/liteos/base/include/cm-tlsf.h **** 
  99:../../iot_link/os/liteos/base/include/cm-tlsf.h **** enum
 100:../../iot_link/os/liteos/base/include/cm-tlsf.h **** {
 101:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     MIN_CHUNK_SIZE_LOG2 = sizeof (chunk_t) ==  8 ? 3    /* 16-bit target */
 102:../../iot_link/os/liteos/base/include/cm-tlsf.h ****                         : sizeof (chunk_t) == 16 ? 4    /* 32-bit target */
 103:../../iot_link/os/liteos/base/include/cm-tlsf.h ****                         : sizeof (chunk_t) == 32 ? 5    /* 64-bit target */
 104:../../iot_link/os/liteos/base/include/cm-tlsf.h ****                         : 0,
 105:../../iot_link/os/liteos/base/include/cm-tlsf.h **** };
 106:../../iot_link/os/liteos/base/include/cm-tlsf.h **** 
 107:../../iot_link/os/liteos/base/include/cm-tlsf.h **** enum
 108:../../iot_link/os/liteos/base/include/cm-tlsf.h **** {
 109:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     FL_IDX_MAX_008K = 13,
 110:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     FL_IDX_MAX_016K,
 111:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     FL_IDX_MAX_032K,
 112:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     FL_IDX_MAX_064K,
 113:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     FL_IDX_MAX_128K,
 114:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     FL_IDX_MAX_256K,
 115:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     FL_IDX_MAX_512K,
 116:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     FL_IDX_MAX_001M,
 117:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     FL_IDX_MAX_002M,
 118:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     FL_IDX_MAX_004M,
 119:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     FL_IDX_MAX_008M,
 120:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     FL_IDX_MAX_016M,
 121:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     FL_IDX_MAX_032M,
 122:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     FL_IDX_MAX_064M,
 123:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     FL_IDX_MAX_128M,
 124:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     FL_IDX_MAX_256M,
 125:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     FL_IDX_MAX_512M,
 126:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     FL_IDX_MAX_001G,
 127:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     FL_IDX_MAX_002G,
 128:../../iot_link/os/liteos/base/include/cm-tlsf.h **** };
 129:../../iot_link/os/liteos/base/include/cm-tlsf.h **** 
 130:../../iot_link/os/liteos/base/include/cm-tlsf.h **** #define FL_IDX_MAX              (FL_IDX_MAX_512M)
 131:../../iot_link/os/liteos/base/include/cm-tlsf.h **** #define FL_IDX_BIAS             (MIN_CHUNK_SIZE_LOG2)
 132:../../iot_link/os/liteos/base/include/cm-tlsf.h **** #define FL_IDXES                (FL_IDX_MAX - FL_IDX_BIAS)
 133:../../iot_link/os/liteos/base/include/cm-tlsf.h **** #define SL_IDXES                (1 << SL_BITS)
 134:../../iot_link/os/liteos/base/include/cm-tlsf.h **** 
 135:../../iot_link/os/liteos/base/include/cm-tlsf.h **** #define SL_IDX_MAX              (SL_IDXES - 1)
 136:../../iot_link/os/liteos/base/include/cm-tlsf.h **** 
 137:../../iot_link/os/liteos/base/include/cm-tlsf.h **** typedef struct chunk_mgr
 138:../../iot_link/os/liteos/base/include/cm-tlsf.h **** {
 139:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     uint32_t  fl_bmap;
 140:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     uint8_t   sl_bmap [FL_IDXES];
 141:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     chunk_t * chunks  [FL_IDXES] [SL_IDXES];
 142:../../iot_link/os/liteos/base/include/cm-tlsf.h **** } chunk_mgr_t;
 143:../../iot_link/os/liteos/base/include/cm-tlsf.h **** 
 144:../../iot_link/os/liteos/base/include/cm-tlsf.h **** #define CTZ(x)                  (32 - CLZ (~(x) & ((x) - 1)))
 145:../../iot_link/os/liteos/base/include/cm-tlsf.h **** 
 146:../../iot_link/os/liteos/base/include/cm-tlsf.h **** /**
ARM GAS  C:\Users\LuckyE\AppData\Local\Temp\cc6Ct15h.s 			page 4


 147:../../iot_link/os/liteos/base/include/cm-tlsf.h ****  * __cm_init - initialize chunk manager
 148:../../iot_link/os/liteos/base/include/cm-tlsf.h ****  * @cm: the given chunk manager
 149:../../iot_link/os/liteos/base/include/cm-tlsf.h ****  *
 150:../../iot_link/os/liteos/base/include/cm-tlsf.h ****  * return: 0 on success, negtive value on error
 151:../../iot_link/os/liteos/base/include/cm-tlsf.h ****  */
 152:../../iot_link/os/liteos/base/include/cm-tlsf.h **** 
 153:../../iot_link/os/liteos/base/include/cm-tlsf.h **** static inline int __cm_init (chunk_mgr_t * cm)
 154:../../iot_link/os/liteos/base/include/cm-tlsf.h **** {
 155:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     return 0;
 156:../../iot_link/os/liteos/base/include/cm-tlsf.h **** }
 157:../../iot_link/os/liteos/base/include/cm-tlsf.h **** 
 158:../../iot_link/os/liteos/base/include/cm-tlsf.h **** static inline int __get_fl_idx (size_t size)
 159:../../iot_link/os/liteos/base/include/cm-tlsf.h **** {
 160:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     return 31 - CLZ (size);     /* size is never 0 */
 161:../../iot_link/os/liteos/base/include/cm-tlsf.h **** }
 162:../../iot_link/os/liteos/base/include/cm-tlsf.h **** 
 163:../../iot_link/os/liteos/base/include/cm-tlsf.h **** static inline int __get_sl_idx (size_t size, int fl_idx)
 164:../../iot_link/os/liteos/base/include/cm-tlsf.h **** {
 165:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     return (size >> (fl_idx - SL_BITS)) - (1 << SL_BITS);
 166:../../iot_link/os/liteos/base/include/cm-tlsf.h **** }
 167:../../iot_link/os/liteos/base/include/cm-tlsf.h **** 
 168:../../iot_link/os/liteos/base/include/cm-tlsf.h **** static inline int __cm_put_chunk (chunk_mgr_t * cm, chunk_t * chunk)
 169:../../iot_link/os/liteos/base/include/cm-tlsf.h **** {
 170:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     int fl_idx = __get_fl_idx (chunk->size);
 171:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     int sl_idx = __get_sl_idx (chunk->size, fl_idx);
 172:../../iot_link/os/liteos/base/include/cm-tlsf.h **** 
 173:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     if (fl_idx >= FL_IDX_MAX)
 174:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     {
 175:../../iot_link/os/liteos/base/include/cm-tlsf.h ****         return -1;
 176:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     }
 177:../../iot_link/os/liteos/base/include/cm-tlsf.h **** 
 178:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     cm->fl_bmap |= 1 << fl_idx;
 179:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     cm->sl_bmap [fl_idx - FL_IDX_BIAS] |= 1 << sl_idx;
 180:../../iot_link/os/liteos/base/include/cm-tlsf.h **** 
 181:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     fl_idx -= FL_IDX_BIAS;
 182:../../iot_link/os/liteos/base/include/cm-tlsf.h **** 
 183:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     if (cm->chunks [fl_idx][sl_idx] == NULL)
 184:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     {
 185:../../iot_link/os/liteos/base/include/cm-tlsf.h ****         dlist_init (&chunk->node);
 186:../../iot_link/os/liteos/base/include/cm-tlsf.h ****         cm->chunks [fl_idx][sl_idx] = chunk;
 187:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     }
 188:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     else
 189:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     {
 190:../../iot_link/os/liteos/base/include/cm-tlsf.h ****         dlist_add_tail (&cm->chunks [fl_idx][sl_idx]->node, &chunk->node);
 191:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     }
 192:../../iot_link/os/liteos/base/include/cm-tlsf.h **** 
 193:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     return 0;
 194:../../iot_link/os/liteos/base/include/cm-tlsf.h **** }
 195:../../iot_link/os/liteos/base/include/cm-tlsf.h **** 
 196:../../iot_link/os/liteos/base/include/cm-tlsf.h **** /**
 197:../../iot_link/os/liteos/base/include/cm-tlsf.h ****  * __cm_del_chunk - delete a chunk from a heap (for allocating or merging)
 198:../../iot_link/os/liteos/base/include/cm-tlsf.h ****  * @heap:  the given heap
 199:../../iot_link/os/liteos/base/include/cm-tlsf.h ****  * @chunk: the chunk to delete
 200:../../iot_link/os/liteos/base/include/cm-tlsf.h ****  *
 201:../../iot_link/os/liteos/base/include/cm-tlsf.h ****  * return: NA
 202:../../iot_link/os/liteos/base/include/cm-tlsf.h ****  */
 203:../../iot_link/os/liteos/base/include/cm-tlsf.h **** 
ARM GAS  C:\Users\LuckyE\AppData\Local\Temp\cc6Ct15h.s 			page 5


 204:../../iot_link/os/liteos/base/include/cm-tlsf.h **** static inline void __cm_del_chunk (chunk_mgr_t * cm, chunk_t * chunk)
 205:../../iot_link/os/liteos/base/include/cm-tlsf.h **** {
 206:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     int fl_idx = __get_fl_idx (chunk->size);
 207:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     int sl_idx = __get_sl_idx (chunk->size, fl_idx);
 208:../../iot_link/os/liteos/base/include/cm-tlsf.h **** 
 209:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     fl_idx -= FL_IDX_BIAS;
 210:../../iot_link/os/liteos/base/include/cm-tlsf.h **** 
 211:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     if (!dlist_empty (&chunk->node))
 212:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     {
 213:../../iot_link/os/liteos/base/include/cm-tlsf.h ****         if (cm->chunks [fl_idx][sl_idx] == chunk)
 214:../../iot_link/os/liteos/base/include/cm-tlsf.h ****         {
 215:../../iot_link/os/liteos/base/include/cm-tlsf.h ****             cm->chunks [fl_idx][sl_idx] = container_of (chunk->node.next, chunk_t, node);
 216:../../iot_link/os/liteos/base/include/cm-tlsf.h ****         }
 217:../../iot_link/os/liteos/base/include/cm-tlsf.h **** 
 218:../../iot_link/os/liteos/base/include/cm-tlsf.h ****         dlist_del (&chunk->node);
 219:../../iot_link/os/liteos/base/include/cm-tlsf.h **** 
 220:../../iot_link/os/liteos/base/include/cm-tlsf.h ****         return;
 221:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     }
 222:../../iot_link/os/liteos/base/include/cm-tlsf.h **** 
 223:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     cm->chunks [fl_idx][sl_idx] = NULL;
 224:../../iot_link/os/liteos/base/include/cm-tlsf.h **** 
 225:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     cm->sl_bmap [fl_idx] &= ~(1 << sl_idx);
 226:../../iot_link/os/liteos/base/include/cm-tlsf.h **** 
 227:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     if (cm->sl_bmap [fl_idx] == 0)
 228:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     {
 229:../../iot_link/os/liteos/base/include/cm-tlsf.h ****         cm->fl_bmap &= ~(1 << (fl_idx + FL_IDX_BIAS));
 230:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     }
 231:../../iot_link/os/liteos/base/include/cm-tlsf.h **** }
 232:../../iot_link/os/liteos/base/include/cm-tlsf.h **** 
 233:../../iot_link/os/liteos/base/include/cm-tlsf.h **** /**
 234:../../iot_link/os/liteos/base/include/cm-tlsf.h ****  * __cm_get_chunk - get a proper chunk in the heap
 235:../../iot_link/os/liteos/base/include/cm-tlsf.h ****  * @heap:  the heap to allocate from
 236:../../iot_link/os/liteos/base/include/cm-tlsf.h ****  * @bytes: size of memory in bytes to allocate
 237:../../iot_link/os/liteos/base/include/cm-tlsf.h ****  *
 238:../../iot_link/os/liteos/base/include/cm-tlsf.h ****  * return: the proper chunk found, or NULL if not found
 239:../../iot_link/os/liteos/base/include/cm-tlsf.h ****  */
 240:../../iot_link/os/liteos/base/include/cm-tlsf.h **** 
 241:../../iot_link/os/liteos/base/include/cm-tlsf.h **** static inline chunk_t * __cm_get_chunk (chunk_mgr_t * cm, size_t bytes)
 242:../../iot_link/os/liteos/base/include/cm-tlsf.h **** {
 243:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     int       fl_idx;
 244:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     int       sl_idx;
 245:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     uint32_t  fl_bmap;
 246:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     uint32_t  sl_bmap;
 247:../../iot_link/os/liteos/base/include/cm-tlsf.h **** 
 248:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     fl_idx = __get_fl_idx (bytes);
 249:../../iot_link/os/liteos/base/include/cm-tlsf.h **** 
 250:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     bytes += (1 << (fl_idx - SL_BITS)) - 1;
 251:../../iot_link/os/liteos/base/include/cm-tlsf.h **** 
 252:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     fl_idx = __get_fl_idx (bytes);
 253:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     sl_idx = __get_sl_idx (bytes, fl_idx);
 254:../../iot_link/os/liteos/base/include/cm-tlsf.h **** 
 255:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     if (fl_idx > FL_IDX_MAX)
 256:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     {
 257:../../iot_link/os/liteos/base/include/cm-tlsf.h ****         return NULL;
 258:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     }
 259:../../iot_link/os/liteos/base/include/cm-tlsf.h **** 
 260:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     sl_bmap = cm->sl_bmap [fl_idx - FL_IDX_BIAS] & (0xffffffffu << sl_idx);
ARM GAS  C:\Users\LuckyE\AppData\Local\Temp\cc6Ct15h.s 			page 6


 261:../../iot_link/os/liteos/base/include/cm-tlsf.h **** 
 262:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     if (sl_bmap == 0)
 263:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     {
 264:../../iot_link/os/liteos/base/include/cm-tlsf.h ****         fl_bmap = cm->fl_bmap & (0xffffffffu << (fl_idx + 1));
 265:../../iot_link/os/liteos/base/include/cm-tlsf.h **** 
 266:../../iot_link/os/liteos/base/include/cm-tlsf.h ****         if (fl_bmap == 0)
 267:../../iot_link/os/liteos/base/include/cm-tlsf.h ****         {
 268:../../iot_link/os/liteos/base/include/cm-tlsf.h ****             return NULL;
 269:../../iot_link/os/liteos/base/include/cm-tlsf.h ****         }
 270:../../iot_link/os/liteos/base/include/cm-tlsf.h **** 
 271:../../iot_link/os/liteos/base/include/cm-tlsf.h ****         fl_idx  = CTZ (fl_bmap);
 272:../../iot_link/os/liteos/base/include/cm-tlsf.h ****         sl_bmap = cm->sl_bmap [fl_idx - FL_IDX_BIAS];
 273:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     }
 274:../../iot_link/os/liteos/base/include/cm-tlsf.h **** 
 275:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     sl_idx = CTZ (sl_bmap);
 276:../../iot_link/os/liteos/base/include/cm-tlsf.h **** 
 277:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     return cm->chunks [fl_idx - FL_IDX_BIAS] [sl_idx];
 278:../../iot_link/os/liteos/base/include/cm-tlsf.h **** }
 279:../../iot_link/os/liteos/base/include/cm-tlsf.h **** 
 280:../../iot_link/os/liteos/base/include/cm-tlsf.h **** #if (LOSCFG_MEM_STATISTICS == YES)
 281:../../iot_link/os/liteos/base/include/cm-tlsf.h **** static inline size_t __get_max_free (chunk_mgr_t * cm)
 282:../../iot_link/os/liteos/base/include/cm-tlsf.h **** {
  27              		.loc 1 282 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
 283:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     int       fl_idx;
 284:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     int       sl_idx;
 285:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     dlist_t * itr;
 286:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     size_t    max;
 287:../../iot_link/os/liteos/base/include/cm-tlsf.h **** 
 288:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     if (cm->fl_bmap == 0)
  33              		.loc 1 288 0
  34 0000 0368     		ldr	r3, [r0]
  35 0002 FBB1     		cbz	r3, .L7
 289:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     {
 290:../../iot_link/os/liteos/base/include/cm-tlsf.h ****         return 0;
 291:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     }
 292:../../iot_link/os/liteos/base/include/cm-tlsf.h **** 
 293:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     /* find the highest bit in fl_bmap */
 294:../../iot_link/os/liteos/base/include/cm-tlsf.h **** 
 295:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     fl_idx = CLZ (1) - CLZ (cm->fl_bmap) - FL_IDX_BIAS;
  36              		.loc 1 295 0
  37 0004 B3FA83F3 		clz	r3, r3
  38 0008 C3F11B03 		rsb	r3, r3, #27
  39              	.LVL1:
 296:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     sl_idx = CLZ (1) - CLZ (cm->sl_bmap [fl_idx]);
  40              		.loc 1 296 0
  41 000c C218     		adds	r2, r0, r3
 297:../../iot_link/os/liteos/base/include/cm-tlsf.h **** 
 298:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     if (fl_idx >= FL_IDXES)
  42              		.loc 1 298 0
  43 000e 182B     		cmp	r3, #24
 296:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     sl_idx = CLZ (1) - CLZ (cm->sl_bmap [fl_idx]);
  44              		.loc 1 296 0
ARM GAS  C:\Users\LuckyE\AppData\Local\Temp\cc6Ct15h.s 			page 7


  45 0010 1279     		ldrb	r2, [r2, #4]	@ zero_extendqisi2
  46 0012 B2FA82F2 		clz	r2, r2
  47              	.LVL2:
  48              		.loc 1 298 0
  49 0016 15DC     		bgt	.L7
 296:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     sl_idx = CLZ (1) - CLZ (cm->sl_bmap [fl_idx]);
  50              		.loc 1 296 0
  51 0018 C2F11F02 		rsb	r2, r2, #31
  52              	.LVL3:
 299:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     {
 300:../../iot_link/os/liteos/base/include/cm-tlsf.h ****         return 0;
 301:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     }
 302:../../iot_link/os/liteos/base/include/cm-tlsf.h **** 
 303:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     if (sl_idx >= SL_IDXES)
  53              		.loc 1 303 0
  54 001c 032A     		cmp	r2, #3
  55 001e 11DC     		bgt	.L7
 304:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     {
 305:../../iot_link/os/liteos/base/include/cm-tlsf.h ****         return 0;
 306:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     }
 307:../../iot_link/os/liteos/base/include/cm-tlsf.h **** 
 308:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     max = (cm->chunks [fl_idx][sl_idx])->size;
  56              		.loc 1 308 0
  57 0020 02EB8303 		add	r3, r2, r3, lsl #2
  58              	.LVL4:
  59 0024 0833     		adds	r3, r3, #8
  60 0026 50F82330 		ldr	r3, [r0, r3, lsl #2]
  61 002a 5868     		ldr	r0, [r3, #4]
  62              	.LVL5:
 309:../../iot_link/os/liteos/base/include/cm-tlsf.h **** 
 310:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     dlist_foreach (itr, &cm->chunks [fl_idx][sl_idx]->node)
  63              		.loc 1 310 0
  64 002c DA68     		ldr	r2, [r3, #12]
  65              	.LVL6:
  66 002e 0833     		adds	r3, r3, #8
  67              	.L3:
  68              		.loc 1 310 0 is_stmt 0 discriminator 1
  69 0030 9A42     		cmp	r2, r3
  70 0032 00D1     		bne	.L4
  71 0034 7047     		bx	lr
  72              	.L4:
  73              	.LVL7:
  74 0036 52F8041C 		ldr	r1, [r2, #-4]
  75              		.loc 1 310 0
  76 003a 5268     		ldr	r2, [r2, #4]
  77              	.LVL8:
  78 003c 8842     		cmp	r0, r1
  79 003e 38BF     		it	cc
  80 0040 0846     		movcc	r0, r1
  81              	.LVL9:
  82 0042 F5E7     		b	.L3
  83              	.LVL10:
  84              	.L7:
 290:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     }
  85              		.loc 1 290 0 is_stmt 1
  86 0044 0020     		movs	r0, #0
  87              	.LVL11:
ARM GAS  C:\Users\LuckyE\AppData\Local\Temp\cc6Ct15h.s 			page 8


 311:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     {
 312:../../iot_link/os/liteos/base/include/cm-tlsf.h ****         chunk_t * chunk = container_of (itr, chunk_t, node);
 313:../../iot_link/os/liteos/base/include/cm-tlsf.h **** 
 314:../../iot_link/os/liteos/base/include/cm-tlsf.h ****         if (chunk->size > max)
 315:../../iot_link/os/liteos/base/include/cm-tlsf.h ****         {
 316:../../iot_link/os/liteos/base/include/cm-tlsf.h ****             max = chunk->size;
 317:../../iot_link/os/liteos/base/include/cm-tlsf.h ****         }
 318:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     }
 319:../../iot_link/os/liteos/base/include/cm-tlsf.h **** 
 320:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     return max;
 321:../../iot_link/os/liteos/base/include/cm-tlsf.h **** }
  88              		.loc 1 321 0
  89 0046 7047     		bx	lr
  90              		.cfi_endproc
  91              	.LFE309:
  93              		.section	.text.__put_chunk,"ax",%progbits
  94              		.align	1
  95              		.syntax unified
  96              		.thumb
  97              		.thumb_func
  98              		.fpu fpv4-sp-d16
 100              	__put_chunk:
 101              	.LFB314:
 102              		.file 2 "../../iot_link/os/liteos/base/mem/heap/los_heap.c"
   1:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** /*----------------------------------------------------------------------------
   2:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****  * Copyright (c) <2013-2015>, <Huawei Technologies Co., Ltd>
   3:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****  * All rights reserved.
   4:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****  * Redistribution and use in source and binary forms, with or without modification,
   5:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****  * are permitted provided that the following conditions are met:
   6:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****  * 1. Redistributions of source code must retain the above copyright notice, this list of
   7:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****  * conditions and the following disclaimer.
   8:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****  * 2. Redistributions in binary form must reproduce the above copyright notice, this list
   9:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****  * of conditions and the following disclaimer in the documentation and/or other materials
  10:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****  * provided with the distribution.
  11:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****  * 3. Neither the name of the copyright holder nor the names of its contributors may be used
  12:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****  * to endorse or promote products derived from this software without specific prior written
  13:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****  * permission.
  14:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  15:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
  16:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****  * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
  17:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****  * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
  18:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****  * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
  19:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****  * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
  20:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****  * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
  21:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****  * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
  22:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
  23:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****  * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
  24:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****  * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  25:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****  *---------------------------------------------------------------------------*/
  26:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** /*----------------------------------------------------------------------------
  27:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****  * Notice of Export Control Law
  28:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****  * ===============================================
  29:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****  * Huawei LiteOS may be subject to applicable export control laws and regulations, which might
  30:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****  * include those applicable to Huawei LiteOS of U.S. and the country in which you are located.
  31:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****  * Import, export and usage of Huawei LiteOS in any manner by you shall be in compliance with such
  32:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****  * applicable export control laws and regulations.
  33:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****  *---------------------------------------------------------------------------*/
ARM GAS  C:\Users\LuckyE\AppData\Local\Temp\cc6Ct15h.s 			page 9


  34:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
  35:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** #include <los_config.h>
  36:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** #include <los_printf.h>
  37:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
  38:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** #if (LOSCFG_HEAP_IMPROVED == YES)
  39:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
  40:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** #include <string.h>
  41:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
  42:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** #include <heap.h>
  43:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** #include <mem.h>
  44:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
  45:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** static inline int __put_chunk (heap_t * heap, chunk_t * chunk)
  46:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** {
 103              		.loc 2 46 0
 104              		.cfi_startproc
 105              		@ args = 0, pretend = 0, frame = 0
 106              		@ frame_needed = 0, uses_anonymous_args = 0
 107              	.LVL12:
 108 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 109              	.LCFI0:
 110              		.cfi_def_cfa_offset 20
 111              		.cfi_offset 4, -20
 112              		.cfi_offset 5, -16
 113              		.cfi_offset 6, -12
 114              		.cfi_offset 7, -8
 115              		.cfi_offset 14, -4
 116              	.LBB92:
 117              	.LBB93:
 170:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     int sl_idx = __get_sl_idx (chunk->size, fl_idx);
 118              		.loc 1 170 0
 119 0002 4C68     		ldr	r4, [r1, #4]
 120              	.LVL13:
 121              	.LBB94:
 122              	.LBB95:
 160:../../iot_link/os/liteos/base/include/cm-tlsf.h **** }
 123              		.loc 1 160 0
 124 0004 B4FA84F2 		clz	r2, r4
 125 0008 C2F11F06 		rsb	r6, r2, #31
 126              	.LVL14:
 127              	.LBE95:
 128              	.LBE94:
 129              	.LBB96:
 130              	.LBB97:
 165:../../iot_link/os/liteos/base/include/cm-tlsf.h **** }
 131              		.loc 1 165 0
 132 000c C2F11D03 		rsb	r3, r2, #29
 133 0010 24FA03F3 		lsr	r3, r4, r3
 134              	.LBE97:
 135              	.LBE96:
 173:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     {
 136              		.loc 1 173 0
 137 0014 1C2E     		cmp	r6, #28
 138              	.LBB99:
 139              	.LBB98:
 165:../../iot_link/os/liteos/base/include/cm-tlsf.h **** }
 140              		.loc 1 165 0
 141 0016 A3F10403 		sub	r3, r3, #4
ARM GAS  C:\Users\LuckyE\AppData\Local\Temp\cc6Ct15h.s 			page 10


 142              	.LVL15:
 143              	.LBE98:
 144              	.LBE99:
 173:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     {
 145              		.loc 1 173 0
 146 001a 2CDC     		bgt	.L12
 178:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     cm->sl_bmap [fl_idx - FL_IDX_BIAS] |= 1 << sl_idx;
 147              		.loc 1 178 0
 148 001c 0768     		ldr	r7, [r0]
 149 001e 0125     		movs	r5, #1
 179:../../iot_link/os/liteos/base/include/cm-tlsf.h **** 
 150              		.loc 1 179 0
 151 0020 C2F11B02 		rsb	r2, r2, #27
 178:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     cm->sl_bmap [fl_idx - FL_IDX_BIAS] |= 1 << sl_idx;
 152              		.loc 1 178 0
 153 0024 05FA06F6 		lsl	r6, r5, r6
 154 0028 3E43     		orrs	r6, r6, r7
 179:../../iot_link/os/liteos/base/include/cm-tlsf.h **** 
 155              		.loc 1 179 0
 156 002a 8718     		adds	r7, r0, r2
 178:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     cm->sl_bmap [fl_idx - FL_IDX_BIAS] |= 1 << sl_idx;
 157              		.loc 1 178 0
 158 002c 0660     		str	r6, [r0]
 179:../../iot_link/os/liteos/base/include/cm-tlsf.h **** 
 159              		.loc 1 179 0
 160 002e 3E79     		ldrb	r6, [r7, #4]	@ zero_extendqisi2
 161 0030 9D40     		lsls	r5, r5, r3
 162 0032 03EB8203 		add	r3, r3, r2, lsl #2
 163 0036 3543     		orrs	r5, r5, r6
 164 0038 00EB8303 		add	r3, r0, r3, lsl #2
 165 003c 3D71     		strb	r5, [r7, #4]
 166              	.LVL16:
 183:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     {
 167              		.loc 1 183 0
 168 003e 1D6A     		ldr	r5, [r3, #32]
 169 0040 01F10802 		add	r2, r1, #8
 170              	.LVL17:
 171 0044 7DB9     		cbnz	r5, .L10
 172              	.LVL18:
 173              	.LBB100:
 174              	.LBB101:
 175              		.file 3 "../../iot_link/os/liteos/include/list.h"
   1:../../iot_link/os/liteos/include/list.h **** /*----------------------------------------------------------------------------
   2:../../iot_link/os/liteos/include/list.h ****  * Copyright (c) <2018>, <Huawei Technologies Co., Ltd>
   3:../../iot_link/os/liteos/include/list.h ****  * All rights reserved.
   4:../../iot_link/os/liteos/include/list.h ****  * Redistribution and use in source and binary forms, with or without modification,
   5:../../iot_link/os/liteos/include/list.h ****  * are permitted provided that the following conditions are met:
   6:../../iot_link/os/liteos/include/list.h ****  * 1. Redistributions of source code must retain the above copyright notice, this list of
   7:../../iot_link/os/liteos/include/list.h ****  * conditions and the following disclaimer.
   8:../../iot_link/os/liteos/include/list.h ****  * 2. Redistributions in binary form must reproduce the above copyright notice, this list
   9:../../iot_link/os/liteos/include/list.h ****  * of conditions and the following disclaimer in the documentation and/or other materials
  10:../../iot_link/os/liteos/include/list.h ****  * provided with the distribution.
  11:../../iot_link/os/liteos/include/list.h ****  * 3. Neither the name of the copyright holder nor the names of its contributors may be used
  12:../../iot_link/os/liteos/include/list.h ****  * to endorse or promote products derived from this software without specific prior written
  13:../../iot_link/os/liteos/include/list.h ****  * permission.
  14:../../iot_link/os/liteos/include/list.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  15:../../iot_link/os/liteos/include/list.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
ARM GAS  C:\Users\LuckyE\AppData\Local\Temp\cc6Ct15h.s 			page 11


  16:../../iot_link/os/liteos/include/list.h ****  * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
  17:../../iot_link/os/liteos/include/list.h ****  * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
  18:../../iot_link/os/liteos/include/list.h ****  * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
  19:../../iot_link/os/liteos/include/list.h ****  * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
  20:../../iot_link/os/liteos/include/list.h ****  * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
  21:../../iot_link/os/liteos/include/list.h ****  * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
  22:../../iot_link/os/liteos/include/list.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
  23:../../iot_link/os/liteos/include/list.h ****  * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
  24:../../iot_link/os/liteos/include/list.h ****  * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  25:../../iot_link/os/liteos/include/list.h ****  *---------------------------------------------------------------------------*/
  26:../../iot_link/os/liteos/include/list.h **** /*----------------------------------------------------------------------------
  27:../../iot_link/os/liteos/include/list.h ****  * Notice of Export Control Law
  28:../../iot_link/os/liteos/include/list.h ****  * ===============================================
  29:../../iot_link/os/liteos/include/list.h ****  * Huawei LiteOS may be subject to applicable export control laws and regulations, which might
  30:../../iot_link/os/liteos/include/list.h ****  * include those applicable to Huawei LiteOS of U.S. and the country in which you are located.
  31:../../iot_link/os/liteos/include/list.h ****  * Import, export and usage of Huawei LiteOS in any manner by you shall be in compliance with such
  32:../../iot_link/os/liteos/include/list.h ****  * applicable export control laws and regulations.
  33:../../iot_link/os/liteos/include/list.h ****  *---------------------------------------------------------------------------*/
  34:../../iot_link/os/liteos/include/list.h **** 
  35:../../iot_link/os/liteos/include/list.h **** #ifndef __LIST_H__
  36:../../iot_link/os/liteos/include/list.h **** #define __LIST_H__
  37:../../iot_link/os/liteos/include/list.h **** 
  38:../../iot_link/os/liteos/include/list.h **** /* double list */
  39:../../iot_link/os/liteos/include/list.h **** 
  40:../../iot_link/os/liteos/include/list.h **** typedef struct dlist
  41:../../iot_link/os/liteos/include/list.h ****     {
  42:../../iot_link/os/liteos/include/list.h ****     struct dlist * prev, * next;
  43:../../iot_link/os/liteos/include/list.h ****     } dlist_t;
  44:../../iot_link/os/liteos/include/list.h **** 
  45:../../iot_link/os/liteos/include/list.h **** /* macros */
  46:../../iot_link/os/liteos/include/list.h **** 
  47:../../iot_link/os/liteos/include/list.h **** /**
  48:../../iot_link/os/liteos/include/list.h ****  * DLIST_INIT - create a empty list head body
  49:../../iot_link/os/liteos/include/list.h ****  */
  50:../../iot_link/os/liteos/include/list.h **** 
  51:../../iot_link/os/liteos/include/list.h **** #define DLIST_INIT(h)           { &(h), &(h) }
  52:../../iot_link/os/liteos/include/list.h **** 
  53:../../iot_link/os/liteos/include/list.h **** /**
  54:../../iot_link/os/liteos/include/list.h ****  * DLIST_DEF - define a empty list head
  55:../../iot_link/os/liteos/include/list.h ****  */
  56:../../iot_link/os/liteos/include/list.h **** 
  57:../../iot_link/os/liteos/include/list.h **** #define DLIST_DEF(name)         dlist_t name = DLIST_INIT (name)
  58:../../iot_link/os/liteos/include/list.h **** 
  59:../../iot_link/os/liteos/include/list.h **** /* inlines */
  60:../../iot_link/os/liteos/include/list.h **** 
  61:../../iot_link/os/liteos/include/list.h **** /* list operations */
  62:../../iot_link/os/liteos/include/list.h **** 
  63:../../iot_link/os/liteos/include/list.h **** static inline void dlist_init (dlist_t * head)
  64:../../iot_link/os/liteos/include/list.h ****     {
  65:../../iot_link/os/liteos/include/list.h ****     head->prev = head->next = head;
 176              		.loc 3 65 0
 177 0046 C1E90222 		strd	r2, r2, [r1, #8]
 178              	.LVL19:
 179              	.LBE101:
 180              	.LBE100:
 186:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     }
 181              		.loc 1 186 0
ARM GAS  C:\Users\LuckyE\AppData\Local\Temp\cc6Ct15h.s 			page 12


 182 004a 1962     		str	r1, [r3, #32]
 183              	.LVL20:
 184              	.L11:
 185              	.LBE93:
 186              	.LBE92:
 187              	.LBB107:
 188              	.LBB108:
 189              		.file 4 "../../iot_link/os/liteos/base/include/heap.h"
   1:../../iot_link/os/liteos/base/include/heap.h **** /*----------------------------------------------------------------------------
   2:../../iot_link/os/liteos/base/include/heap.h ****  * Copyright (c) <2018>, <Huawei Technologies Co., Ltd>
   3:../../iot_link/os/liteos/base/include/heap.h ****  * All rights reserved.
   4:../../iot_link/os/liteos/base/include/heap.h ****  * Redistribution and use in source and binary forms, with or without modification,
   5:../../iot_link/os/liteos/base/include/heap.h ****  * are permitted provided that the following conditions are met:
   6:../../iot_link/os/liteos/base/include/heap.h ****  * 1. Redistributions of source code must retain the above copyright notice, this list of
   7:../../iot_link/os/liteos/base/include/heap.h ****  * conditions and the following disclaimer.
   8:../../iot_link/os/liteos/base/include/heap.h ****  * 2. Redistributions in binary form must reproduce the above copyright notice, this list
   9:../../iot_link/os/liteos/base/include/heap.h ****  * of conditions and the following disclaimer in the documentation and/or other materials
  10:../../iot_link/os/liteos/base/include/heap.h ****  * provided with the distribution.
  11:../../iot_link/os/liteos/base/include/heap.h ****  * 3. Neither the name of the copyright holder nor the names of its contributors may be used
  12:../../iot_link/os/liteos/base/include/heap.h ****  * to endorse or promote products derived from this software without specific prior written
  13:../../iot_link/os/liteos/base/include/heap.h ****  * permission.
  14:../../iot_link/os/liteos/base/include/heap.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  15:../../iot_link/os/liteos/base/include/heap.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
  16:../../iot_link/os/liteos/base/include/heap.h ****  * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
  17:../../iot_link/os/liteos/base/include/heap.h ****  * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
  18:../../iot_link/os/liteos/base/include/heap.h ****  * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
  19:../../iot_link/os/liteos/base/include/heap.h ****  * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
  20:../../iot_link/os/liteos/base/include/heap.h ****  * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
  21:../../iot_link/os/liteos/base/include/heap.h ****  * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
  22:../../iot_link/os/liteos/base/include/heap.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
  23:../../iot_link/os/liteos/base/include/heap.h ****  * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
  24:../../iot_link/os/liteos/base/include/heap.h ****  * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  25:../../iot_link/os/liteos/base/include/heap.h ****  *---------------------------------------------------------------------------*/
  26:../../iot_link/os/liteos/base/include/heap.h **** /*----------------------------------------------------------------------------
  27:../../iot_link/os/liteos/base/include/heap.h ****  * Notice of Export Control Law
  28:../../iot_link/os/liteos/base/include/heap.h ****  * ===============================================
  29:../../iot_link/os/liteos/base/include/heap.h ****  * Huawei LiteOS may be subject to applicable export control laws and regulations, which might
  30:../../iot_link/os/liteos/base/include/heap.h ****  * include those applicable to Huawei LiteOS of U.S. and the country in which you are located.
  31:../../iot_link/os/liteos/base/include/heap.h ****  * Import, export and usage of Huawei LiteOS in any manner by you shall be in compliance with such
  32:../../iot_link/os/liteos/base/include/heap.h ****  * applicable export control laws and regulations.
  33:../../iot_link/os/liteos/base/include/heap.h ****  *---------------------------------------------------------------------------*/
  34:../../iot_link/os/liteos/base/include/heap.h **** 
  35:../../iot_link/os/liteos/base/include/heap.h **** #ifndef __HEAP_H__
  36:../../iot_link/os/liteos/base/include/heap.h **** #define __HEAP_H__
  37:../../iot_link/os/liteos/base/include/heap.h **** 
  38:../../iot_link/os/liteos/base/include/heap.h **** #include <los_config.h>
  39:../../iot_link/os/liteos/base/include/heap.h **** 
  40:../../iot_link/os/liteos/base/include/heap.h **** #include <stddef.h>
  41:../../iot_link/os/liteos/base/include/heap.h **** #include <stdbool.h>
  42:../../iot_link/os/liteos/base/include/heap.h **** 
  43:../../iot_link/os/liteos/base/include/heap.h **** #include <los_mux.h>
  44:../../iot_link/os/liteos/base/include/heap.h **** 
  45:../../iot_link/os/liteos/base/include/heap.h **** #include <los_slab.ph>
  46:../../iot_link/os/liteos/base/include/heap.h **** 
  47:../../iot_link/os/liteos/base/include/heap.h **** #include "chunk.h"
  48:../../iot_link/os/liteos/base/include/heap.h **** 
  49:../../iot_link/os/liteos/base/include/heap.h **** #if !defined (LOSCFG_CONFIG_CM_TLSF) && !defined (LOSCFG_CONFIG_CM_BESTFIT)
ARM GAS  C:\Users\LuckyE\AppData\Local\Temp\cc6Ct15h.s 			page 13


  50:../../iot_link/os/liteos/base/include/heap.h **** #define LOSCFG_CONFIG_CM_BESTFIT
  51:../../iot_link/os/liteos/base/include/heap.h **** #endif
  52:../../iot_link/os/liteos/base/include/heap.h **** 
  53:../../iot_link/os/liteos/base/include/heap.h **** #if   defined (LOSCFG_CONFIG_CM_TLSF)
  54:../../iot_link/os/liteos/base/include/heap.h **** #include "cm-tlsf.h"
  55:../../iot_link/os/liteos/base/include/heap.h **** #elif defined (LOSCFG_CONFIG_CM_BESTFIT)
  56:../../iot_link/os/liteos/base/include/heap.h **** #include "cm-bestfit.h"
  57:../../iot_link/os/liteos/base/include/heap.h **** #endif
  58:../../iot_link/os/liteos/base/include/heap.h **** 
  59:../../iot_link/os/liteos/base/include/heap.h **** #define MIN_BLOCK_SIZE          (sizeof (block_t) + sizeof (ach_t) * 2 + \
  60:../../iot_link/os/liteos/base/include/heap.h ****                                  sizeof (fch_t))
  61:../../iot_link/os/liteos/base/include/heap.h **** 
  62:../../iot_link/os/liteos/base/include/heap.h **** #ifndef ALLOC_ALIGN
  63:../../iot_link/os/liteos/base/include/heap.h **** #define ALLOC_ALIGN             8
  64:../../iot_link/os/liteos/base/include/heap.h **** #endif
  65:../../iot_link/os/liteos/base/include/heap.h **** 
  66:../../iot_link/os/liteos/base/include/heap.h **** typedef struct block
  67:../../iot_link/os/liteos/base/include/heap.h **** {
  68:../../iot_link/os/liteos/base/include/heap.h ****     struct block * next;        /* link into next block      */
  69:../../iot_link/os/liteos/base/include/heap.h ****     size_t         size;
  70:../../iot_link/os/liteos/base/include/heap.h **** } block_t;
  71:../../iot_link/os/liteos/base/include/heap.h **** 
  72:../../iot_link/os/liteos/base/include/heap.h **** #if (LOSCFG_MEM_STATISTICS == YES)
  73:../../iot_link/os/liteos/base/include/heap.h **** typedef struct mem_stat
  74:../../iot_link/os/liteos/base/include/heap.h **** {
  75:../../iot_link/os/liteos/base/include/heap.h ****     unsigned int       free_chunks;
  76:../../iot_link/os/liteos/base/include/heap.h ****     size_t             free_size;
  77:../../iot_link/os/liteos/base/include/heap.h ****     unsigned int       busy_chunks;
  78:../../iot_link/os/liteos/base/include/heap.h ****     size_t             busy_size;
  79:../../iot_link/os/liteos/base/include/heap.h ****     size_t             max_busy_size;
  80:../../iot_link/os/liteos/base/include/heap.h ****     size_t             max_free_size;
  81:../../iot_link/os/liteos/base/include/heap.h ****     unsigned long long cum_allocated;
  82:../../iot_link/os/liteos/base/include/heap.h ****     unsigned long long cum_size_allocated;
  83:../../iot_link/os/liteos/base/include/heap.h ****     unsigned long long cum_freed;
  84:../../iot_link/os/liteos/base/include/heap.h ****     unsigned long long cum_size_freed;
  85:../../iot_link/os/liteos/base/include/heap.h **** } mem_stat_t;
  86:../../iot_link/os/liteos/base/include/heap.h **** #endif
  87:../../iot_link/os/liteos/base/include/heap.h **** 
  88:../../iot_link/os/liteos/base/include/heap.h **** typedef struct heap
  89:../../iot_link/os/liteos/base/include/heap.h **** {
  90:../../iot_link/os/liteos/base/include/heap.h ****     chunk_mgr_t        cm;
  91:../../iot_link/os/liteos/base/include/heap.h ****     block_t          * blocks;
  92:../../iot_link/os/liteos/base/include/heap.h ****     UINT32             mux;
  93:../../iot_link/os/liteos/base/include/heap.h **** #if (LOSCFG_MEM_STATISTICS == YES)
  94:../../iot_link/os/liteos/base/include/heap.h ****     struct mem_stat    stat;
  95:../../iot_link/os/liteos/base/include/heap.h **** #endif
  96:../../iot_link/os/liteos/base/include/heap.h **** #if (LOSCFG_KERNEL_MEM_SLAB == YES)
  97:../../iot_link/os/liteos/base/include/heap.h ****     struct LOS_SLAB_CONTROL_HEADER stSlabCtrlHdr;
  98:../../iot_link/os/liteos/base/include/heap.h **** #endif
  99:../../iot_link/os/liteos/base/include/heap.h **** } heap_t;
 100:../../iot_link/os/liteos/base/include/heap.h **** 
 101:../../iot_link/os/liteos/base/include/heap.h **** /* inlines */
 102:../../iot_link/os/liteos/base/include/heap.h **** 
 103:../../iot_link/os/liteos/base/include/heap.h **** #if (LOSCFG_MEM_STATISTICS == YES)
 104:../../iot_link/os/liteos/base/include/heap.h **** static inline void __stat_chunk_add (mem_stat_t * stat, chunk_t * chunk)
 105:../../iot_link/os/liteos/base/include/heap.h **** {
 106:../../iot_link/os/liteos/base/include/heap.h ****     stat->free_chunks++;
ARM GAS  C:\Users\LuckyE\AppData\Local\Temp\cc6Ct15h.s 			page 14


 190              		.loc 4 106 0
 191 004c D0F8B831 		ldr	r3, [r0, #440]
 192 0050 0133     		adds	r3, r3, #1
 193 0052 C0F8B831 		str	r3, [r0, #440]
 107:../../iot_link/os/liteos/base/include/heap.h ****     stat->free_size += (chunk->size - sizeof (ach_t));
 194              		.loc 4 107 0
 195 0056 D0F8BC31 		ldr	r3, [r0, #444]
 196 005a 083C     		subs	r4, r4, #8
 197              	.LVL21:
 198 005c 1C44     		add	r4, r4, r3
 199              	.LVL22:
 200 005e C0F8BC41 		str	r4, [r0, #444]
 201              	.LBE108:
 202              	.LBE107:
  47:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     if (__cm_put_chunk (&heap->cm, chunk) != 0)
  48:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     {
  49:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****         return -1;
  50:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     }
  51:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
  52:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** #if (LOSCFG_MEM_STATISTICS == YES)
  53:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     __stat_chunk_add (&heap->stat, chunk);
  54:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** #endif
  55:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
  56:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     return 0;
 203              		.loc 2 56 0
 204 0062 0020     		movs	r0, #0
 205              	.LVL23:
 206              	.L8:
  57:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** }
 207              		.loc 2 57 0
 208 0064 F0BD     		pop	{r4, r5, r6, r7, pc}
 209              	.LVL24:
 210              	.L10:
 211              	.LBB109:
 212              	.LBB106:
 213              	.LBB102:
 214              	.LBB103:
  66:../../iot_link/os/liteos/include/list.h ****     }
  67:../../iot_link/os/liteos/include/list.h **** 
  68:../../iot_link/os/liteos/include/list.h **** /**
  69:../../iot_link/os/liteos/include/list.h ****  * __dlist_add_at - insert a new entry between two known consecutive entries
  70:../../iot_link/os/liteos/include/list.h ****  *
  71:../../iot_link/os/liteos/include/list.h ****  * This is only for internal list manipulation where we know
  72:../../iot_link/os/liteos/include/list.h ****  * the prev/next entries already!
  73:../../iot_link/os/liteos/include/list.h ****  */
  74:../../iot_link/os/liteos/include/list.h **** 
  75:../../iot_link/os/liteos/include/list.h **** static inline void __dlist_add_at (dlist_t * prev, dlist_t * next, dlist_t * new)
  76:../../iot_link/os/liteos/include/list.h ****     {
  77:../../iot_link/os/liteos/include/list.h ****     new->prev  = prev;
  78:../../iot_link/os/liteos/include/list.h ****     new->next  = next;
  79:../../iot_link/os/liteos/include/list.h ****     prev->next = new;
  80:../../iot_link/os/liteos/include/list.h ****     next->prev = new;
  81:../../iot_link/os/liteos/include/list.h ****     }
  82:../../iot_link/os/liteos/include/list.h **** 
  83:../../iot_link/os/liteos/include/list.h **** /**
  84:../../iot_link/os/liteos/include/list.h ****  * dlist_add - add a new entry at the front of the list
  85:../../iot_link/os/liteos/include/list.h ****  * @new: new entry to be added
ARM GAS  C:\Users\LuckyE\AppData\Local\Temp\cc6Ct15h.s 			page 15


  86:../../iot_link/os/liteos/include/list.h ****  * @head: list head to add it after
  87:../../iot_link/os/liteos/include/list.h ****  *
  88:../../iot_link/os/liteos/include/list.h ****  * Insert a new entry after the specified head
  89:../../iot_link/os/liteos/include/list.h ****  * This is good for implementing stacks
  90:../../iot_link/os/liteos/include/list.h ****  */
  91:../../iot_link/os/liteos/include/list.h **** 
  92:../../iot_link/os/liteos/include/list.h **** static inline void dlist_add (dlist_t * head, dlist_t * new)
  93:../../iot_link/os/liteos/include/list.h ****     {
  94:../../iot_link/os/liteos/include/list.h ****     __dlist_add_at (head, head->next, new);
  95:../../iot_link/os/liteos/include/list.h ****     }
  96:../../iot_link/os/liteos/include/list.h **** 
  97:../../iot_link/os/liteos/include/list.h **** /**
  98:../../iot_link/os/liteos/include/list.h ****  * dlist_add_tail - add a new entry at the tail of the list
  99:../../iot_link/os/liteos/include/list.h ****  * @new: new entry to be added
 100:../../iot_link/os/liteos/include/list.h ****  * @head: list head to add it before
 101:../../iot_link/os/liteos/include/list.h ****  *
 102:../../iot_link/os/liteos/include/list.h ****  * Insert a new entry before the specified head
 103:../../iot_link/os/liteos/include/list.h ****  * This is useful for implementing queues
 104:../../iot_link/os/liteos/include/list.h ****  */
 105:../../iot_link/os/liteos/include/list.h **** 
 106:../../iot_link/os/liteos/include/list.h **** static inline void dlist_add_tail (dlist_t * head, dlist_t * new)
 107:../../iot_link/os/liteos/include/list.h ****     {
 108:../../iot_link/os/liteos/include/list.h ****     __dlist_add_at (head->prev, head, new);
 215              		.loc 3 108 0
 216 0066 2B46     		mov	r3, r5
 217 0068 53F8086F 		ldr	r6, [r3, #8]!
 218              	.LVL25:
 219              	.LBB104:
 220              	.LBB105:
  78:../../iot_link/os/liteos/include/list.h ****     prev->next = new;
 221              		.loc 3 78 0
 222 006c C1E90263 		strd	r6, r3, [r1, #8]
  79:../../iot_link/os/liteos/include/list.h ****     next->prev = new;
 223              		.loc 3 79 0
 224 0070 7260     		str	r2, [r6, #4]
  80:../../iot_link/os/liteos/include/list.h ****     }
 225              		.loc 3 80 0
 226 0072 AA60     		str	r2, [r5, #8]
 227              	.LVL26:
 228 0074 EAE7     		b	.L11
 229              	.LVL27:
 230              	.L12:
 231              	.LBE105:
 232              	.LBE104:
 233              	.LBE103:
 234              	.LBE102:
 235              	.LBE106:
 236              	.LBE109:
  49:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     }
 237              		.loc 2 49 0
 238 0076 4FF0FF30 		mov	r0, #-1
 239              	.LVL28:
 240 007a F3E7     		b	.L8
 241              		.cfi_endproc
 242              	.LFE314:
 244              		.section	.text.__del_chunk,"ax",%progbits
 245              		.align	1
ARM GAS  C:\Users\LuckyE\AppData\Local\Temp\cc6Ct15h.s 			page 16


 246              		.syntax unified
 247              		.thumb
 248              		.thumb_func
 249              		.fpu fpv4-sp-d16
 251              	__del_chunk:
 252              	.LFB315:
  58:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
  59:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** static inline void __del_chunk (heap_t * heap, chunk_t * chunk)
  60:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** {
 253              		.loc 2 60 0
 254              		.cfi_startproc
 255              		@ args = 0, pretend = 0, frame = 0
 256              		@ frame_needed = 0, uses_anonymous_args = 0
 257              	.LVL29:
 258 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 259              	.LCFI1:
 260              		.cfi_def_cfa_offset 20
 261              		.cfi_offset 4, -20
 262              		.cfi_offset 5, -16
 263              		.cfi_offset 6, -12
 264              		.cfi_offset 7, -8
 265              		.cfi_offset 14, -4
 266              	.LBB122:
 267              	.LBB123:
 206:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     int sl_idx = __get_sl_idx (chunk->size, fl_idx);
 268              		.loc 1 206 0
 269 0002 4D68     		ldr	r5, [r1, #4]
 270              	.LVL30:
 271              	.LBB124:
 272              	.LBB125:
 160:../../iot_link/os/liteos/base/include/cm-tlsf.h **** }
 273              		.loc 1 160 0
 274 0004 B5FA85F4 		clz	r4, r5
 275              	.LVL31:
 276              	.LBE125:
 277              	.LBE124:
 278              	.LBB127:
 279              	.LBB128:
 165:../../iot_link/os/liteos/base/include/cm-tlsf.h **** }
 280              		.loc 1 165 0
 281 0008 C4F11D03 		rsb	r3, r4, #29
 282 000c 25FA03F3 		lsr	r3, r5, r3
 283 0010 1A1F     		subs	r2, r3, #4
 284              	.LVL32:
 285              	.LBE128:
 286              	.LBE127:
 287              	.LBB129:
 288              	.LBB130:
 109:../../iot_link/os/liteos/include/list.h ****     }
 110:../../iot_link/os/liteos/include/list.h **** 
 111:../../iot_link/os/liteos/include/list.h **** /**
 112:../../iot_link/os/liteos/include/list.h ****  * dlist_del - deletes entry from list.
 113:../../iot_link/os/liteos/include/list.h ****  * @entry: the element to delete from the list
 114:../../iot_link/os/liteos/include/list.h ****  * Note: dlist_empty() on entry does not return true after this, the entry is
 115:../../iot_link/os/liteos/include/list.h ****  * in an undefined state
 116:../../iot_link/os/liteos/include/list.h ****  */
 117:../../iot_link/os/liteos/include/list.h **** 
ARM GAS  C:\Users\LuckyE\AppData\Local\Temp\cc6Ct15h.s 			page 17


 118:../../iot_link/os/liteos/include/list.h **** static inline void dlist_del (dlist_t * node)
 119:../../iot_link/os/liteos/include/list.h ****     {
 120:../../iot_link/os/liteos/include/list.h ****     node->prev->next = node->next;
 121:../../iot_link/os/liteos/include/list.h ****     node->next->prev = node->prev;
 122:../../iot_link/os/liteos/include/list.h ****     }
 123:../../iot_link/os/liteos/include/list.h **** 
 124:../../iot_link/os/liteos/include/list.h **** /**
 125:../../iot_link/os/liteos/include/list.h ****  * dlist_empty - check if a list is empty
 126:../../iot_link/os/liteos/include/list.h ****  * @head: the list head to check
 127:../../iot_link/os/liteos/include/list.h ****  */
 128:../../iot_link/os/liteos/include/list.h **** 
 129:../../iot_link/os/liteos/include/list.h **** static inline int dlist_empty (dlist_t * head)
 130:../../iot_link/os/liteos/include/list.h ****     {
 131:../../iot_link/os/liteos/include/list.h ****     return head->prev == head;
 289              		.loc 3 131 0
 290 0012 0B46     		mov	r3, r1
 291              	.LBE130:
 292              	.LBE129:
 209:../../iot_link/os/liteos/base/include/cm-tlsf.h **** 
 293              		.loc 1 209 0
 294 0014 C4F11B06 		rsb	r6, r4, #27
 295              	.LVL33:
 296              	.LBB132:
 297              	.LBB131:
 298              		.loc 3 131 0
 299 0018 53F8087F 		ldr	r7, [r3, #8]!
 300              	.LVL34:
 301              	.LBE131:
 302              	.LBE132:
 211:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     {
 303              		.loc 1 211 0
 304 001c 9F42     		cmp	r7, r3
 305 001e 4FEA8603 		lsl	r3, r6, #2
 306 0022 1344     		add	r3, r3, r2
 307 0024 17D0     		beq	.L14
 308 0026 00EB8303 		add	r3, r0, r3, lsl #2
 309 002a CA68     		ldr	r2, [r1, #12]
 213:../../iot_link/os/liteos/base/include/cm-tlsf.h ****         {
 310              		.loc 1 213 0
 311 002c 1C6A     		ldr	r4, [r3, #32]
 312 002e A142     		cmp	r1, r4
 215:../../iot_link/os/liteos/base/include/cm-tlsf.h ****         }
 313              		.loc 1 215 0
 314 0030 04BF     		itt	eq
 315 0032 A2F10804 		subeq	r4, r2, #8
 316 0036 1C62     		streq	r4, [r3, #32]
 317              	.LVL35:
 318              	.LBB133:
 319              	.LBB134:
 120:../../iot_link/os/liteos/include/list.h ****     node->next->prev = node->prev;
 320              		.loc 3 120 0
 321 0038 7A60     		str	r2, [r7, #4]
 121:../../iot_link/os/liteos/include/list.h ****     }
 322              		.loc 3 121 0
 323 003a CB68     		ldr	r3, [r1, #12]
 324 003c 1F60     		str	r7, [r3]
 325              	.LVL36:
ARM GAS  C:\Users\LuckyE\AppData\Local\Temp\cc6Ct15h.s 			page 18


 326              	.L16:
 327              	.LBE134:
 328              	.LBE133:
 329              	.LBE123:
 330              	.LBE122:
 331              	.LBB137:
 332              	.LBB138:
 108:../../iot_link/os/liteos/base/include/heap.h **** }
 109:../../iot_link/os/liteos/base/include/heap.h **** 
 110:../../iot_link/os/liteos/base/include/heap.h **** static inline void __stat_chunk_del (mem_stat_t * stat, chunk_t * chunk)
 111:../../iot_link/os/liteos/base/include/heap.h **** {
 112:../../iot_link/os/liteos/base/include/heap.h ****     stat->free_chunks--;
 333              		.loc 4 112 0
 334 003e D0F8B831 		ldr	r3, [r0, #440]
 335 0042 013B     		subs	r3, r3, #1
 336 0044 C0F8B831 		str	r3, [r0, #440]
 113:../../iot_link/os/liteos/base/include/heap.h ****     stat->free_size -= (chunk->size - sizeof (ach_t));
 337              		.loc 4 113 0
 338 0048 D0F8BC31 		ldr	r3, [r0, #444]
 339 004c 5B1B     		subs	r3, r3, r5
 340 004e 0833     		adds	r3, r3, #8
 341 0050 C0F8BC31 		str	r3, [r0, #444]
 342              	.LVL37:
 343              	.LBE138:
 344              	.LBE137:
  61:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     __cm_del_chunk (&heap->cm, chunk);
  62:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
  63:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** #if (LOSCFG_MEM_STATISTICS == YES)
  64:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     __stat_chunk_del (&heap->stat, chunk);
  65:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** #endif
  66:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** }
 345              		.loc 2 66 0
 346 0054 F0BD     		pop	{r4, r5, r6, r7, pc}
 347              	.LVL38:
 348              	.L14:
 349              	.LBB139:
 350              	.LBB136:
 223:../../iot_link/os/liteos/base/include/cm-tlsf.h **** 
 351              		.loc 1 223 0
 352 0056 0833     		adds	r3, r3, #8
 353 0058 0021     		movs	r1, #0
 354              	.LVL39:
 355 005a 40F82310 		str	r1, [r0, r3, lsl #2]
 225:../../iot_link/os/liteos/base/include/cm-tlsf.h **** 
 356              		.loc 1 225 0
 357 005e 8119     		adds	r1, r0, r6
 358 0060 0127     		movs	r7, #1
 359 0062 07FA02F3 		lsl	r3, r7, r2
 360 0066 0A79     		ldrb	r2, [r1, #4]	@ zero_extendqisi2
 361 0068 22EA0303 		bic	r3, r2, r3
 362 006c 0B71     		strb	r3, [r1, #4]
 227:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     {
 363              		.loc 1 227 0
 364 006e 002B     		cmp	r3, #0
 365 0070 E5D1     		bne	.L16
 366              	.LBB135:
 367              	.LBB126:
ARM GAS  C:\Users\LuckyE\AppData\Local\Temp\cc6Ct15h.s 			page 19


 160:../../iot_link/os/liteos/base/include/cm-tlsf.h **** }
 368              		.loc 1 160 0
 369 0072 C4F11F04 		rsb	r4, r4, #31
 370              	.LBE126:
 371              	.LBE135:
 229:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     }
 372              		.loc 1 229 0
 373 0076 07FA04F4 		lsl	r4, r7, r4
 374 007a 0768     		ldr	r7, [r0]
 375 007c 27EA0404 		bic	r4, r7, r4
 376 0080 0460     		str	r4, [r0]
 377 0082 DCE7     		b	.L16
 378              	.LBE136:
 379              	.LBE139:
 380              		.cfi_endproc
 381              	.LFE315:
 383              		.section	.text.heap_init,"ax",%progbits
 384              		.align	1
 385              		.global	heap_init
 386              		.syntax unified
 387              		.thumb
 388              		.thumb_func
 389              		.fpu fpv4-sp-d16
 391              	heap_init:
 392              	.LFB317:
  67:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
  68:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** static inline chunk_t * __get_chunk (heap_t * heap, size_t size)
  69:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** {
  70:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     chunk_t * chunk = __cm_get_chunk (&heap->cm, size);
  71:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
  72:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     if (chunk != NULL)
  73:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     {
  74:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****         __del_chunk (heap, chunk);
  75:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     }
  76:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
  77:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     return chunk;
  78:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** }
  79:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
  80:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** /**
  81:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****  * heap_init - initialize a heap struct
  82:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****  * @heap: the given heap
  83:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****  *
  84:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****  * return: 0 on success, negtive value on error
  85:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****  */
  86:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
  87:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** int heap_init (heap_t * heap)
  88:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** {
 393              		.loc 2 88 0
 394              		.cfi_startproc
 395              		@ args = 0, pretend = 0, frame = 0
 396              		@ frame_needed = 0, uses_anonymous_args = 0
 397              	.LVL40:
 398 0000 10B5     		push	{r4, lr}
 399              	.LCFI2:
 400              		.cfi_def_cfa_offset 8
 401              		.cfi_offset 4, -8
 402              		.cfi_offset 14, -4
ARM GAS  C:\Users\LuckyE\AppData\Local\Temp\cc6Ct15h.s 			page 20


  89:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     UINT32 ret;
  90:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
  91:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     if (heap == NULL)
 403              		.loc 2 91 0
 404 0002 0446     		mov	r4, r0
 405 0004 48B1     		cbz	r0, .L19
  92:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     {
  93:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****         return -1;
  94:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     }
  95:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
  96:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     memset (heap, 0, sizeof (heap_t));
 406              		.loc 2 96 0
 407 0006 4FF40C72 		mov	r2, #560
 408 000a 0021     		movs	r1, #0
 409 000c FFF7FEFF 		bl	memset
 410              	.LVL41:
  97:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
  98:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     ret = LOS_MuxCreate (&heap->mux);
 411              		.loc 2 98 0
 412 0010 04F5DA70 		add	r0, r4, #436
 413 0014 FFF7FEFF 		bl	LOS_MuxCreate
 414              	.LVL42:
 415              	.L17:
  99:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 100:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     if (ret != LOS_OK)
 101:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     {
 102:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****         return ret;
 103:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     }
 104:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 105:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     __cm_init (&heap->cm);
 106:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 107:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     return LOS_OK;
 108:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** }
 416              		.loc 2 108 0
 417 0018 10BD     		pop	{r4, pc}
 418              	.LVL43:
 419              	.L19:
  93:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     }
 420              		.loc 2 93 0
 421 001a 4FF0FF30 		mov	r0, #-1
 422              	.LVL44:
 423 001e FBE7     		b	.L17
 424              		.cfi_endproc
 425              	.LFE317:
 427              		.section	.text.heap_add,"ax",%progbits
 428              		.align	1
 429              		.global	heap_add
 430              		.syntax unified
 431              		.thumb
 432              		.thumb_func
 433              		.fpu fpv4-sp-d16
 435              	heap_add:
 436              	.LFB318:
 109:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 110:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** /**
 111:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****  * heap_add - add a block of memory to a heap
 112:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****  * @heap: the heap to add in
ARM GAS  C:\Users\LuckyE\AppData\Local\Temp\cc6Ct15h.s 			page 21


 113:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****  * @buff: the memory address to add
 114:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****  * @size: the memory block size
 115:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****  *
 116:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****  * return: 0 on success, negtive value on error
 117:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****  */
 118:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 119:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** int heap_add (heap_t * heap, char * buff, size_t size)
 120:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** {
 437              		.loc 2 120 0
 438              		.cfi_startproc
 439              		@ args = 0, pretend = 0, frame = 0
 440              		@ frame_needed = 0, uses_anonymous_args = 0
 441              	.LVL45:
 442 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 443              	.LCFI3:
 444              		.cfi_def_cfa_offset 32
 445              		.cfi_offset 3, -32
 446              		.cfi_offset 4, -28
 447              		.cfi_offset 5, -24
 448              		.cfi_offset 6, -20
 449              		.cfi_offset 7, -16
 450              		.cfi_offset 8, -12
 451              		.cfi_offset 9, -8
 452              		.cfi_offset 14, -4
 453              		.loc 2 120 0
 454 0004 0C46     		mov	r4, r1
 121:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     int       ret;
 122:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     block_t * cb;
 123:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     chunk_t * chunk, * last;
 124:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 125:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     if ((heap == NULL) || (buff == NULL))
 455              		.loc 2 125 0
 456 0006 0746     		mov	r7, r0
 457 0008 20B9     		cbnz	r0, .L22
 458              	.LVL46:
 459              	.L24:
 126:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     {
 127:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****         return -1;
 460              		.loc 2 127 0
 461 000a 4FF0FF36 		mov	r6, #-1
 462              	.L21:
 128:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     }
 129:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 130:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     size -= (uintptr_t) buff & ALLOC_ALIGN_MASK;
 131:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     size &= ~ALLOC_ALIGN_MASK;
 132:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     buff  = (char *) ((uintptr_t) buff & ~ALLOC_ALIGN_MASK);
 133:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 134:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     if (buff > (buff + size))
 135:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     {
 136:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****         return -1;
 137:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     }
 138:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 139:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     if (size < MIN_BLOCK_SIZE)
 140:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     {
 141:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****         return -1;
 142:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     }
 143:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
ARM GAS  C:\Users\LuckyE\AppData\Local\Temp\cc6Ct15h.s 			page 22


 144:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     ret = LOS_MuxPend (heap->mux, LOS_WAIT_FOREVER);
 145:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 146:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     if (ret != LOS_OK)
 147:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     {
 148:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****         return ret;
 149:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     }
 150:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 151:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     /*
 152:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****      * this block of memory will be initialized as:
 153:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****      *
 154:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****      * +----+-----+-----+-----+
 155:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****      * | CB | ACH | FCH | ACH |
 156:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****      * +----+-----+-----+-----+
 157:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****      *
 158:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****      * CB  - chunk block
 159:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****      * ACH - allocated chunk header
 160:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****      * FCH - free chunk header
 161:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****      *
 162:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****      * These two ACH at the beginning and ending are guards.
 163:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****      */
 164:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 165:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     cb           = (block_t *) (buff);
 166:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     cb->size     = size;
 167:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 168:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     cb->next     = heap->blocks;
 169:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     heap->blocks = cb;
 170:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 171:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     chunk        = (chunk_t *) (cb + 1);
 172:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 173:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     chunk->prev  = NULL;
 174:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     chunk->size  = sizeof (ach_t);
 175:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     __set_chunk_allocated (chunk);
 176:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 177:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     chunk        = __get_next_chunk (chunk);
 178:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     chunk->prev  = (chunk_t *) (cb + 1);
 179:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     chunk->size  = (size - sizeof (block_t) - 2 * sizeof (ach_t));
 180:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 181:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     if (__put_chunk (heap, chunk) != 0)
 182:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     {
 183:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****         return -1;
 184:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     }
 185:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 186:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     last         = __get_next_chunk (chunk);
 187:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 188:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     last->prev   = chunk;
 189:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     last->size   = sizeof (ach_t);
 190:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     __set_chunk_allocated (last);
 191:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 192:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     (void) LOS_MuxPost (heap->mux);
 193:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 194:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     return 0;
 195:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** }
 463              		.loc 2 195 0
 464 000e 3046     		mov	r0, r6
 465 0010 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 466              	.LVL47:
 467              	.L22:
ARM GAS  C:\Users\LuckyE\AppData\Local\Temp\cc6Ct15h.s 			page 23


 125:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     {
 468              		.loc 2 125 0 discriminator 1
 469 0014 0029     		cmp	r1, #0
 470 0016 F8D0     		beq	.L24
 130:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     size &= ~ALLOC_ALIGN_MASK;
 471              		.loc 2 130 0
 472 0018 01F00305 		and	r5, r1, #3
 473 001c 521B     		subs	r2, r2, r5
 474              	.LVL48:
 131:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     buff  = (char *) ((uintptr_t) buff & ~ALLOC_ALIGN_MASK);
 475              		.loc 2 131 0
 476 001e 22F00305 		bic	r5, r2, #3
 477              	.LVL49:
 139:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     {
 478              		.loc 2 139 0
 479 0022 1B4B     		ldr	r3, .L28
 480 0024 A5F12802 		sub	r2, r5, #40
 481 0028 9A42     		cmp	r2, r3
 482 002a EED8     		bhi	.L24
 144:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 483              		.loc 2 144 0
 484 002c 4FF0FF31 		mov	r1, #-1
 485              	.LVL50:
 486 0030 D0F8B401 		ldr	r0, [r0, #436]
 487              	.LVL51:
 488 0034 FFF7FEFF 		bl	LOS_MuxPend
 489              	.LVL52:
 146:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     {
 490              		.loc 2 146 0
 491 0038 0646     		mov	r6, r0
 492 003a 0028     		cmp	r0, #0
 493 003c E7D1     		bne	.L21
 132:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 494              		.loc 2 132 0
 495 003e 24F00304 		bic	r4, r4, #3
 496              	.LVL53:
 168:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     heap->blocks = cb;
 497              		.loc 2 168 0
 498 0042 D7F8B031 		ldr	r3, [r7, #432]
 166:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 499              		.loc 2 166 0
 500 0046 6560     		str	r5, [r4, #4]
 168:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     heap->blocks = cb;
 501              		.loc 2 168 0
 502 0048 2360     		str	r3, [r4]
 503              	.LBB140:
 504              	.LBB141:
 505              		.file 5 "../../iot_link/os/liteos/base/include/chunk.h"
   1:../../iot_link/os/liteos/base/include/chunk.h **** /*----------------------------------------------------------------------------
   2:../../iot_link/os/liteos/base/include/chunk.h ****  * Copyright (c) <2018>, <Huawei Technologies Co., Ltd>
   3:../../iot_link/os/liteos/base/include/chunk.h ****  * All rights reserved.
   4:../../iot_link/os/liteos/base/include/chunk.h ****  * Redistribution and use in source and binary forms, with or without modification,
   5:../../iot_link/os/liteos/base/include/chunk.h ****  * are permitted provided that the following conditions are met:
   6:../../iot_link/os/liteos/base/include/chunk.h ****  * 1. Redistributions of source code must retain the above copyright notice, this list of
   7:../../iot_link/os/liteos/base/include/chunk.h ****  * conditions and the following disclaimer.
   8:../../iot_link/os/liteos/base/include/chunk.h ****  * 2. Redistributions in binary form must reproduce the above copyright notice, this list
   9:../../iot_link/os/liteos/base/include/chunk.h ****  * of conditions and the following disclaimer in the documentation and/or other materials
ARM GAS  C:\Users\LuckyE\AppData\Local\Temp\cc6Ct15h.s 			page 24


  10:../../iot_link/os/liteos/base/include/chunk.h ****  * provided with the distribution.
  11:../../iot_link/os/liteos/base/include/chunk.h ****  * 3. Neither the name of the copyright holder nor the names of its contributors may be used
  12:../../iot_link/os/liteos/base/include/chunk.h ****  * to endorse or promote products derived from this software without specific prior written
  13:../../iot_link/os/liteos/base/include/chunk.h ****  * permission.
  14:../../iot_link/os/liteos/base/include/chunk.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  15:../../iot_link/os/liteos/base/include/chunk.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
  16:../../iot_link/os/liteos/base/include/chunk.h ****  * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
  17:../../iot_link/os/liteos/base/include/chunk.h ****  * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
  18:../../iot_link/os/liteos/base/include/chunk.h ****  * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
  19:../../iot_link/os/liteos/base/include/chunk.h ****  * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
  20:../../iot_link/os/liteos/base/include/chunk.h ****  * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
  21:../../iot_link/os/liteos/base/include/chunk.h ****  * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
  22:../../iot_link/os/liteos/base/include/chunk.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
  23:../../iot_link/os/liteos/base/include/chunk.h ****  * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
  24:../../iot_link/os/liteos/base/include/chunk.h ****  * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  25:../../iot_link/os/liteos/base/include/chunk.h ****  *---------------------------------------------------------------------------*/
  26:../../iot_link/os/liteos/base/include/chunk.h **** /*----------------------------------------------------------------------------
  27:../../iot_link/os/liteos/base/include/chunk.h ****  * Notice of Export Control Law
  28:../../iot_link/os/liteos/base/include/chunk.h ****  * ===============================================
  29:../../iot_link/os/liteos/base/include/chunk.h ****  * Huawei LiteOS may be subject to applicable export control laws and regulations, which might
  30:../../iot_link/os/liteos/base/include/chunk.h ****  * include those applicable to Huawei LiteOS of U.S. and the country in which you are located.
  31:../../iot_link/os/liteos/base/include/chunk.h ****  * Import, export and usage of Huawei LiteOS in any manner by you shall be in compliance with such
  32:../../iot_link/os/liteos/base/include/chunk.h ****  * applicable export control laws and regulations.
  33:../../iot_link/os/liteos/base/include/chunk.h ****  *---------------------------------------------------------------------------*/
  34:../../iot_link/os/liteos/base/include/chunk.h **** 
  35:../../iot_link/os/liteos/base/include/chunk.h **** #ifndef __CHUNK_H__
  36:../../iot_link/os/liteos/base/include/chunk.h **** #define __CHUNK_H__
  37:../../iot_link/os/liteos/base/include/chunk.h **** 
  38:../../iot_link/os/liteos/base/include/chunk.h **** #include <stddef.h>
  39:../../iot_link/os/liteos/base/include/chunk.h **** #include <stdint.h>
  40:../../iot_link/os/liteos/base/include/chunk.h **** 
  41:../../iot_link/os/liteos/base/include/chunk.h **** #include <list.h>
  42:../../iot_link/os/liteos/base/include/chunk.h **** 
  43:../../iot_link/os/liteos/base/include/chunk.h **** #ifndef ALLOC_ALIGN_SIZE
  44:../../iot_link/os/liteos/base/include/chunk.h **** #define ALLOC_ALIGN_SIZE        (4)
  45:../../iot_link/os/liteos/base/include/chunk.h **** #endif
  46:../../iot_link/os/liteos/base/include/chunk.h **** 
  47:../../iot_link/os/liteos/base/include/chunk.h **** #define ALLOC_ALIGN_MASK        (ALLOC_ALIGN_SIZE - 1)
  48:../../iot_link/os/liteos/base/include/chunk.h **** 
  49:../../iot_link/os/liteos/base/include/chunk.h **** #define ALLOC_MIN_SIZE          (sizeof (chunk_t) - sizeof (ach_t))
  50:../../iot_link/os/liteos/base/include/chunk.h **** 
  51:../../iot_link/os/liteos/base/include/chunk.h **** typedef struct chunk
  52:../../iot_link/os/liteos/base/include/chunk.h **** {
  53:../../iot_link/os/liteos/base/include/chunk.h ****     struct chunk * prev;
  54:../../iot_link/os/liteos/base/include/chunk.h ****     uintptr_t      size;        /* bit[0] means is_allocated */
  55:../../iot_link/os/liteos/base/include/chunk.h ****     dlist_t        node;        /* used for free chunks only */
  56:../../iot_link/os/liteos/base/include/chunk.h **** } fch_t, chunk_t;
  57:../../iot_link/os/liteos/base/include/chunk.h **** 
  58:../../iot_link/os/liteos/base/include/chunk.h **** typedef struct ach
  59:../../iot_link/os/liteos/base/include/chunk.h **** {
  60:../../iot_link/os/liteos/base/include/chunk.h ****     struct chunk * prev;
  61:../../iot_link/os/liteos/base/include/chunk.h ****     uintptr_t      size;        /* bit[0] means is_allocated */
  62:../../iot_link/os/liteos/base/include/chunk.h **** } ach_t;
  63:../../iot_link/os/liteos/base/include/chunk.h **** 
  64:../../iot_link/os/liteos/base/include/chunk.h **** /* inlines */
  65:../../iot_link/os/liteos/base/include/chunk.h **** 
  66:../../iot_link/os/liteos/base/include/chunk.h **** /**
ARM GAS  C:\Users\LuckyE\AppData\Local\Temp\cc6Ct15h.s 			page 25


  67:../../iot_link/os/liteos/base/include/chunk.h ****  * __is_free - check if a chunk is free
  68:../../iot_link/os/liteos/base/include/chunk.h ****  * @chunk: the given chunk
  69:../../iot_link/os/liteos/base/include/chunk.h ****  *
  70:../../iot_link/os/liteos/base/include/chunk.h ****  * return: true if the chunk is free, false if not
  71:../../iot_link/os/liteos/base/include/chunk.h ****  */
  72:../../iot_link/os/liteos/base/include/chunk.h **** 
  73:../../iot_link/os/liteos/base/include/chunk.h **** static inline int __is_free (chunk_t * chunk)
  74:../../iot_link/os/liteos/base/include/chunk.h **** {
  75:../../iot_link/os/liteos/base/include/chunk.h ****     return (chunk->size & 1) == 0;
  76:../../iot_link/os/liteos/base/include/chunk.h **** }
  77:../../iot_link/os/liteos/base/include/chunk.h **** 
  78:../../iot_link/os/liteos/base/include/chunk.h **** /**
  79:../../iot_link/os/liteos/base/include/chunk.h ****  * __set_chunk_allocated - set a chunk as allocated
  80:../../iot_link/os/liteos/base/include/chunk.h ****  * @chunk: the given chunk
  81:../../iot_link/os/liteos/base/include/chunk.h ****  */
  82:../../iot_link/os/liteos/base/include/chunk.h **** 
  83:../../iot_link/os/liteos/base/include/chunk.h **** static inline void __set_chunk_allocated (chunk_t * chunk)
  84:../../iot_link/os/liteos/base/include/chunk.h **** {
  85:../../iot_link/os/liteos/base/include/chunk.h ****     chunk->size |= 1;
 506              		.loc 5 85 0
 507 004a 4FF00909 		mov	r9, #9
 508              	.LBE141:
 509              	.LBE140:
 171:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 510              		.loc 2 171 0
 511 004e 04F10803 		add	r3, r4, #8
 512              	.LBB143:
 513              	.LBB144:
  86:../../iot_link/os/liteos/base/include/chunk.h **** }
  87:../../iot_link/os/liteos/base/include/chunk.h **** 
  88:../../iot_link/os/liteos/base/include/chunk.h **** /**
  89:../../iot_link/os/liteos/base/include/chunk.h ****  * __set_chunk_free - set a chunk as free
  90:../../iot_link/os/liteos/base/include/chunk.h ****  * @chunk: the given chunk
  91:../../iot_link/os/liteos/base/include/chunk.h ****  */
  92:../../iot_link/os/liteos/base/include/chunk.h **** 
  93:../../iot_link/os/liteos/base/include/chunk.h **** static inline void __set_chunk_free (chunk_t * chunk)
  94:../../iot_link/os/liteos/base/include/chunk.h **** {
  95:../../iot_link/os/liteos/base/include/chunk.h ****     chunk->size &= ~1;
  96:../../iot_link/os/liteos/base/include/chunk.h **** }
  97:../../iot_link/os/liteos/base/include/chunk.h **** 
  98:../../iot_link/os/liteos/base/include/chunk.h **** /**
  99:../../iot_link/os/liteos/base/include/chunk.h ****  * __get_next_chunk - get the next chunk
 100:../../iot_link/os/liteos/base/include/chunk.h ****  * @chunk: the current chunk
 101:../../iot_link/os/liteos/base/include/chunk.h ****  *
 102:../../iot_link/os/liteos/base/include/chunk.h ****  * return: next chunk
 103:../../iot_link/os/liteos/base/include/chunk.h ****  */
 104:../../iot_link/os/liteos/base/include/chunk.h **** 
 105:../../iot_link/os/liteos/base/include/chunk.h **** static inline chunk_t * __get_next_chunk (chunk_t * chunk)
 106:../../iot_link/os/liteos/base/include/chunk.h **** {
 107:../../iot_link/os/liteos/base/include/chunk.h ****     return (chunk_t *) (((char *) chunk) + (chunk->size & ~1));
 514              		.loc 5 107 0
 515 0052 04F11008 		add	r8, r4, #16
 516              	.LBE144:
 517              	.LBE143:
 179:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 518              		.loc 2 179 0
 519 0056 183D     		subs	r5, r5, #24
ARM GAS  C:\Users\LuckyE\AppData\Local\Temp\cc6Ct15h.s 			page 26


 520              	.LVL54:
 169:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 521              		.loc 2 169 0
 522 0058 C7F8B041 		str	r4, [r7, #432]
 523              	.LVL55:
 181:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     {
 524              		.loc 2 181 0
 525 005c 4146     		mov	r1, r8
 173:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     chunk->size  = sizeof (ach_t);
 526              		.loc 2 173 0
 527 005e A060     		str	r0, [r4, #8]
 528              	.LVL56:
 529              	.LBB145:
 530              	.LBB142:
  85:../../iot_link/os/liteos/base/include/chunk.h **** }
 531              		.loc 5 85 0
 532 0060 C4F80C90 		str	r9, [r4, #12]
 533              	.LVL57:
 534              	.LBE142:
 535              	.LBE145:
 178:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     chunk->size  = (size - sizeof (block_t) - 2 * sizeof (ach_t));
 536              		.loc 2 178 0
 537 0064 2361     		str	r3, [r4, #16]
 179:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 538              		.loc 2 179 0
 539 0066 6561     		str	r5, [r4, #20]
 181:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     {
 540              		.loc 2 181 0
 541 0068 3846     		mov	r0, r7
 542              	.LVL58:
 543 006a FFF7FEFF 		bl	__put_chunk
 544              	.LVL59:
 545 006e 0646     		mov	r6, r0
 546              	.LVL60:
 547 0070 0028     		cmp	r0, #0
 548 0072 CAD1     		bne	.L24
 549              	.LVL61:
 550              	.LBB146:
 551              	.LBB147:
 552              		.loc 5 107 0
 553 0074 6369     		ldr	r3, [r4, #20]
 554 0076 23F00103 		bic	r3, r3, #1
 555 007a 08EB0302 		add	r2, r8, r3
 556              	.LVL62:
 557              	.LBE147:
 558              	.LBE146:
 188:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     last->size   = sizeof (ach_t);
 559              		.loc 2 188 0
 560 007e 48F80380 		str	r8, [r8, r3]
 561              	.LVL63:
 562              	.LBB148:
 563              	.LBB149:
  85:../../iot_link/os/liteos/base/include/chunk.h **** }
 564              		.loc 5 85 0
 565 0082 C2F80490 		str	r9, [r2, #4]
 566              	.LBE149:
 567              	.LBE148:
ARM GAS  C:\Users\LuckyE\AppData\Local\Temp\cc6Ct15h.s 			page 27


 192:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 568              		.loc 2 192 0
 569 0086 D7F8B401 		ldr	r0, [r7, #436]
 570 008a FFF7FEFF 		bl	LOS_MuxPost
 571              	.LVL64:
 194:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** }
 572              		.loc 2 194 0
 573 008e BEE7     		b	.L21
 574              	.L29:
 575              		.align	2
 576              	.L28:
 577 0090 D7FFFF7F 		.word	2147483607
 578              		.cfi_endproc
 579              	.LFE318:
 581              		.section	.text.heap_alloc_align,"ax",%progbits
 582              		.align	1
 583              		.global	heap_alloc_align
 584              		.syntax unified
 585              		.thumb
 586              		.thumb_func
 587              		.fpu fpv4-sp-d16
 589              	heap_alloc_align:
 590              	.LFB320:
 196:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 197:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** /**
 198:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****  * __carve_extra - round up a block of memory and carve the unused memory at
 199:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****  *                 the beginning and ending
 200:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****  * @heap:  the heap used
 201:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****  * @chunk: the chunk which hold the memory block to round up and carve
 202:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****  * @align: the alignment to round up
 203:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****  *
 204:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****  * return: the new aligned memory block
 205:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****  */
 206:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 207:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** static inline char * __carve_extra (heap_t * heap, chunk_t * chunk,
 208:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****                                     size_t align, size_t size)
 209:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** {
 210:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     char    * mem         = __get_mem_block (chunk);
 211:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     char    * aligned_mem = (char *) round_up (mem, align);
 212:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     ach_t   * ach         = (ach_t *) chunk;
 213:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     chunk_t * next;
 214:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     size_t    usable_size;
 215:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 216:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     if (aligned_mem != mem)
 217:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     {
 218:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 219:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****         /*
 220:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****          * carve at the begining (carve head)
 221:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****          *
 222:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****          *   .-chunk(FCH)-.
 223:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****          *  /              \
 224:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****          * +---+---+---+---+~~~+---+---+~~
 225:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****          * | p | s |   l   | ~ | p | s |
 226:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****          * | r | i |   i   | ~ | r | i |
 227:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****          * | e | z |   s   | ~ | e | z |
 228:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****          * | v | e |   t   | ~ | v | e |
 229:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****          * +---+---+---+---+~~~+---+---+~~
ARM GAS  C:\Users\LuckyE\AppData\Local\Temp\cc6Ct15h.s 			page 28


 230:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****          *         \           \       /\
 231:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****          *          `-- mem     `-ach-' `-- aligned_mem
 232:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****          *
 233:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****          * now "mem != aligned_mem", so there must be "chunk < ach" so there are
 234:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****          * memory space in front of ach (chunk ~ ach), if "(ach - chunk) <= chunk",
 235:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****          * needless create new chunk, it is not worse to add logic save such memory
 236:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****          * block, because for any method to save such memory block we must allocate
 237:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****          * a chunk head for it, the chunk head itself waste more memory
 238:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****          */
 239:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 240:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****         if ((aligned_mem - (char *) chunk) <= (sizeof (chunk_t) + sizeof (ach_t)))
 241:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****         {
 242:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****             __set_ach_to_mem (aligned_mem, chunk);
 243:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****         }
 244:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****         else
 245:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****         {
 246:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****             ach = (ach_t *) (aligned_mem - sizeof (ach_t));
 247:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 248:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****             ach->prev = chunk;
 249:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****             ach->size = chunk->size - ((char *) ach - (char *) chunk);
 250:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 251:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****             __get_next_chunk ((chunk_t *) ach)->prev = (chunk_t *) ach;
 252:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 253:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****             chunk->size = (char *) ach - (char *) chunk;
 254:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 255:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****             __put_chunk (heap, chunk);
 256:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****         }
 257:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     }
 258:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 259:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     /*
 260:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****      * carve at the ending (carve tail)
 261:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****      *
 262:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****      * there may be small memory gap (less than a chunk head size) betwen
 263:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****      * __get_mem_block (chunk) and mem, see above "carve head" for details
 264:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****      *
 265:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****      *                     .-- total size is chunk->size
 266:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****      *                    /
 267:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****      *  ..................+....................
 268:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****      * /                                       \
 269:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****      * +-----+-----+----------------------------+------------+ ~ ...
 270:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****      * | ACH | GAP |        usable memory       | next chunk | ~ ...
 271:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****      * +-----+-----+----------------------------+------------+ ~ ...
 272:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****      * \            \
 273:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****      *  \            `-------- mem
 274:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****      *   `-------------------- chunk
 275:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****      *
 276:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****      * so, the usable memory size is (chunk->size - (addr (mem) - (addr) chunk))
 277:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****      *
 278:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****      * we are going to carve extra memory block at the end of the usable memory
 279:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****      */
 280:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 281:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     usable_size = ach->size - (aligned_mem - (char *) ach);
 282:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 283:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     /*
 284:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****      * if the extra memory at the end is smaller than a chunk head size, do not
 285:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****      * create new chunk
 286:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****      */
ARM GAS  C:\Users\LuckyE\AppData\Local\Temp\cc6Ct15h.s 			page 29


 287:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 288:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     if ((usable_size - size) >= sizeof (chunk_t))
 289:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     {
 290:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 291:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****         /*
 292:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****          * there is extra memory at the end of usable memory greater than chunk size:
 293:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****          *
 294:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****          *                              .----- usable memory
 295:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****          *                             /
 296:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****          *                   .........+........
 297:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****          *                  /                  \
 298:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****          *                 /      .- size       \
 299:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****          *                /      /               \
 300:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****          *               .......+......           \
 301:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****          *              /              \           \
 302:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****          * +-----+-----+----------------+-----------+------------+ ~ ...
 303:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****          * | ACH | GAP | wanted memory  | extra mem | next chunk | ~ ...
 304:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****          * +-----+-----+----------------+-----------+------------+ ~ ...
 305:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****          *  \           \                 \
 306:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****          *   \           \                 `-- extra memory at the end
 307:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****          *    \           `------------------- mem
 308:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****          *     `------------------------------ ach
 309:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****          *
 310:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****          * ==>
 311:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****          *
 312:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****          * +-----+-----+----------------+-----+-----+------------+ ~ ...
 313:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****          * | ACH | GAP | wanted memory  | FCH | mem | next chunk | ~ ...
 314:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****          * +-----+-----+----------------+-----+-----+------------+ ~ ...
 315:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****          *  \           \                \
 316:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****          *   \           \                `--- new_chunk, will return to heap
 317:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****          *    \           `------------------- mem, will return to user
 318:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****          *     `------------------------------ ach
 319:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****          */
 320:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 321:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****         ach->size  -= (usable_size - size);
 322:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 323:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****         chunk       = (chunk_t *) (aligned_mem + size);
 324:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****         chunk->prev = (chunk_t *) ach;
 325:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****         chunk->size = (usable_size - size);
 326:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 327:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****         next        = __get_next_chunk (chunk);
 328:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 329:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****         next->prev  = chunk;
 330:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 331:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****         __put_chunk (heap, chunk);
 332:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     }
 333:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 334:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** #if (LOSCFG_MEM_STATISTICS == YES)
 335:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     __stat_chunk_alloc (&heap->stat, (chunk_t *) ach);
 336:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** #endif
 337:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 338:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     __set_chunk_allocated ((chunk_t *) ach);
 339:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 340:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     return aligned_mem;
 341:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** }
 342:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 343:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** /**
ARM GAS  C:\Users\LuckyE\AppData\Local\Temp\cc6Ct15h.s 			page 30


 344:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****  * heap_alloc_align - allocate a block of memory from a heap with alignment
 345:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****  * @heap:  the heap to allocate from
 346:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****  * @bytes: size of memory in bytes to allocate
 347:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****  * @align: the expected alignment value
 348:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****  *
 349:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****  * return: the allocated memory block or NULL if fail
 350:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****  */
 351:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 352:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** char * heap_alloc_align (heap_t * heap, size_t align, size_t bytes)
 353:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** {
 591              		.loc 2 353 0
 592              		.cfi_startproc
 593              		@ args = 0, pretend = 0, frame = 0
 594              		@ frame_needed = 0, uses_anonymous_args = 0
 595              	.LVL65:
 596 0000 2DE9F849 		push	{r3, r4, r5, r6, r7, r8, fp, lr}
 597              	.LCFI4:
 598              		.cfi_def_cfa_offset 32
 599              		.cfi_offset 3, -32
 600              		.cfi_offset 4, -28
 601              		.cfi_offset 5, -24
 602              		.cfi_offset 6, -20
 603              		.cfi_offset 7, -16
 604              		.cfi_offset 8, -12
 605              		.cfi_offset 11, -8
 606              		.cfi_offset 14, -4
 354:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     chunk_t * chunk;
 355:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     char    * mem = NULL;
 356:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 357:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     if (heap == NULL)
 607              		.loc 2 357 0
 608 0004 0546     		mov	r5, r0
 609 0006 18B9     		cbnz	r0, .L31
 610              	.LVL66:
 611              	.L33:
 358:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     {
 359:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****         return NULL;
 612              		.loc 2 359 0
 613 0008 0024     		movs	r4, #0
 614              	.LVL67:
 615              	.L30:
 360:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     }
 361:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 362:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     /* align must be power of 2 */
 363:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 364:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     if (align & (align - 1))
 365:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     {
 366:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****         return NULL;
 367:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     }
 368:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 369:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     bytes = bytes == 0 ? 1 : bytes;
 370:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 371:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     align = align < ALLOC_ALIGN_SIZE ? ALLOC_ALIGN_SIZE : align;
 372:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 373:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     if (bytes < ALLOC_MIN_SIZE)
 374:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     {
 375:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****         bytes = ALLOC_MIN_SIZE;
ARM GAS  C:\Users\LuckyE\AppData\Local\Temp\cc6Ct15h.s 			page 31


 376:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     }
 377:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 378:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     bytes = round_up (bytes, ALLOC_ALIGN_SIZE);
 379:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 380:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     if (LOS_MuxPend (heap->mux, LOS_WAIT_FOREVER) != LOS_OK)
 381:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     {
 382:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****         return NULL;
 383:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     }
 384:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 385:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     /* find a big enough memory chunk */
 386:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 387:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     chunk = __get_chunk (heap, bytes + sizeof (ach_t) + align - ALLOC_ALIGN_SIZE);
 388:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 389:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     if (chunk != NULL)
 390:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     {
 391:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****         mem = __carve_extra (heap, chunk, align, bytes);
 392:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     }
 393:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 394:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     (void) LOS_MuxPost (heap->mux);
 395:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 396:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     return mem;
 397:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** }
 616              		.loc 2 397 0
 617 000a 2046     		mov	r0, r4
 618 000c BDE8F889 		pop	{r3, r4, r5, r6, r7, r8, fp, pc}
 619              	.LVL68:
 620              	.L31:
 364:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     {
 621              		.loc 2 364 0
 622 0010 4B1E     		subs	r3, r1, #1
 623 0012 0B42     		tst	r3, r1
 624 0014 F8D1     		bne	.L33
 625 0016 0429     		cmp	r1, #4
 626 0018 38BF     		it	cc
 627 001a 0421     		movcc	r1, #4
 628              	.LVL69:
 629 001c 0F46     		mov	r7, r1
 369:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 630              		.loc 2 369 0
 631 001e 002A     		cmp	r2, #0
 632 0020 00F0A280 		beq	.L41
 633              	.LVL70:
 634 0024 082A     		cmp	r2, #8
 635 0026 38BF     		it	cc
 636 0028 0822     		movcc	r2, #8
 637              	.LVL71:
 638              	.L34:
 378:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 639              		.loc 2 378 0
 640 002a 0332     		adds	r2, r2, #3
 641              	.LVL72:
 380:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     {
 642              		.loc 2 380 0
 643 002c 4FF0FF31 		mov	r1, #-1
 644 0030 D5F8B401 		ldr	r0, [r5, #436]
 645              	.LVL73:
 378:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
ARM GAS  C:\Users\LuckyE\AppData\Local\Temp\cc6Ct15h.s 			page 32


 646              		.loc 2 378 0
 647 0034 22F00306 		bic	r6, r2, #3
 648              	.LVL74:
 380:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     {
 649              		.loc 2 380 0
 650 0038 FFF7FEFF 		bl	LOS_MuxPend
 651              	.LVL75:
 652 003c 0028     		cmp	r0, #0
 653 003e E3D1     		bne	.L33
 387:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 654              		.loc 2 387 0
 655 0040 3A1D     		adds	r2, r7, #4
 656 0042 3244     		add	r2, r2, r6
 657              	.LVL76:
 658              	.LBB174:
 659              	.LBB175:
 660              	.LBB176:
 661              	.LBB177:
 662              	.LBB178:
 663              	.LBB179:
 160:../../iot_link/os/liteos/base/include/cm-tlsf.h **** }
 664              		.loc 1 160 0
 665 0044 B2FA82F3 		clz	r3, r2
 666              	.LVL77:
 667              	.LBE179:
 668              	.LBE178:
 250:../../iot_link/os/liteos/base/include/cm-tlsf.h **** 
 669              		.loc 1 250 0
 670 0048 C3F11D01 		rsb	r1, r3, #29
 671 004c 0123     		movs	r3, #1
 672 004e 8B40     		lsls	r3, r3, r1
 673 0050 013A     		subs	r2, r2, #1
 674              	.LVL78:
 675 0052 1344     		add	r3, r3, r2
 676              	.LVL79:
 677              	.LBB180:
 678              	.LBB181:
 160:../../iot_link/os/liteos/base/include/cm-tlsf.h **** }
 679              		.loc 1 160 0
 680 0054 B3FA83FC 		clz	ip, r3
 681 0058 CCF11F02 		rsb	r2, ip, #31
 682              	.LVL80:
 683              	.LBE181:
 684              	.LBE180:
 685              	.LBB182:
 686              	.LBB183:
 165:../../iot_link/os/liteos/base/include/cm-tlsf.h **** }
 687              		.loc 1 165 0
 688 005c CCF11D01 		rsb	r1, ip, #29
 689 0060 CB40     		lsrs	r3, r3, r1
 690              	.LVL81:
 691              	.LBE183:
 692              	.LBE182:
 255:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     {
 693              		.loc 1 255 0
 694 0062 1D2A     		cmp	r2, #29
 695              	.LBB185:
ARM GAS  C:\Users\LuckyE\AppData\Local\Temp\cc6Ct15h.s 			page 33


 696              	.LBB184:
 165:../../iot_link/os/liteos/base/include/cm-tlsf.h **** }
 697              		.loc 1 165 0
 698 0064 A3F10403 		sub	r3, r3, #4
 699              	.LVL82:
 700              	.LBE184:
 701              	.LBE185:
 255:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     {
 702              		.loc 1 255 0
 703 0068 00F39580 		bgt	.L42
 260:../../iot_link/os/liteos/base/include/cm-tlsf.h **** 
 704              		.loc 1 260 0
 705 006c A5EB0C01 		sub	r1, r5, ip
 706 0070 4FF0FF34 		mov	r4, #-1
 707 0074 C97F     		ldrb	r1, [r1, #31]	@ zero_extendqisi2
 708 0076 04FA03F3 		lsl	r3, r4, r3
 709              	.LVL83:
 262:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     {
 710              		.loc 1 262 0
 711 007a 1940     		ands	r1, r1, r3
 712              	.LVL84:
 713 007c 10D1     		bne	.L36
 264:../../iot_link/os/liteos/base/include/cm-tlsf.h **** 
 714              		.loc 1 264 0
 715 007e CCF1200C 		rsb	ip, ip, #32
 716 0082 2868     		ldr	r0, [r5]
 717 0084 04FA0CF4 		lsl	r4, r4, ip
 718              	.LVL85:
 266:../../iot_link/os/liteos/base/include/cm-tlsf.h ****         {
 719              		.loc 1 266 0
 720 0088 0440     		ands	r4, r4, r0
 721              	.LVL86:
 722 008a 68D0     		beq	.L35
 271:../../iot_link/os/liteos/base/include/cm-tlsf.h ****         sl_bmap = cm->sl_bmap [fl_idx - FL_IDX_BIAS];
 723              		.loc 1 271 0
 724 008c 601E     		subs	r0, r4, #1
 725 008e 20EA0404 		bic	r4, r0, r4
 726              	.LVL87:
 727 0092 B4FA84F4 		clz	r4, r4
 728 0096 C4F12002 		rsb	r2, r4, #32
 729              	.LVL88:
 272:../../iot_link/os/liteos/base/include/cm-tlsf.h ****     }
 730              		.loc 1 272 0
 731 009a 2C1B     		subs	r4, r5, r4
 732 009c 94F82010 		ldrb	r1, [r4, #32]	@ zero_extendqisi2
 733              	.LVL89:
 734              	.L36:
 275:../../iot_link/os/liteos/base/include/cm-tlsf.h **** 
 735              		.loc 1 275 0
 736 00a0 4B1E     		subs	r3, r1, #1
 737 00a2 23EA0103 		bic	r3, r3, r1
 738 00a6 B3FA83F3 		clz	r3, r3
 739              	.LVL90:
 740 00aa C3EB8203 		rsb	r3, r3, r2, lsl #2
 741              	.LVL91:
 277:../../iot_link/os/liteos/base/include/cm-tlsf.h **** }
 742              		.loc 1 277 0
ARM GAS  C:\Users\LuckyE\AppData\Local\Temp\cc6Ct15h.s 			page 34


 743 00ae 1833     		adds	r3, r3, #24
 744 00b0 55F82380 		ldr	r8, [r5, r3, lsl #2]
 745              	.LVL92:
 746              	.LBE177:
 747              	.LBE176:
  72:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     {
 748              		.loc 2 72 0
 749 00b4 B8F1000F 		cmp	r8, #0
 750 00b8 6FD0     		beq	.L44
  74:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     }
 751              		.loc 2 74 0
 752 00ba 4146     		mov	r1, r8
 753 00bc 2846     		mov	r0, r5
 754 00be FFF7FEFF 		bl	__del_chunk
 755              	.LVL93:
 756              	.LBE175:
 757              	.LBE174:
 758              	.LBB186:
 759              	.LBB187:
 211:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     ach_t   * ach         = (ach_t *) chunk;
 760              		.loc 2 211 0
 761 00c2 7C1E     		subs	r4, r7, #1
 762              	.LBB188:
 763              	.LBB189:
 108:../../iot_link/os/liteos/base/include/chunk.h **** }
 109:../../iot_link/os/liteos/base/include/chunk.h **** 
 110:../../iot_link/os/liteos/base/include/chunk.h **** /**
 111:../../iot_link/os/liteos/base/include/chunk.h ****  * __get_prev_chunk - get the previous chunk
 112:../../iot_link/os/liteos/base/include/chunk.h ****  * @chunk: the current chunk
 113:../../iot_link/os/liteos/base/include/chunk.h ****  *
 114:../../iot_link/os/liteos/base/include/chunk.h ****  * return: previous chunk
 115:../../iot_link/os/liteos/base/include/chunk.h ****  */
 116:../../iot_link/os/liteos/base/include/chunk.h **** 
 117:../../iot_link/os/liteos/base/include/chunk.h **** static inline chunk_t * __get_prev_chunk (chunk_t * chunk)
 118:../../iot_link/os/liteos/base/include/chunk.h **** {
 119:../../iot_link/os/liteos/base/include/chunk.h ****     return chunk->prev;
 120:../../iot_link/os/liteos/base/include/chunk.h **** }
 121:../../iot_link/os/liteos/base/include/chunk.h **** 
 122:../../iot_link/os/liteos/base/include/chunk.h **** /**
 123:../../iot_link/os/liteos/base/include/chunk.h ****  * __get_mem_block - get the memory block in a chunk
 124:../../iot_link/os/liteos/base/include/chunk.h ****  * @chunk: the chunk
 125:../../iot_link/os/liteos/base/include/chunk.h ****  *
 126:../../iot_link/os/liteos/base/include/chunk.h ****  * return: the memory block in the chunk
 127:../../iot_link/os/liteos/base/include/chunk.h ****  */
 128:../../iot_link/os/liteos/base/include/chunk.h **** 
 129:../../iot_link/os/liteos/base/include/chunk.h **** static inline char * __get_mem_block (chunk_t * chunk)
 130:../../iot_link/os/liteos/base/include/chunk.h **** {
 131:../../iot_link/os/liteos/base/include/chunk.h ****     return (char *) chunk + sizeof (ach_t);
 764              		.loc 5 131 0
 765 00c4 08F10803 		add	r3, r8, #8
 766              	.LVL94:
 767              	.LBE189:
 768              	.LBE188:
 211:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     ach_t   * ach         = (ach_t *) chunk;
 769              		.loc 2 211 0
 770 00c8 1C44     		add	r4, r4, r3
 771 00ca 7F42     		negs	r7, r7
ARM GAS  C:\Users\LuckyE\AppData\Local\Temp\cc6Ct15h.s 			page 35


 772              	.LVL95:
 773 00cc 3C40     		ands	r4, r4, r7
 774              	.LVL96:
 216:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     {
 775              		.loc 2 216 0
 776 00ce A342     		cmp	r3, r4
 777 00d0 05D0     		beq	.L37
 778              	.LVL97:
 240:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****         {
 779              		.loc 2 240 0
 780 00d2 A4EB0803 		sub	r3, r4, r8
 781 00d6 182B     		cmp	r3, #24
 782 00d8 48D8     		bhi	.L38
 783              	.LVL98:
 784              	.LBB190:
 785              	.LBB191:
 132:../../iot_link/os/liteos/base/include/chunk.h **** }
 133:../../iot_link/os/liteos/base/include/chunk.h **** 
 134:../../iot_link/os/liteos/base/include/chunk.h **** /**
 135:../../iot_link/os/liteos/base/include/chunk.h ****  * __get_fch_from_mem - create a new chunk for a memory block
 136:../../iot_link/os/liteos/base/include/chunk.h ****  * @mem: the memory block
 137:../../iot_link/os/liteos/base/include/chunk.h ****  *
 138:../../iot_link/os/liteos/base/include/chunk.h ****  * return: the new chunk containing the memory block
 139:../../iot_link/os/liteos/base/include/chunk.h ****  */
 140:../../iot_link/os/liteos/base/include/chunk.h **** 
 141:../../iot_link/os/liteos/base/include/chunk.h **** static inline chunk_t * __get_fch_from_mem (char * mem)
 142:../../iot_link/os/liteos/base/include/chunk.h **** {
 143:../../iot_link/os/liteos/base/include/chunk.h ****     return &((chunk_t *) mem) [-1];
 144:../../iot_link/os/liteos/base/include/chunk.h **** }
 145:../../iot_link/os/liteos/base/include/chunk.h **** 
 146:../../iot_link/os/liteos/base/include/chunk.h **** /**
 147:../../iot_link/os/liteos/base/include/chunk.h ****  * __get_ach_from_mem - get the chunk of a allocated memory block
 148:../../iot_link/os/liteos/base/include/chunk.h ****  * @mem: the memory block
 149:../../iot_link/os/liteos/base/include/chunk.h ****  *
 150:../../iot_link/os/liteos/base/include/chunk.h ****  * return: the chunk containing the memory block
 151:../../iot_link/os/liteos/base/include/chunk.h ****  */
 152:../../iot_link/os/liteos/base/include/chunk.h **** 
 153:../../iot_link/os/liteos/base/include/chunk.h **** static inline ach_t * __get_ach_from_mem (char * mem)
 154:../../iot_link/os/liteos/base/include/chunk.h **** {
 155:../../iot_link/os/liteos/base/include/chunk.h ****     uintptr_t szorptr;
 156:../../iot_link/os/liteos/base/include/chunk.h **** 
 157:../../iot_link/os/liteos/base/include/chunk.h ****     /*
 158:../../iot_link/os/liteos/base/include/chunk.h ****      * there are two possible cases here:
 159:../../iot_link/os/liteos/base/include/chunk.h ****      *
 160:../../iot_link/os/liteos/base/include/chunk.h ****      * 1) chunk->head is just behind the 'mem':
 161:../../iot_link/os/liteos/base/include/chunk.h ****      *
 162:../../iot_link/os/liteos/base/include/chunk.h ****      *    +-------------+--------------+
 163:../../iot_link/os/liteos/base/include/chunk.h ****      *    | prev | size | memory block |
 164:../../iot_link/os/liteos/base/include/chunk.h ****      *    +-------------+--------------+
 165:../../iot_link/os/liteos/base/include/chunk.h ****      *
 166:../../iot_link/os/liteos/base/include/chunk.h ****      * 2) after an aligned alloc, there may extra memory in the front but the
 167:../../iot_link/os/liteos/base/include/chunk.h ****      *    size is less than sizeof (chunk_t), there will be a pointer in the
 168:../../iot_link/os/liteos/base/include/chunk.h ****      *    'extra mem':
 169:../../iot_link/os/liteos/base/include/chunk.h ****      *
 170:../../iot_link/os/liteos/base/include/chunk.h ****      *    +-------------+-----------+----------------------+
 171:../../iot_link/os/liteos/base/include/chunk.h ****      *    | prev | size | extra mem | aligned memory block |
 172:../../iot_link/os/liteos/base/include/chunk.h ****      *    +-------------+-----------+----------------------+
ARM GAS  C:\Users\LuckyE\AppData\Local\Temp\cc6Ct15h.s 			page 36


 173:../../iot_link/os/liteos/base/include/chunk.h ****      *
 174:../../iot_link/os/liteos/base/include/chunk.h ****      *    please refer to the routine of <__carve_head> for this case
 175:../../iot_link/os/liteos/base/include/chunk.h ****      *
 176:../../iot_link/os/liteos/base/include/chunk.h ****      * for both cases, this routine just works fine
 177:../../iot_link/os/liteos/base/include/chunk.h ****      */
 178:../../iot_link/os/liteos/base/include/chunk.h **** 
 179:../../iot_link/os/liteos/base/include/chunk.h ****     szorptr = ((uintptr_t *) mem) [-1];
 180:../../iot_link/os/liteos/base/include/chunk.h **** 
 181:../../iot_link/os/liteos/base/include/chunk.h ****     if (szorptr & 1)
 182:../../iot_link/os/liteos/base/include/chunk.h ****     {
 183:../../iot_link/os/liteos/base/include/chunk.h **** 
 184:../../iot_link/os/liteos/base/include/chunk.h ****         /* case 1, chunk->size */
 185:../../iot_link/os/liteos/base/include/chunk.h **** 
 186:../../iot_link/os/liteos/base/include/chunk.h ****         return &((ach_t *) mem) [-1];
 187:../../iot_link/os/liteos/base/include/chunk.h ****     }
 188:../../iot_link/os/liteos/base/include/chunk.h **** 
 189:../../iot_link/os/liteos/base/include/chunk.h ****     /* case 2, a pointer to the chunk */
 190:../../iot_link/os/liteos/base/include/chunk.h **** 
 191:../../iot_link/os/liteos/base/include/chunk.h ****     return (ach_t *) szorptr;
 192:../../iot_link/os/liteos/base/include/chunk.h **** }
 193:../../iot_link/os/liteos/base/include/chunk.h **** 
 194:../../iot_link/os/liteos/base/include/chunk.h **** /**
 195:../../iot_link/os/liteos/base/include/chunk.h ****  * __set_ach_to_mem - set chunk in the front of memory block
 196:../../iot_link/os/liteos/base/include/chunk.h ****  * @mem: the memory block
 197:../../iot_link/os/liteos/base/include/chunk.h ****  *
 198:../../iot_link/os/liteos/base/include/chunk.h ****  * return: NA
 199:../../iot_link/os/liteos/base/include/chunk.h ****  */
 200:../../iot_link/os/liteos/base/include/chunk.h **** 
 201:../../iot_link/os/liteos/base/include/chunk.h **** static inline void __set_ach_to_mem (char * mem, chunk_t * chunk)
 202:../../iot_link/os/liteos/base/include/chunk.h **** {
 203:../../iot_link/os/liteos/base/include/chunk.h ****     ((chunk_t **) mem) [-1] = chunk;
 786              		.loc 5 203 0
 787 00da 44F8048C 		str	r8, [r4, #-4]
 788              	.LVL99:
 789              	.L37:
 790              	.LBE191:
 791              	.LBE190:
 281:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 792              		.loc 2 281 0
 793 00de D8F80430 		ldr	r3, [r8, #4]
 794 00e2 A4EB0801 		sub	r1, r4, r8
 795 00e6 591A     		subs	r1, r3, r1
 796              	.LVL100:
 288:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     {
 797              		.loc 2 288 0
 798 00e8 8A1B     		subs	r2, r1, r6
 799 00ea 0F2A     		cmp	r2, #15
 800 00ec 0DD9     		bls	.L39
 321:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 801              		.loc 2 321 0
 802 00ee 3344     		add	r3, r3, r6
 803 00f0 5B1A     		subs	r3, r3, r1
 323:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****         chunk->prev = (chunk_t *) ach;
 804              		.loc 2 323 0
 805 00f2 A119     		adds	r1, r4, r6
 806              	.LVL101:
 321:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
ARM GAS  C:\Users\LuckyE\AppData\Local\Temp\cc6Ct15h.s 			page 37


 807              		.loc 2 321 0
 808 00f4 C8F80430 		str	r3, [r8, #4]
 809              	.LVL102:
 324:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****         chunk->size = (usable_size - size);
 810              		.loc 2 324 0
 811 00f8 44F80680 		str	r8, [r4, r6]
 325:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 812              		.loc 2 325 0
 813 00fc 4A60     		str	r2, [r1, #4]
 814              	.LBB192:
 815              	.LBB193:
 107:../../iot_link/os/liteos/base/include/chunk.h **** }
 816              		.loc 5 107 0
 817 00fe 22F00102 		bic	r2, r2, #1
 818              	.LBE193:
 819              	.LBE192:
 331:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     }
 820              		.loc 2 331 0
 821 0102 2846     		mov	r0, r5
 329:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 822              		.loc 2 329 0
 823 0104 8950     		str	r1, [r1, r2]
 331:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     }
 824              		.loc 2 331 0
 825 0106 FFF7FEFF 		bl	__put_chunk
 826              	.LVL103:
 827              	.L39:
 828              	.LBB194:
 829              	.LBB195:
 114:../../iot_link/os/liteos/base/include/heap.h **** }
 115:../../iot_link/os/liteos/base/include/heap.h **** 
 116:../../iot_link/os/liteos/base/include/heap.h **** static inline void __stat_chunk_alloc (mem_stat_t * stat, chunk_t * chunk)
 117:../../iot_link/os/liteos/base/include/heap.h **** {
 118:../../iot_link/os/liteos/base/include/heap.h ****     stat->busy_chunks++;
 830              		.loc 4 118 0
 831 010a D5F8C031 		ldr	r3, [r5, #448]
 832              	.LBE195:
 833              	.LBE194:
 335:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** #endif
 834              		.loc 2 335 0
 835 010e D8F80460 		ldr	r6, [r8, #4]
 836              	.LVL104:
 837              	.LBB197:
 838              	.LBB196:
 119:../../iot_link/os/liteos/base/include/heap.h ****     stat->busy_size += chunk->size;
 839              		.loc 4 119 0
 840 0112 D5F8C411 		ldr	r1, [r5, #452]
 120:../../iot_link/os/liteos/base/include/heap.h ****     stat->cum_allocated++;
 841              		.loc 4 120 0
 842 0116 05F5DC70 		add	r0, r5, #440
 843              	.LVL105:
 118:../../iot_link/os/liteos/base/include/heap.h ****     stat->busy_size += chunk->size;
 844              		.loc 4 118 0
 845 011a 0133     		adds	r3, r3, #1
 846 011c C5F8C031 		str	r3, [r5, #448]
 847              		.loc 4 120 0
 848 0120 D0E90623 		ldrd	r2, [r0, #24]
ARM GAS  C:\Users\LuckyE\AppData\Local\Temp\cc6Ct15h.s 			page 38


 849 0124 12F1010B 		adds	fp, r2, #1
 850 0128 43F1000C 		adc	ip, r3, #0
 121:../../iot_link/os/liteos/base/include/heap.h ****     stat->cum_size_allocated += chunk->size;
 851              		.loc 4 121 0
 852 012c D0E90823 		ldrd	r2, [r0, #32]
 119:../../iot_link/os/liteos/base/include/heap.h ****     stat->cum_allocated++;
 853              		.loc 4 119 0
 854 0130 3144     		add	r1, r1, r6
 855 0132 C5F8C411 		str	r1, [r5, #452]
 120:../../iot_link/os/liteos/base/include/heap.h ****     stat->cum_size_allocated += chunk->size;
 856              		.loc 4 120 0
 857 0136 C0E906BC 		strd	fp, [r0, #24]
 858              		.loc 4 121 0
 859 013a 12EB060B 		adds	fp, r2, r6
 860 013e 43F1000C 		adc	ip, r3, #0
 122:../../iot_link/os/liteos/base/include/heap.h **** 
 123:../../iot_link/os/liteos/base/include/heap.h ****     if (stat->busy_size > stat->max_busy_size)
 861              		.loc 4 123 0
 862 0142 D5F8C831 		ldr	r3, [r5, #456]
 863 0146 9942     		cmp	r1, r3
 121:../../iot_link/os/liteos/base/include/heap.h **** 
 864              		.loc 4 121 0
 865 0148 C0E908BC 		strd	fp, [r0, #32]
 124:../../iot_link/os/liteos/base/include/heap.h ****     {
 125:../../iot_link/os/liteos/base/include/heap.h ****         stat->max_busy_size = stat->busy_size;
 866              		.loc 4 125 0
 867 014c 88BF     		it	hi
 868 014e C5F8C811 		strhi	r1, [r5, #456]
 869              	.LVL106:
 870              	.LBE196:
 871              	.LBE197:
 872              	.LBB198:
 873              	.LBB199:
  85:../../iot_link/os/liteos/base/include/chunk.h **** }
 874              		.loc 5 85 0
 875 0152 D8F80430 		ldr	r3, [r8, #4]
 876 0156 43F00103 		orr	r3, r3, #1
 877 015a C8F80430 		str	r3, [r8, #4]
 878              	.LVL107:
 879              	.L35:
 880              	.LBE199:
 881              	.LBE198:
 882              	.LBE187:
 883              	.LBE186:
 394:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 884              		.loc 2 394 0
 885 015e D5F8B401 		ldr	r0, [r5, #436]
 886 0162 FFF7FEFF 		bl	LOS_MuxPost
 887              	.LVL108:
 396:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** }
 888              		.loc 2 396 0
 889 0166 50E7     		b	.L30
 890              	.LVL109:
 891              	.L41:
 375:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     }
 892              		.loc 2 375 0
 893 0168 0822     		movs	r2, #8
ARM GAS  C:\Users\LuckyE\AppData\Local\Temp\cc6Ct15h.s 			page 39


 894              	.LVL110:
 895 016a 5EE7     		b	.L34
 896              	.LVL111:
 897              	.L38:
 898 016c D8F80430 		ldr	r3, [r8, #4]
 899              	.LBB203:
 900              	.LBB202:
 248:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****             ach->size = chunk->size - ((char *) ach - (char *) chunk);
 901              		.loc 2 248 0
 902 0170 44F8088C 		str	r8, [r4, #-8]
 246:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 903              		.loc 2 246 0
 904 0174 A4F10807 		sub	r7, r4, #8
 905              	.LVL112:
 249:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 906              		.loc 2 249 0
 907 0178 A7EB0802 		sub	r2, r7, r8
 908 017c 9B1A     		subs	r3, r3, r2
 909 017e 44F8043C 		str	r3, [r4, #-4]
 910              	.LBB200:
 911              	.LBB201:
 107:../../iot_link/os/liteos/base/include/chunk.h **** }
 912              		.loc 5 107 0
 913 0182 23F00103 		bic	r3, r3, #1
 914              	.LBE201:
 915              	.LBE200:
 255:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****         }
 916              		.loc 2 255 0
 917 0186 4146     		mov	r1, r8
 251:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 918              		.loc 2 251 0
 919 0188 FF50     		str	r7, [r7, r3]
 253:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 920              		.loc 2 253 0
 921 018a C8F80420 		str	r2, [r8, #4]
 255:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****         }
 922              		.loc 2 255 0
 923 018e FFF7FEFF 		bl	__put_chunk
 924              	.LVL113:
 246:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 925              		.loc 2 246 0
 926 0192 B846     		mov	r8, r7
 927              	.LVL114:
 928 0194 A3E7     		b	.L37
 929              	.LVL115:
 930              	.L42:
 931              	.LBE202:
 932              	.LBE203:
 355:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 933              		.loc 2 355 0
 934 0196 0446     		mov	r4, r0
 935 0198 E1E7     		b	.L35
 936              	.LVL116:
 937              	.L44:
 938 019a 4446     		mov	r4, r8
 939 019c DFE7     		b	.L35
 940              		.cfi_endproc
ARM GAS  C:\Users\LuckyE\AppData\Local\Temp\cc6Ct15h.s 			page 40


 941              	.LFE320:
 943              		.section	.text.heap_alloc,"ax",%progbits
 944              		.align	1
 945              		.global	heap_alloc
 946              		.syntax unified
 947              		.thumb
 948              		.thumb_func
 949              		.fpu fpv4-sp-d16
 951              	heap_alloc:
 952              	.LFB321:
 398:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 399:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** /**
 400:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****  * heap_alloc - allocate a block of memory from a heap
 401:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****  * @heap:  the heap to allocate from
 402:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****  * @bytes: size of memory in bytes to allocate
 403:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****  *
 404:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****  * return: the allocated memory block or NULL if fail
 405:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****  */
 406:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 407:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** char * heap_alloc (heap_t * heap, size_t bytes)
 408:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** {
 953              		.loc 2 408 0
 954              		.cfi_startproc
 955              		@ args = 0, pretend = 0, frame = 0
 956              		@ frame_needed = 0, uses_anonymous_args = 0
 957              		@ link register save eliminated.
 958              	.LVL117:
 409:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     return heap_alloc_align (heap, ALLOC_ALIGN_SIZE, bytes);
 959              		.loc 2 409 0
 960 0000 0A46     		mov	r2, r1
 961 0002 0421     		movs	r1, #4
 962              	.LVL118:
 963 0004 FFF7FEBF 		b	heap_alloc_align
 964              	.LVL119:
 965              		.cfi_endproc
 966              	.LFE321:
 968              		.section	.text.heap_free,"ax",%progbits
 969              		.align	1
 970              		.global	heap_free
 971              		.syntax unified
 972              		.thumb
 973              		.thumb_func
 974              		.fpu fpv4-sp-d16
 976              	heap_free:
 977              	.LFB322:
 410:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** }
 411:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 412:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** /**
 413:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****  * heap_free - free a block of memory
 414:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****  * @heap:  the heap to allocate from
 415:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****  *
 416:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****  * return: 0 on sucess
 417:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****  */
 418:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 419:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** int heap_free (heap_t * heap, char * mem)
 420:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** {
 978              		.loc 2 420 0
ARM GAS  C:\Users\LuckyE\AppData\Local\Temp\cc6Ct15h.s 			page 41


 979              		.cfi_startproc
 980              		@ args = 0, pretend = 0, frame = 0
 981              		@ frame_needed = 0, uses_anonymous_args = 0
 982              	.LVL120:
 983 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 984              	.LCFI5:
 985              		.cfi_def_cfa_offset 24
 986              		.cfi_offset 4, -24
 987              		.cfi_offset 5, -20
 988              		.cfi_offset 6, -16
 989              		.cfi_offset 7, -12
 990              		.cfi_offset 8, -8
 991              		.cfi_offset 14, -4
 421:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     chunk_t * chunk;
 422:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     chunk_t * prev_chunk;
 423:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     chunk_t * next_chunk;
 424:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 425:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     if (heap == NULL)
 992              		.loc 2 425 0
 993 0004 0646     		mov	r6, r0
 994 0006 18B9     		cbnz	r0, .L47
 995              	.LVL121:
 996              	.L51:
 426:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     {
 427:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****         return -1;
 997              		.loc 2 427 0
 998 0008 4FF0FF30 		mov	r0, #-1
 999              	.L46:
 428:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     }
 429:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 430:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     /* ANSI C - free of NULL is OK */
 431:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 432:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     if (mem == NULL)
 433:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     {
 434:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****         return 0;
 435:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     }
 436:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 437:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     chunk = (chunk_t *) __get_ach_from_mem (mem);
 438:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 439:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     if (LOS_MuxPend (heap->mux, LOS_WAIT_FOREVER) != LOS_OK)
 440:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     {
 441:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****         return -1;
 442:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     }
 443:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 444:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     __set_chunk_free (chunk);
 445:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 446:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** #if (LOSCFG_MEM_STATISTICS == YES)
 447:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     __stat_chunk_free (&heap->stat, chunk);
 448:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** #endif
 449:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 450:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     prev_chunk = __get_prev_chunk (chunk);
 451:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     next_chunk = __get_next_chunk (chunk);
 452:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 453:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     if (__is_free (prev_chunk))
 454:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     {
 455:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****         __del_chunk (heap, prev_chunk);
 456:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****         prev_chunk->size += chunk->size;
ARM GAS  C:\Users\LuckyE\AppData\Local\Temp\cc6Ct15h.s 			page 42


 457:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****         chunk = prev_chunk;
 458:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     }
 459:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 460:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     if (__is_free (next_chunk))
 461:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     {
 462:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****         __del_chunk (heap, next_chunk);
 463:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****         chunk->size += next_chunk->size;
 464:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 465:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****         next_chunk = __get_next_chunk (chunk);
 466:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     }
 467:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 468:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     next_chunk->prev = chunk;
 469:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 470:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     __put_chunk (heap, chunk);
 471:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 472:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     (void) LOS_MuxPost (heap->mux);
 473:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 474:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     return 0;
 475:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** }
 1000              		.loc 2 475 0
 1001 000c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1002              	.LVL122:
 1003              	.L47:
 432:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     {
 1004              		.loc 2 432 0
 1005 0010 0029     		cmp	r1, #0
 1006 0012 52D0     		beq	.L54
 1007              	.LVL123:
 1008              	.LBB222:
 1009              	.LBB223:
 1010              	.LBB224:
 1011              	.LBB225:
 179:../../iot_link/os/liteos/base/include/chunk.h **** 
 1012              		.loc 5 179 0
 1013 0014 51F8044C 		ldr	r4, [r1, #-4]
 1014              	.LVL124:
 181:../../iot_link/os/liteos/base/include/chunk.h ****     {
 1015              		.loc 5 181 0
 1016 0018 E007     		lsls	r0, r4, #31
 1017              	.LVL125:
 186:../../iot_link/os/liteos/base/include/chunk.h ****     }
 1018              		.loc 5 186 0
 1019 001a 48BF     		it	mi
 1020 001c A1F10804 		submi	r4, r1, #8
 1021              	.LVL126:
 1022              	.LBE225:
 1023              	.LBE224:
 439:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     {
 1024              		.loc 2 439 0
 1025 0020 D6F8B401 		ldr	r0, [r6, #436]
 1026 0024 4FF0FF31 		mov	r1, #-1
 1027              	.LVL127:
 1028 0028 FFF7FEFF 		bl	LOS_MuxPend
 1029              	.LVL128:
 1030 002c 0028     		cmp	r0, #0
 1031 002e EBD1     		bne	.L51
 1032              	.LVL129:
ARM GAS  C:\Users\LuckyE\AppData\Local\Temp\cc6Ct15h.s 			page 43


 1033              	.LBB226:
 1034              	.LBB227:
  95:../../iot_link/os/liteos/base/include/chunk.h **** }
 1035              		.loc 5 95 0
 1036 0030 6568     		ldr	r5, [r4, #4]
 1037 0032 25F00105 		bic	r5, r5, #1
 1038 0036 6560     		str	r5, [r4, #4]
 1039              	.LVL130:
 1040              	.LBE227:
 1041              	.LBE226:
 1042              	.LBB228:
 1043              	.LBB229:
 126:../../iot_link/os/liteos/base/include/heap.h ****     }
 127:../../iot_link/os/liteos/base/include/heap.h **** }
 128:../../iot_link/os/liteos/base/include/heap.h **** 
 129:../../iot_link/os/liteos/base/include/heap.h **** static inline void __stat_chunk_free (mem_stat_t * stat, chunk_t * chunk)
 130:../../iot_link/os/liteos/base/include/heap.h **** {
 131:../../iot_link/os/liteos/base/include/heap.h ****     stat->busy_chunks--;
 1044              		.loc 4 131 0
 1045 0038 D6F8C031 		ldr	r3, [r6, #448]
 1046 003c 013B     		subs	r3, r3, #1
 1047 003e C6F8C031 		str	r3, [r6, #448]
 132:../../iot_link/os/liteos/base/include/heap.h ****     stat->busy_size -= chunk->size;
 1048              		.loc 4 132 0
 1049 0042 D6F8C431 		ldr	r3, [r6, #452]
 133:../../iot_link/os/liteos/base/include/heap.h ****     stat->cum_freed++;
 1050              		.loc 4 133 0
 1051 0046 06F5DC71 		add	r1, r6, #440
 1052              	.LVL131:
 132:../../iot_link/os/liteos/base/include/heap.h ****     stat->busy_size -= chunk->size;
 1053              		.loc 4 132 0
 1054 004a 5B1B     		subs	r3, r3, r5
 1055 004c C6F8C431 		str	r3, [r6, #452]
 1056              		.loc 4 133 0
 1057 0050 D1E90A23 		ldrd	r2, [r1, #40]
 1058 0054 571C     		adds	r7, r2, #1
 1059 0056 43F10008 		adc	r8, r3, #0
 134:../../iot_link/os/liteos/base/include/heap.h ****     stat->cum_size_freed += chunk->size;
 1060              		.loc 4 134 0
 1061 005a D1E90C23 		ldrd	r2, [r1, #48]
 133:../../iot_link/os/liteos/base/include/heap.h ****     stat->cum_freed++;
 1062              		.loc 4 133 0
 1063 005e C1E90A78 		strd	r7, [r1, #40]
 1064              		.loc 4 134 0
 1065 0062 5719     		adds	r7, r2, r5
 1066 0064 43F10008 		adc	r8, r3, #0
 1067 0068 C1E90C78 		strd	r7, [r1, #48]
 1068              	.LVL132:
 1069              	.LBE229:
 1070              	.LBE228:
 450:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     next_chunk = __get_next_chunk (chunk);
 1071              		.loc 2 450 0
 1072 006c 2768     		ldr	r7, [r4]
 1073              	.LVL133:
 1074              	.LBB230:
 1075              	.LBB231:
  75:../../iot_link/os/liteos/base/include/chunk.h **** }
ARM GAS  C:\Users\LuckyE\AppData\Local\Temp\cc6Ct15h.s 			page 44


 1076              		.loc 5 75 0
 1077 006e 7B68     		ldr	r3, [r7, #4]
 1078              	.LBE231:
 1079              	.LBE230:
 453:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     {
 1080              		.loc 2 453 0
 1081 0070 DA07     		lsls	r2, r3, #31
 1082              	.LBB232:
 1083              	.LBB233:
 107:../../iot_link/os/liteos/base/include/chunk.h **** }
 1084              		.loc 5 107 0
 1085 0072 2544     		add	r5, r5, r4
 1086              	.LVL134:
 1087              	.LBE233:
 1088              	.LBE232:
 453:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     {
 1089              		.loc 2 453 0
 1090 0074 08D4     		bmi	.L52
 455:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****         prev_chunk->size += chunk->size;
 1091              		.loc 2 455 0
 1092 0076 3946     		mov	r1, r7
 1093 0078 3046     		mov	r0, r6
 1094 007a FFF7FEFF 		bl	__del_chunk
 1095              	.LVL135:
 456:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****         chunk = prev_chunk;
 1096              		.loc 2 456 0
 1097 007e 6268     		ldr	r2, [r4, #4]
 1098 0080 7B68     		ldr	r3, [r7, #4]
 1099 0082 1344     		add	r3, r3, r2
 1100 0084 7B60     		str	r3, [r7, #4]
 1101              	.LVL136:
 1102 0086 3C46     		mov	r4, r7
 1103              	.LVL137:
 1104              	.L52:
 1105              	.LBB234:
 1106              	.LBB235:
  75:../../iot_link/os/liteos/base/include/chunk.h **** }
 1107              		.loc 5 75 0
 1108 0088 6B68     		ldr	r3, [r5, #4]
 1109              	.LBE235:
 1110              	.LBE234:
 460:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     {
 1111              		.loc 2 460 0
 1112 008a DB07     		lsls	r3, r3, #31
 1113 008c 0AD4     		bmi	.L53
 462:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****         chunk->size += next_chunk->size;
 1114              		.loc 2 462 0
 1115 008e 2946     		mov	r1, r5
 1116 0090 3046     		mov	r0, r6
 1117 0092 FFF7FEFF 		bl	__del_chunk
 1118              	.LVL138:
 463:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 1119              		.loc 2 463 0
 1120 0096 6368     		ldr	r3, [r4, #4]
 1121 0098 6D68     		ldr	r5, [r5, #4]
 1122 009a 1D44     		add	r5, r5, r3
 1123 009c 6560     		str	r5, [r4, #4]
ARM GAS  C:\Users\LuckyE\AppData\Local\Temp\cc6Ct15h.s 			page 45


 1124              	.LVL139:
 1125              	.LBB236:
 1126              	.LBB237:
 107:../../iot_link/os/liteos/base/include/chunk.h **** }
 1127              		.loc 5 107 0
 1128 009e 25F00105 		bic	r5, r5, #1
 1129 00a2 2544     		add	r5, r5, r4
 1130              	.LVL140:
 1131              	.L53:
 1132              	.LBE237:
 1133              	.LBE236:
 470:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 1134              		.loc 2 470 0
 1135 00a4 2146     		mov	r1, r4
 468:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 1136              		.loc 2 468 0
 1137 00a6 2C60     		str	r4, [r5]
 470:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 1138              		.loc 2 470 0
 1139 00a8 3046     		mov	r0, r6
 1140 00aa FFF7FEFF 		bl	__put_chunk
 1141              	.LVL141:
 472:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 1142              		.loc 2 472 0
 1143 00ae D6F8B401 		ldr	r0, [r6, #436]
 1144 00b2 FFF7FEFF 		bl	LOS_MuxPost
 1145              	.LVL142:
 474:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** }
 1146              		.loc 2 474 0
 1147 00b6 0020     		movs	r0, #0
 1148 00b8 A8E7     		b	.L46
 1149              	.LVL143:
 1150              	.L54:
 1151              	.LBE223:
 1152              	.LBE222:
 434:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     }
 1153              		.loc 2 434 0
 1154 00ba 0846     		mov	r0, r1
 1155              	.LVL144:
 1156 00bc A6E7     		b	.L46
 1157              		.cfi_endproc
 1158              	.LFE322:
 1160              		.section	.text.heap_realloc,"ax",%progbits
 1161              		.align	1
 1162              		.global	heap_realloc
 1163              		.syntax unified
 1164              		.thumb
 1165              		.thumb_func
 1166              		.fpu fpv4-sp-d16
 1168              	heap_realloc:
 1169              	.LFB323:
 476:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 477:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** /**
 478:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****  * heap_realloc - realloc memory from a heap
 479:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****  * @heap: the heap to allocate from
 480:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****  * @ptr:  the original memory
 481:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****  * @size: the new size
ARM GAS  C:\Users\LuckyE\AppData\Local\Temp\cc6Ct15h.s 			page 46


 482:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****  *
 483:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****  * return: the allocated memory block or NULL if fail
 484:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****  */
 485:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 486:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** char * heap_realloc (heap_t * heap, char * ptr, size_t size)
 487:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** {
 1170              		.loc 2 487 0
 1171              		.cfi_startproc
 1172              		@ args = 0, pretend = 0, frame = 0
 1173              		@ frame_needed = 0, uses_anonymous_args = 0
 1174              	.LVL145:
 1175 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 1176              	.LCFI6:
 1177              		.cfi_def_cfa_offset 32
 1178              		.cfi_offset 3, -32
 1179              		.cfi_offset 4, -28
 1180              		.cfi_offset 5, -24
 1181              		.cfi_offset 6, -20
 1182              		.cfi_offset 7, -16
 1183              		.cfi_offset 8, -12
 1184              		.cfi_offset 9, -8
 1185              		.cfi_offset 14, -4
 1186              		.loc 2 487 0
 1187 0004 0746     		mov	r7, r0
 1188 0006 1446     		mov	r4, r2
 488:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     char    * mem;
 489:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     size_t    usable_size;
 490:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     size_t    left_size;
 491:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     chunk_t * chunk;
 492:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     chunk_t * new;
 493:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     chunk_t * next;
 494:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 495:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     if (ptr == NULL)
 1189              		.loc 2 495 0
 1190 0008 0E46     		mov	r6, r1
 1191 000a 21B9     		cbnz	r1, .L56
 496:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     {
 497:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****         return heap_alloc (heap, size);
 1192              		.loc 2 497 0
 1193 000c 1146     		mov	r1, r2
 1194              	.LVL146:
 498:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     }
 499:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 500:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     if (size == 0)
 501:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     {
 502:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****         heap_free (heap, ptr);
 503:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****         return NULL;
 504:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     }
 505:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 506:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     if (size < ALLOC_MIN_SIZE)
 507:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     {
 508:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****         size = ALLOC_MIN_SIZE;
 509:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     }
 510:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     else
 511:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     {
 512:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****         size  = round_up (size, ALLOC_ALIGN);
 513:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     }
ARM GAS  C:\Users\LuckyE\AppData\Local\Temp\cc6Ct15h.s 			page 47


 514:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 515:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     chunk = (chunk_t *) __get_ach_from_mem (ptr);
 516:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     next  = __get_next_chunk (chunk);
 517:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 518:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     usable_size = ((char *) next) - ptr;
 519:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 520:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     if (usable_size < size)
 521:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     {
 522:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****         mem = heap_alloc (heap, size);
 523:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 524:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****         if (mem != NULL)
 525:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****         {
 526:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****             memcpy (mem, ptr, usable_size);
 527:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****             heap_free (heap, ptr);
 528:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****         }
 529:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 530:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****         return mem;
 531:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     }
 532:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 533:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     /* memory in this chunk is enough, needless alloc new one */
 534:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 535:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     left_size = usable_size - size;
 536:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 537:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     if (left_size < sizeof (chunk_t))
 538:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     {
 539:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****         return ptr;
 540:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     }
 541:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 542:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     /* extra memory in the end and can be released */
 543:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 544:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     new = (chunk_t *) ((char *) next - left_size);
 545:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 546:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     new->prev = chunk;
 547:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 548:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     if (LOS_MuxPend (heap->mux, LOS_WAIT_FOREVER) != LOS_OK)
 549:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     {
 550:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****         return ptr;
 551:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     }
 552:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 553:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     chunk->size -= left_size;
 554:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 555:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     if (__is_free (next))
 556:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     {
 557:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****         new->size = left_size + next->size;
 558:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****         __del_chunk (heap, next);
 559:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****         next = __get_next_chunk (new);
 560:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     }
 561:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     else
 562:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     {
 563:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****         new->size = left_size;
 564:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     }
 565:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 566:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     next->prev = new;
 567:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 568:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     __put_chunk (heap, new);
 569:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 570:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     (void) LOS_MuxPost (heap->mux);
ARM GAS  C:\Users\LuckyE\AppData\Local\Temp\cc6Ct15h.s 			page 48


 571:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 572:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     return ptr;
 573:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** }
 1195              		.loc 2 573 0
 1196 000e BDE8F843 		pop	{r3, r4, r5, r6, r7, r8, r9, lr}
 1197              	.LCFI7:
 1198              		.cfi_remember_state
 1199              		.cfi_restore 14
 1200              		.cfi_restore 9
 1201              		.cfi_restore 8
 1202              		.cfi_restore 7
 1203              		.cfi_restore 6
 1204              		.cfi_restore 5
 1205              		.cfi_restore 4
 1206              		.cfi_restore 3
 1207              		.cfi_def_cfa_offset 0
 1208              	.LVL147:
 497:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     }
 1209              		.loc 2 497 0
 1210 0012 FFF7FEBF 		b	heap_alloc
 1211              	.LVL148:
 1212              	.L56:
 1213              	.LCFI8:
 1214              		.cfi_restore_state
 500:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     {
 1215              		.loc 2 500 0
 1216 0016 22B9     		cbnz	r2, .L57
 1217              	.LVL149:
 1218              	.L71:
 527:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****         }
 1219              		.loc 2 527 0
 1220 0018 FFF7FEFF 		bl	heap_free
 1221              	.LVL150:
 1222              	.L55:
 1223              		.loc 2 573 0
 1224 001c 2046     		mov	r0, r4
 1225 001e BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 1226              	.LVL151:
 1227              	.L57:
 506:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     {
 1228              		.loc 2 506 0
 1229 0022 072A     		cmp	r2, #7
 1230              	.LBB246:
 1231              	.LBB247:
 179:../../iot_link/os/liteos/base/include/chunk.h **** 
 1232              		.loc 5 179 0
 1233 0024 56F8043C 		ldr	r3, [r6, #-4]
 1234              	.LBE247:
 1235              	.LBE246:
 512:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     }
 1236              		.loc 2 512 0
 1237 0028 86BF     		itte	hi
 1238 002a D11D     		addhi	r1, r2, #7
 1239              	.LVL152:
 1240 002c 21F00701 		bichi	r1, r1, #7
 1241              	.LVL153:
 508:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     }
ARM GAS  C:\Users\LuckyE\AppData\Local\Temp\cc6Ct15h.s 			page 49


 1242              		.loc 2 508 0
 1243 0030 0821     		movls	r1, #8
 1244              	.LVL154:
 1245              	.LBB249:
 1246              	.LBB248:
 181:../../iot_link/os/liteos/base/include/chunk.h ****     {
 1247              		.loc 5 181 0
 1248 0032 DA07     		lsls	r2, r3, #31
 186:../../iot_link/os/liteos/base/include/chunk.h ****     }
 1249              		.loc 5 186 0
 1250 0034 4CBF     		ite	mi
 1251 0036 A6F10809 		submi	r9, r6, #8
 191:../../iot_link/os/liteos/base/include/chunk.h **** }
 1252              		.loc 5 191 0
 1253 003a 9946     		movpl	r9, r3
 1254              	.LVL155:
 1255              	.LBE248:
 1256              	.LBE249:
 1257              	.LBB250:
 1258              	.LBB251:
 107:../../iot_link/os/liteos/base/include/chunk.h **** }
 1259              		.loc 5 107 0
 1260 003c D9F80450 		ldr	r5, [r9, #4]
 1261 0040 25F00105 		bic	r5, r5, #1
 1262 0044 4D44     		add	r5, r5, r9
 1263              	.LBE251:
 1264              	.LBE250:
 518:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 1265              		.loc 2 518 0
 1266 0046 A5EB0608 		sub	r8, r5, r6
 1267              	.LVL156:
 520:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     {
 1268              		.loc 2 520 0
 1269 004a 4145     		cmp	r1, r8
 1270 004c 0BD9     		bls	.L62
 522:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 1271              		.loc 2 522 0
 1272 004e FFF7FEFF 		bl	heap_alloc
 1273              	.LVL157:
 524:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****         {
 1274              		.loc 2 524 0
 1275 0052 0446     		mov	r4, r0
 1276              	.LVL158:
 1277 0054 0028     		cmp	r0, #0
 1278 0056 E1D0     		beq	.L55
 526:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****             heap_free (heap, ptr);
 1279              		.loc 2 526 0
 1280 0058 3146     		mov	r1, r6
 1281 005a 4246     		mov	r2, r8
 1282 005c FFF7FEFF 		bl	memcpy
 1283              	.LVL159:
 527:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****         }
 1284              		.loc 2 527 0
 1285 0060 3146     		mov	r1, r6
 1286 0062 3846     		mov	r0, r7
 1287 0064 D8E7     		b	.L71
 1288              	.LVL160:
ARM GAS  C:\Users\LuckyE\AppData\Local\Temp\cc6Ct15h.s 			page 50


 1289              	.L62:
 535:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 1290              		.loc 2 535 0
 1291 0066 A8EB0104 		sub	r4, r8, r1
 1292              	.LVL161:
 537:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     {
 1293              		.loc 2 537 0
 1294 006a 0F2C     		cmp	r4, #15
 1295 006c 01D8     		bhi	.L63
 1296              	.LVL162:
 1297              	.L72:
 572:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** }
 1298              		.loc 2 572 0
 1299 006e 3446     		mov	r4, r6
 1300              	.LVL163:
 1301 0070 D4E7     		b	.L55
 1302              	.LVL164:
 1303              	.L63:
 544:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 1304              		.loc 2 544 0
 1305 0072 A5EB0408 		sub	r8, r5, r4
 1306              	.LVL165:
 548:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     {
 1307              		.loc 2 548 0
 1308 0076 4FF0FF31 		mov	r1, #-1
 1309              	.LVL166:
 546:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 1310              		.loc 2 546 0
 1311 007a C8F80090 		str	r9, [r8]
 548:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     {
 1312              		.loc 2 548 0
 1313 007e D0F8B401 		ldr	r0, [r0, #436]
 1314              	.LVL167:
 1315 0082 FFF7FEFF 		bl	LOS_MuxPend
 1316              	.LVL168:
 1317 0086 0028     		cmp	r0, #0
 1318 0088 F1D1     		bne	.L72
 553:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 1319              		.loc 2 553 0
 1320 008a D9F80430 		ldr	r3, [r9, #4]
 1321 008e 1B1B     		subs	r3, r3, r4
 1322 0090 C9F80430 		str	r3, [r9, #4]
 555:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     {
 1323              		.loc 2 555 0
 1324 0094 6968     		ldr	r1, [r5, #4]
 1325              	.LVL169:
 1326 0096 CB07     		lsls	r3, r1, #31
 1327 0098 16D4     		bmi	.L65
 557:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****         __del_chunk (heap, next);
 1328              		.loc 2 557 0
 1329 009a 2144     		add	r1, r1, r4
 1330 009c C8F80410 		str	r1, [r8, #4]
 558:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****         next = __get_next_chunk (new);
 1331              		.loc 2 558 0
 1332 00a0 3846     		mov	r0, r7
 1333 00a2 2946     		mov	r1, r5
 1334 00a4 FFF7FEFF 		bl	__del_chunk
ARM GAS  C:\Users\LuckyE\AppData\Local\Temp\cc6Ct15h.s 			page 51


 1335              	.LVL170:
 1336              	.LBB252:
 1337              	.LBB253:
 107:../../iot_link/os/liteos/base/include/chunk.h **** }
 1338              		.loc 5 107 0
 1339 00a8 D8F80450 		ldr	r5, [r8, #4]
 1340              	.LVL171:
 1341 00ac 25F00105 		bic	r5, r5, #1
 1342 00b0 4544     		add	r5, r5, r8
 1343              	.LVL172:
 1344              	.L66:
 1345              	.LBE253:
 1346              	.LBE252:
 566:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 1347              		.loc 2 566 0
 1348 00b2 C5F80080 		str	r8, [r5]
 568:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 1349              		.loc 2 568 0
 1350 00b6 4146     		mov	r1, r8
 1351 00b8 3846     		mov	r0, r7
 1352 00ba FFF7FEFF 		bl	__put_chunk
 1353              	.LVL173:
 570:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 1354              		.loc 2 570 0
 1355 00be D7F8B401 		ldr	r0, [r7, #436]
 1356 00c2 FFF7FEFF 		bl	LOS_MuxPost
 1357              	.LVL174:
 1358 00c6 D2E7     		b	.L72
 1359              	.LVL175:
 1360              	.L65:
 563:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     }
 1361              		.loc 2 563 0
 1362 00c8 C8F80440 		str	r4, [r8, #4]
 1363 00cc F1E7     		b	.L66
 1364              		.cfi_endproc
 1365              	.LFE323:
 1367              		.section	.text.heap_stat_get,"ax",%progbits
 1368              		.align	1
 1369              		.global	heap_stat_get
 1370              		.syntax unified
 1371              		.thumb
 1372              		.thumb_func
 1373              		.fpu fpv4-sp-d16
 1375              	heap_stat_get:
 1376              	.LFB324:
 574:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 575:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** #if (LOSCFG_MEM_STATISTICS == YES)
 576:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** int heap_stat_get (heap_t * heap, mem_stat_t * stat)
 577:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     {
 1377              		.loc 2 577 0
 1378              		.cfi_startproc
 1379              		@ args = 0, pretend = 0, frame = 0
 1380              		@ frame_needed = 0, uses_anonymous_args = 0
 1381              	.LVL176:
 1382 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1383              	.LCFI9:
 1384              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\LuckyE\AppData\Local\Temp\cc6Ct15h.s 			page 52


 1385              		.cfi_offset 4, -24
 1386              		.cfi_offset 5, -20
 1387              		.cfi_offset 6, -16
 1388              		.cfi_offset 7, -12
 1389              		.cfi_offset 8, -8
 1390              		.cfi_offset 14, -4
 1391              		.loc 2 577 0
 1392 0004 8846     		mov	r8, r1
 578:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     if ((heap == NULL) || (stat == NULL))
 1393              		.loc 2 578 0
 1394 0006 0746     		mov	r7, r0
 1395 0008 10B9     		cbnz	r0, .L74
 1396              	.LVL177:
 1397              	.L76:
 579:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****         {
 580:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****         return LOS_NOK;
 1398              		.loc 2 580 0
 1399 000a 0120     		movs	r0, #1
 1400              	.L73:
 581:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****         }
 582:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 583:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     if (LOS_MuxPend (heap->mux, LOS_WAIT_FOREVER) != LOS_OK)
 584:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****         {
 585:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****         return LOS_NOK;
 586:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****         }
 587:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 588:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     *stat = heap->stat;
 589:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 590:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     stat->max_free_size = __get_max_free (&heap->cm);
 591:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 592:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     (void) LOS_MuxPost (heap->mux);
 593:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 594:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     return LOS_OK;
 595:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     }
 1401              		.loc 2 595 0
 1402 000c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1403              	.LVL178:
 1404              	.L74:
 578:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****         {
 1405              		.loc 2 578 0 discriminator 1
 1406 0010 0029     		cmp	r1, #0
 1407 0012 FAD0     		beq	.L76
 583:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****         {
 1408              		.loc 2 583 0
 1409 0014 4FF0FF31 		mov	r1, #-1
 1410              	.LVL179:
 1411 0018 D0F8B401 		ldr	r0, [r0, #436]
 1412              	.LVL180:
 1413 001c FFF7FEFF 		bl	LOS_MuxPend
 1414              	.LVL181:
 1415 0020 0646     		mov	r6, r0
 1416 0022 0028     		cmp	r0, #0
 1417 0024 F1D1     		bne	.L76
 588:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 1418              		.loc 2 588 0
 1419 0026 07F5DC75 		add	r5, r7, #440
 1420 002a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
ARM GAS  C:\Users\LuckyE\AppData\Local\Temp\cc6Ct15h.s 			page 53


 1421 002c 4446     		mov	r4, r8
 1422 002e 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1423 0030 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1424 0032 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1425 0034 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1426 0036 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1427 0038 95E80300 		ldm	r5, {r0, r1}
 1428 003c 84E80300 		stm	r4, {r0, r1}
 590:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 1429              		.loc 2 590 0
 1430 0040 3846     		mov	r0, r7
 1431 0042 FFF7FEFF 		bl	__get_max_free
 1432              	.LVL182:
 1433 0046 C8F81400 		str	r0, [r8, #20]
 592:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 1434              		.loc 2 592 0
 1435 004a D7F8B401 		ldr	r0, [r7, #436]
 1436 004e FFF7FEFF 		bl	LOS_MuxPost
 1437              	.LVL183:
 594:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     }
 1438              		.loc 2 594 0
 1439 0052 3046     		mov	r0, r6
 1440 0054 DAE7     		b	.L73
 1441              		.cfi_endproc
 1442              	.LFE324:
 1444              		.section	.text.__dump_heap,"ax",%progbits
 1445              		.align	1
 1446              		.global	__dump_heap
 1447              		.syntax unified
 1448              		.thumb
 1449              		.thumb_func
 1450              		.fpu fpv4-sp-d16
 1452              	__dump_heap:
 1453              	.LFB326:
 596:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** #endif
 597:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 598:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** static inline void __dump_block (block_t * block)
 599:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     {
 600:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     chunk_t * chunk = (chunk_t *) (block + 1);
 601:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 602:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     PRINTK ("\taddress    size       status\n\r");
 603:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     PRINTK ("\t---------- ---------- ---------\n\r");
 604:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 605:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     do
 606:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****         {
 607:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****         PRINTK ("\t%p 0x%08x %s", chunk, chunk->size & ~1,
 608:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****                  (chunk->size & 1) == 0 ? "free\n\r" : "allocated\n\r");
 609:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 610:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****         if ((chunk->prev != NULL) && (chunk->size == (sizeof (ach_t) | 1)))
 611:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****             {
 612:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****             break;
 613:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****             }
 614:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 615:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****         chunk = __get_next_chunk (chunk);
 616:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****         } while (1);
 617:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     }
 618:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
ARM GAS  C:\Users\LuckyE\AppData\Local\Temp\cc6Ct15h.s 			page 54


 619:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** void __dump_heap (heap_t * heap, bool show_chunk)
 620:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     {
 1454              		.loc 2 620 0
 1455              		.cfi_startproc
 1456              		@ args = 0, pretend = 0, frame = 0
 1457              		@ frame_needed = 0, uses_anonymous_args = 0
 1458              	.LVL184:
 1459 0000 2DE9F74F 		push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1460              	.LCFI10:
 1461              		.cfi_def_cfa_offset 48
 1462              		.cfi_offset 4, -36
 1463              		.cfi_offset 5, -32
 1464              		.cfi_offset 6, -28
 1465              		.cfi_offset 7, -24
 1466              		.cfi_offset 8, -20
 1467              		.cfi_offset 9, -16
 1468              		.cfi_offset 10, -12
 1469              		.cfi_offset 11, -8
 1470              		.cfi_offset 14, -4
 1471              		.loc 2 620 0
 1472 0004 0446     		mov	r4, r0
 621:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     block_t * block = heap->blocks;
 1473              		.loc 2 621 0
 1474 0006 D0F8B061 		ldr	r6, [r0, #432]
 1475              	.LVL185:
 622:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 623:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     if (show_chunk)
 1476              		.loc 2 623 0
 1477 000a 0D46     		mov	r5, r1
 1478 000c 11B1     		cbz	r1, .L81
 624:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****         {
 625:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****         PRINTK ("\r\n\tchunk information:\n\r\n\r");
 1479              		.loc 2 625 0
 1480 000e 4148     		ldr	r0, .L98
 1481              	.LVL186:
 1482 0010 FFF7FEFF 		bl	printf
 1483              	.LVL187:
 1484              	.L81:
 626:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****         }
 627:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 628:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     if (LOS_MuxPend (heap->mux, LOS_WAIT_FOREVER) != LOS_OK)
 1485              		.loc 2 628 0
 1486 0014 4FF0FF31 		mov	r1, #-1
 1487 0018 D4F8B401 		ldr	r0, [r4, #436]
 1488 001c FFF7FEFF 		bl	LOS_MuxPend
 1489              	.LVL188:
 1490 0020 0028     		cmp	r0, #0
 1491 0022 74D1     		bne	.L80
 629:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****         {
 630:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****         return;
 631:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****         }
 632:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 633:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     if (show_chunk)
 1492              		.loc 2 633 0
 1493 0024 35B1     		cbz	r5, .L89
 1494              	.LBB258:
 1495              	.LBB259:
ARM GAS  C:\Users\LuckyE\AppData\Local\Temp\cc6Ct15h.s 			page 55


 602:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     PRINTK ("\t---------- ---------- ---------\n\r");
 1496              		.loc 2 602 0
 1497 0026 3C4F     		ldr	r7, .L98+4
 603:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 1498              		.loc 2 603 0
 1499 0028 DFF81C81 		ldr	r8, .L98+52
 607:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****                  (chunk->size & 1) == 0 ? "free\n\r" : "allocated\n\r");
 1500              		.loc 2 607 0
 1501 002c DFF81C91 		ldr	r9, .L98+56
 1502              	.L83:
 1503              	.LBE259:
 1504              	.LBE258:
 634:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****         {
 635:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****         while (block)
 1505              		.loc 2 635 0
 1506 0030 002E     		cmp	r6, #0
 1507 0032 49D1     		bne	.L88
 1508              	.L89:
 636:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****             {
 637:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****             __dump_block (block);
 638:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****             block = block->next;
 639:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****             }
 640:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****         }
 641:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 642:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** #if (LOSCFG_MEM_STATISTICS == YES)
 643:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     PRINTK ("\n\r\tSUMMARY:\n\r\n\r");
 1509              		.loc 2 643 0
 1510 0034 3948     		ldr	r0, .L98+8
 1511 0036 FFF7FEFF 		bl	printf
 1512              	.LVL189:
 644:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     PRINTK ("\tstatus  bytes              blocks\n\r");
 1513              		.loc 2 644 0
 1514 003a 3948     		ldr	r0, .L98+12
 1515 003c FFF7FEFF 		bl	printf
 1516              	.LVL190:
 645:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     PRINTK ("\t------  ------------------ ------\n\r");
 1517              		.loc 2 645 0
 1518 0040 3848     		ldr	r0, .L98+16
 1519 0042 FFF7FEFF 		bl	printf
 1520              	.LVL191:
 646:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     PRINTK ("\tcurrent:\n\r");
 1521              		.loc 2 646 0
 1522 0046 3848     		ldr	r0, .L98+20
 1523 0048 FFF7FEFF 		bl	printf
 1524              	.LVL192:
 647:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     PRINTK ("\tfree\t0x%-16x %d\n\r", heap->stat.free_size, heap->stat.free_chunks);
 1525              		.loc 2 647 0
 1526 004c D4F8B821 		ldr	r2, [r4, #440]
 1527 0050 D4F8BC11 		ldr	r1, [r4, #444]
 1528 0054 3548     		ldr	r0, .L98+24
 1529 0056 FFF7FEFF 		bl	printf
 1530              	.LVL193:
 648:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     PRINTK ("\talloc\t0x%-16x %d\n\r", heap->stat.busy_size, heap->stat.busy_chunks);
 1531              		.loc 2 648 0
 1532 005a D4F8C021 		ldr	r2, [r4, #448]
 1533 005e D4F8C411 		ldr	r1, [r4, #452]
 1534 0062 3348     		ldr	r0, .L98+28
ARM GAS  C:\Users\LuckyE\AppData\Local\Temp\cc6Ct15h.s 			page 56


 1535 0064 FFF7FEFF 		bl	printf
 1536              	.LVL194:
 649:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     PRINTK ("\tcumulative:\n\r");
 1537              		.loc 2 649 0
 1538 0068 3248     		ldr	r0, .L98+32
 1539 006a FFF7FEFF 		bl	printf
 1540              	.LVL195:
 650:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     PRINTK ("\tfree\t0x%-16llx %lld\n\r", heap->stat.cum_size_freed, heap->stat.cum_freed);
 1541              		.loc 2 650 0
 1542 006e 04F5F072 		add	r2, r4, #480
 1543 0072 D2E90001 		ldrd	r0, [r2]
 1544 0076 CDE90001 		strd	r0, [sp]
 1545 007a 04F5F473 		add	r3, r4, #488
 1546 007e D3E90023 		ldrd	r2, [r3]
 1547 0082 2D48     		ldr	r0, .L98+36
 1548 0084 FFF7FEFF 		bl	printf
 1549              	.LVL196:
 651:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     PRINTK ("\talloc\t0x%-16llx %lld\n\r", heap->stat.cum_size_allocated, heap->stat.cum_allocated)
 1550              		.loc 2 651 0
 1551 0088 04F5E872 		add	r2, r4, #464
 1552 008c D2E90001 		ldrd	r0, [r2]
 1553 0090 CDE90001 		strd	r0, [sp]
 1554 0094 04F5EC73 		add	r3, r4, #472
 1555 0098 D3E90023 		ldrd	r2, [r3]
 1556 009c 2748     		ldr	r0, .L98+40
 1557 009e FFF7FEFF 		bl	printf
 1558              	.LVL197:
 652:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 653:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     PRINTK ("\n\r\tmaximum allocated size ever: 0x%08x\n\r", heap->stat.max_busy_size);
 1559              		.loc 2 653 0
 1560 00a2 D4F8C811 		ldr	r1, [r4, #456]
 1561 00a6 2648     		ldr	r0, .L98+44
 1562 00a8 FFF7FEFF 		bl	printf
 1563              	.LVL198:
 654:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     PRINTK ("\n\r\tmaximum free size: 0x%08x\n\r", __get_max_free (&heap->cm));
 1564              		.loc 2 654 0
 1565 00ac 2046     		mov	r0, r4
 1566 00ae FFF7FEFF 		bl	__get_max_free
 1567              	.LVL199:
 1568 00b2 0146     		mov	r1, r0
 1569 00b4 2348     		ldr	r0, .L98+48
 1570 00b6 FFF7FEFF 		bl	printf
 1571              	.LVL200:
 655:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** #endif
 656:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 657:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     LOS_MuxPost (heap->mux);
 1572              		.loc 2 657 0
 1573 00ba D4F8B401 		ldr	r0, [r4, #436]
 658:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     }
 1574              		.loc 2 658 0
 1575 00be 03B0     		add	sp, sp, #12
 1576              	.LCFI11:
 1577              		.cfi_remember_state
 1578              		.cfi_def_cfa_offset 36
 1579              		@ sp needed
 1580 00c0 BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1581              	.LCFI12:
ARM GAS  C:\Users\LuckyE\AppData\Local\Temp\cc6Ct15h.s 			page 57


 1582              		.cfi_restore 14
 1583              		.cfi_restore 11
 1584              		.cfi_restore 10
 1585              		.cfi_restore 9
 1586              		.cfi_restore 8
 1587              		.cfi_restore 7
 1588              		.cfi_restore 6
 1589              		.cfi_restore 5
 1590              		.cfi_restore 4
 1591              		.cfi_def_cfa_offset 0
 1592              	.LVL201:
 657:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     }
 1593              		.loc 2 657 0
 1594 00c4 FFF7FEBF 		b	LOS_MuxPost
 1595              	.LVL202:
 1596              	.L88:
 1597              	.LCFI13:
 1598              		.cfi_restore_state
 1599              	.LBB263:
 1600              	.LBB262:
 602:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****     PRINTK ("\t---------- ---------- ---------\n\r");
 1601              		.loc 2 602 0
 1602 00c8 3846     		mov	r0, r7
 1603 00ca FFF7FEFF 		bl	printf
 1604              	.LVL203:
 603:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 1605              		.loc 2 603 0
 1606 00ce 4046     		mov	r0, r8
 1607 00d0 FFF7FEFF 		bl	printf
 1608              	.LVL204:
 607:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****                  (chunk->size & 1) == 0 ? "free\n\r" : "allocated\n\r");
 1609              		.loc 2 607 0
 1610 00d4 DFF878A0 		ldr	r10, .L98+60
 1611 00d8 DFF878B0 		ldr	fp, .L98+64
 600:../../iot_link/os/liteos/base/mem/heap/los_heap.c **** 
 1612              		.loc 2 600 0
 1613 00dc 06F10805 		add	r5, r6, #8
 1614              	.LVL205:
 1615              	.L87:
 607:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****                  (chunk->size & 1) == 0 ? "free\n\r" : "allocated\n\r");
 1616              		.loc 2 607 0
 1617 00e0 6A68     		ldr	r2, [r5, #4]
 1618 00e2 12F0010F 		tst	r2, #1
 1619 00e6 0CBF     		ite	eq
 1620 00e8 4B46     		moveq	r3, r9
 1621 00ea 5346     		movne	r3, r10
 1622 00ec 22F00102 		bic	r2, r2, #1
 1623 00f0 2946     		mov	r1, r5
 1624 00f2 5846     		mov	r0, fp
 1625 00f4 FFF7FEFF 		bl	printf
 1626              	.LVL206:
 1627 00f8 D5E90023 		ldrd	r2, r3, [r5]
 610:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****             {
 1628              		.loc 2 610 0
 1629 00fc 0AB1     		cbz	r2, .L85
 1630 00fe 092B     		cmp	r3, #9
 1631 0100 03D0     		beq	.L86
ARM GAS  C:\Users\LuckyE\AppData\Local\Temp\cc6Ct15h.s 			page 58


 1632              	.L85:
 1633              	.LVL207:
 1634              	.LBB260:
 1635              	.LBB261:
 107:../../iot_link/os/liteos/base/include/chunk.h **** }
 1636              		.loc 5 107 0
 1637 0102 23F00103 		bic	r3, r3, #1
 1638 0106 1D44     		add	r5, r5, r3
 1639              	.LVL208:
 1640 0108 EAE7     		b	.L87
 1641              	.LVL209:
 1642              	.L86:
 1643              	.LBE261:
 1644              	.LBE260:
 1645              	.LBE262:
 1646              	.LBE263:
 638:../../iot_link/os/liteos/base/mem/heap/los_heap.c ****             }
 1647              		.loc 2 638 0
 1648 010a 3668     		ldr	r6, [r6]
 1649              	.LVL210:
 1650 010c 90E7     		b	.L83
 1651              	.L80:
 1652              		.loc 2 658 0
 1653 010e 03B0     		add	sp, sp, #12
 1654              	.LCFI14:
 1655              		.cfi_def_cfa_offset 36
 1656              		@ sp needed
 1657 0110 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1658              	.LVL211:
 1659              	.L99:
 1660              		.align	2
 1661              	.L98:
 1662 0114 13000000 		.word	.LC2
 1663 0118 40010000 		.word	.LC14
 1664 011c 2D000000 		.word	.LC3
 1665 0120 3D000000 		.word	.LC4
 1666 0124 62000000 		.word	.LC5
 1667 0128 87000000 		.word	.LC6
 1668 012c 93000000 		.word	.LC7
 1669 0130 A6000000 		.word	.LC8
 1670 0134 BA000000 		.word	.LC9
 1671 0138 C9000000 		.word	.LC10
 1672 013c E0000000 		.word	.LC11
 1673 0140 F8000000 		.word	.LC12
 1674 0144 21010000 		.word	.LC13
 1675 0148 60010000 		.word	.LC15
 1676 014c 00000000 		.word	.LC0
 1677 0150 07000000 		.word	.LC1
 1678 0154 83010000 		.word	.LC16
 1679              		.cfi_endproc
 1680              	.LFE326:
 1682              		.section	.rodata.__dump_heap.str1.1,"aMS",%progbits,1
 1683              	.LC0:
 1684 0000 66726565 		.ascii	"free\012\015\000"
 1684      0A0D00
 1685              	.LC1:
 1686 0007 616C6C6F 		.ascii	"allocated\012\015\000"
ARM GAS  C:\Users\LuckyE\AppData\Local\Temp\cc6Ct15h.s 			page 59


 1686      63617465 
 1686      640A0D00 
 1687              	.LC2:
 1688 0013 0D0A0963 		.ascii	"\015\012\011chunk information:\012\015\012\015\000"
 1688      68756E6B 
 1688      20696E66 
 1688      6F726D61 
 1688      74696F6E 
 1689              	.LC3:
 1690 002d 0A0D0953 		.ascii	"\012\015\011SUMMARY:\012\015\012\015\000"
 1690      554D4D41 
 1690      52593A0A 
 1690      0D0A0D00 
 1691              	.LC4:
 1692 003d 09737461 		.ascii	"\011status  bytes              blocks\012\015\000"
 1692      74757320 
 1692      20627974 
 1692      65732020 
 1692      20202020 
 1693              	.LC5:
 1694 0062 092D2D2D 		.ascii	"\011------  ------------------ ------\012\015\000"
 1694      2D2D2D20 
 1694      202D2D2D 
 1694      2D2D2D2D 
 1694      2D2D2D2D 
 1695              	.LC6:
 1696 0087 09637572 		.ascii	"\011current:\012\015\000"
 1696      72656E74 
 1696      3A0A0D00 
 1697              	.LC7:
 1698 0093 09667265 		.ascii	"\011free\0110x%-16x %d\012\015\000"
 1698      65093078 
 1698      252D3136 
 1698      78202564 
 1698      0A0D00
 1699              	.LC8:
 1700 00a6 09616C6C 		.ascii	"\011alloc\0110x%-16x %d\012\015\000"
 1700      6F630930 
 1700      78252D31 
 1700      36782025 
 1700      640A0D00 
 1701              	.LC9:
 1702 00ba 0963756D 		.ascii	"\011cumulative:\012\015\000"
 1702      756C6174 
 1702      6976653A 
 1702      0A0D00
 1703              	.LC10:
 1704 00c9 09667265 		.ascii	"\011free\0110x%-16llx %lld\012\015\000"
 1704      65093078 
 1704      252D3136 
 1704      6C6C7820 
 1704      256C6C64 
 1705              	.LC11:
 1706 00e0 09616C6C 		.ascii	"\011alloc\0110x%-16llx %lld\012\015\000"
 1706      6F630930 
 1706      78252D31 
 1706      366C6C78 
ARM GAS  C:\Users\LuckyE\AppData\Local\Temp\cc6Ct15h.s 			page 60


 1706      20256C6C 
 1707              	.LC12:
 1708 00f8 0A0D096D 		.ascii	"\012\015\011maximum allocated size ever: 0x%08x\012"
 1708      6178696D 
 1708      756D2061 
 1708      6C6C6F63 
 1708      61746564 
 1709 011f 0D00     		.ascii	"\015\000"
 1710              	.LC13:
 1711 0121 0A0D096D 		.ascii	"\012\015\011maximum free size: 0x%08x\012\015\000"
 1711      6178696D 
 1711      756D2066 
 1711      72656520 
 1711      73697A65 
 1712              	.LC14:
 1713 0140 09616464 		.ascii	"\011address    size       status\012\015\000"
 1713      72657373 
 1713      20202020 
 1713      73697A65 
 1713      20202020 
 1714              	.LC15:
 1715 0160 092D2D2D 		.ascii	"\011---------- ---------- ---------\012\015\000"
 1715      2D2D2D2D 
 1715      2D2D2D20 
 1715      2D2D2D2D 
 1715      2D2D2D2D 
 1716              	.LC16:
 1717 0183 09257020 		.ascii	"\011%p 0x%08x %s\000"
 1717      30782530 
 1717      38782025 
 1717      7300
 1718              		.text
 1719              	.Letext0:
 1720              		.file 6 "c:\\bearpi\\developtools\\gnu tools arm embedded\\7 2018-q2-update\\lib\\gcc\\arm-none-ea
 1721              		.file 7 "c:\\bearpi\\developtools\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\includ
 1722              		.file 8 "c:\\bearpi\\developtools\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\includ
 1723              		.file 9 "c:\\bearpi\\developtools\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\includ
 1724              		.file 10 "c:\\bearpi\\developtools\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\inclu
 1725              		.file 11 "../../iot_link/os/liteos/include/los_typedef.h"
 1726              		.file 12 "c:\\bearpi\\developtools\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\inclu
 1727              		.file 13 "../../iot_link/os/liteos/arch/arm/common/cmsis/core_cm4.h"
 1728              		.file 14 "D:/File/bearpi_liteos/bearpi-iot_std_liteos-master/targets/STM32L431_BearPi/Inc/system_s
 1729              		.file 15 "../../iot_link/os/liteos/include/los_config.h"
 1730              		.file 16 "../../iot_link/os/liteos/include/los_err.h"
 1731              		.file 17 "../../iot_link/os/liteos/arch/arm/arm-m/include/los_hwi.h"
 1732              		.file 18 "../../iot_link/os/liteos/include/los_tick.h"
 1733              		.file 19 "../../iot_link/os/liteos/include/los_task.h"
 1734              		.file 20 "../../iot_link/os/liteos/base/include/los_slab.ph"
 1735              		.file 21 "../../iot_link/os/liteos/base/include/mem.h"
 1736              		.file 22 "c:\\bearpi\\developtools\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\inclu
 1737              		.file 23 "../../iot_link/os/liteos/include/los_mux.h"
 1738              		.file 24 "<built-in>"
ARM GAS  C:\Users\LuckyE\AppData\Local\Temp\cc6Ct15h.s 			page 61


DEFINED SYMBOLS
                            *ABS*:00000000 los_heap.c
C:\Users\LuckyE\AppData\Local\Temp\cc6Ct15h.s:18     .text.__get_max_free:00000000 $t
C:\Users\LuckyE\AppData\Local\Temp\cc6Ct15h.s:24     .text.__get_max_free:00000000 __get_max_free
C:\Users\LuckyE\AppData\Local\Temp\cc6Ct15h.s:94     .text.__put_chunk:00000000 $t
C:\Users\LuckyE\AppData\Local\Temp\cc6Ct15h.s:100    .text.__put_chunk:00000000 __put_chunk
C:\Users\LuckyE\AppData\Local\Temp\cc6Ct15h.s:245    .text.__del_chunk:00000000 $t
C:\Users\LuckyE\AppData\Local\Temp\cc6Ct15h.s:251    .text.__del_chunk:00000000 __del_chunk
C:\Users\LuckyE\AppData\Local\Temp\cc6Ct15h.s:384    .text.heap_init:00000000 $t
C:\Users\LuckyE\AppData\Local\Temp\cc6Ct15h.s:391    .text.heap_init:00000000 heap_init
C:\Users\LuckyE\AppData\Local\Temp\cc6Ct15h.s:428    .text.heap_add:00000000 $t
C:\Users\LuckyE\AppData\Local\Temp\cc6Ct15h.s:435    .text.heap_add:00000000 heap_add
C:\Users\LuckyE\AppData\Local\Temp\cc6Ct15h.s:577    .text.heap_add:00000090 $d
C:\Users\LuckyE\AppData\Local\Temp\cc6Ct15h.s:582    .text.heap_alloc_align:00000000 $t
C:\Users\LuckyE\AppData\Local\Temp\cc6Ct15h.s:589    .text.heap_alloc_align:00000000 heap_alloc_align
C:\Users\LuckyE\AppData\Local\Temp\cc6Ct15h.s:944    .text.heap_alloc:00000000 $t
C:\Users\LuckyE\AppData\Local\Temp\cc6Ct15h.s:951    .text.heap_alloc:00000000 heap_alloc
C:\Users\LuckyE\AppData\Local\Temp\cc6Ct15h.s:969    .text.heap_free:00000000 $t
C:\Users\LuckyE\AppData\Local\Temp\cc6Ct15h.s:976    .text.heap_free:00000000 heap_free
C:\Users\LuckyE\AppData\Local\Temp\cc6Ct15h.s:1161   .text.heap_realloc:00000000 $t
C:\Users\LuckyE\AppData\Local\Temp\cc6Ct15h.s:1168   .text.heap_realloc:00000000 heap_realloc
C:\Users\LuckyE\AppData\Local\Temp\cc6Ct15h.s:1368   .text.heap_stat_get:00000000 $t
C:\Users\LuckyE\AppData\Local\Temp\cc6Ct15h.s:1375   .text.heap_stat_get:00000000 heap_stat_get
C:\Users\LuckyE\AppData\Local\Temp\cc6Ct15h.s:1445   .text.__dump_heap:00000000 $t
C:\Users\LuckyE\AppData\Local\Temp\cc6Ct15h.s:1452   .text.__dump_heap:00000000 __dump_heap
C:\Users\LuckyE\AppData\Local\Temp\cc6Ct15h.s:1662   .text.__dump_heap:00000114 $d

UNDEFINED SYMBOLS
memset
LOS_MuxCreate
LOS_MuxPend
LOS_MuxPost
memcpy
printf
