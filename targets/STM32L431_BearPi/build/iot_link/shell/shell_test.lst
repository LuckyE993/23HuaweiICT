ARM GAS  C:\Users\LuckyE\AppData\Local\Temp\ccZiBBAT.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"shell_test.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.shell_taskinfo,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	shell_taskinfo:
  25              	.LFB287:
  26              		.file 1 "../../iot_link/shell/shell_test.c"
   1:../../iot_link/shell/shell_test.c **** /*----------------------------------------------------------------------------
   2:../../iot_link/shell/shell_test.c ****  * Copyright (c) <2018>, <Huawei Technologies Co., Ltd>
   3:../../iot_link/shell/shell_test.c ****  * All rights reserved.
   4:../../iot_link/shell/shell_test.c ****  * Redistribution and use in source and binary forms, with or without modification,
   5:../../iot_link/shell/shell_test.c ****  * are permitted provided that the following conditions are met:
   6:../../iot_link/shell/shell_test.c ****  * 1. Redistributions of source code must retain the above copyright notice, this list of
   7:../../iot_link/shell/shell_test.c ****  * conditions and the following disclaimer.
   8:../../iot_link/shell/shell_test.c ****  * 2. Redistributions in binary form must reproduce the above copyright notice, this list
   9:../../iot_link/shell/shell_test.c ****  * of conditions and the following disclaimer in the documentation and/or other materials
  10:../../iot_link/shell/shell_test.c ****  * provided with the distribution.
  11:../../iot_link/shell/shell_test.c ****  * 3. Neither the name of the copyright holder nor the names of its contributors may be used
  12:../../iot_link/shell/shell_test.c ****  * to endorse or promote products derived from this software without specific prior written
  13:../../iot_link/shell/shell_test.c ****  * permission.
  14:../../iot_link/shell/shell_test.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  15:../../iot_link/shell/shell_test.c ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
  16:../../iot_link/shell/shell_test.c ****  * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
  17:../../iot_link/shell/shell_test.c ****  * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
  18:../../iot_link/shell/shell_test.c ****  * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
  19:../../iot_link/shell/shell_test.c ****  * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
  20:../../iot_link/shell/shell_test.c ****  * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
  21:../../iot_link/shell/shell_test.c ****  * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
  22:../../iot_link/shell/shell_test.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
  23:../../iot_link/shell/shell_test.c ****  * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
  24:../../iot_link/shell/shell_test.c ****  * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  25:../../iot_link/shell/shell_test.c ****  *---------------------------------------------------------------------------*/
  26:../../iot_link/shell/shell_test.c **** /*----------------------------------------------------------------------------
  27:../../iot_link/shell/shell_test.c ****  * Notice of Export Control Law
  28:../../iot_link/shell/shell_test.c ****  * ===============================================
  29:../../iot_link/shell/shell_test.c ****  * Huawei LiteOS may be subject to applicable export control laws and regulations, which might
  30:../../iot_link/shell/shell_test.c ****  * include those applicable to Huawei LiteOS of U.S. and the country in which you are located.
  31:../../iot_link/shell/shell_test.c ****  * Import, export and usage of Huawei LiteOS in any manner by you shall be in compliance with such
  32:../../iot_link/shell/shell_test.c ****  * applicable export control laws and regulations.
ARM GAS  C:\Users\LuckyE\AppData\Local\Temp\ccZiBBAT.s 			page 2


  33:../../iot_link/shell/shell_test.c ****  *---------------------------------------------------------------------------*/
  34:../../iot_link/shell/shell_test.c **** /**
  35:../../iot_link/shell/shell_test.c ****  *  DATE                AUTHOR      INSTRUCTION
  36:../../iot_link/shell/shell_test.c ****  *  2019-05-14 17:22  zhangqianfu  The first version
  37:../../iot_link/shell/shell_test.c ****  *
  38:../../iot_link/shell/shell_test.c ****  */
  39:../../iot_link/shell/shell_test.c **** #if CONFIG_SHELL_ENABLE
  40:../../iot_link/shell/shell_test.c **** 
  41:../../iot_link/shell/shell_test.c **** #include <shell.h>
  42:../../iot_link/shell/shell_test.c **** #include <los_memory.h>
  43:../../iot_link/shell/shell_test.c **** #include <osal.h>
  44:../../iot_link/shell/shell_test.c **** /*
  45:../../iot_link/shell/shell_test.c **** //here we export to shell command,you could add your own shell like this
  46:../../iot_link/shell/shell_test.c **** //test fucntion:print the params passed in
  47:../../iot_link/shell/shell_test.c **** static int shell_test_func(int argc, const char *argv[]){
  48:../../iot_link/shell/shell_test.c ****     int i = 0;
  49:../../iot_link/shell/shell_test.c ****     LINK_LOG_DEBUG("argc:%d \n\r",argc);
  50:../../iot_link/shell/shell_test.c ****     for(i=0;i<argc;i++){
  51:../../iot_link/shell/shell_test.c ****         LINK_LOG_DEBUG("args:%d %s\n\r",i,argv[i]);
  52:../../iot_link/shell/shell_test.c ****     }
  53:../../iot_link/shell/shell_test.c ****     return 0;
  54:../../iot_link/shell/shell_test.c **** }
  55:../../iot_link/shell/shell_test.c **** OSSHELL_EXPORT_CMD(shell_test_func,"shell_test_func","shell test func"); //export a functuon demo
  56:../../iot_link/shell/shell_test.c **** 
  57:../../iot_link/shell/shell_test.c **** static u32_t gs_shell_test_var =123;
  58:../../iot_link/shell/shell_test.c **** OSSHELL_EXPORT_VAR(gs_shell_test_var,"shell_test_var","shell test var");  //export a var demo here
  59:../../iot_link/shell/shell_test.c **** */
  60:../../iot_link/shell/shell_test.c **** //show all the task status here
  61:../../iot_link/shell/shell_test.c **** extern UINT32 osGetAllTskInfo(VOID);
  62:../../iot_link/shell/shell_test.c **** static int shell_taskinfo(int argc,const char *argv[]){
  27              		.loc 1 62 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              	.LVL0:
  32 0000 08B5     		push	{r3, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 3, -8
  36              		.cfi_offset 14, -4
  63:../../iot_link/shell/shell_test.c ****     osGetAllTskInfo();
  37              		.loc 1 63 0
  38 0002 FFF7FEFF 		bl	osGetAllTskInfo
  39              	.LVL1:
  64:../../iot_link/shell/shell_test.c ****     return 0;
  65:../../iot_link/shell/shell_test.c **** }
  40              		.loc 1 65 0
  41 0006 0020     		movs	r0, #0
  42 0008 08BD     		pop	{r3, pc}
  43              		.cfi_endproc
  44              	.LFE287:
  46              		.section	.text.shell_heapinfo,"ax",%progbits
  47              		.align	1
  48              		.syntax unified
  49              		.thumb
  50              		.thumb_func
  51              		.fpu fpv4-sp-d16
ARM GAS  C:\Users\LuckyE\AppData\Local\Temp\ccZiBBAT.s 			page 3


  53              	shell_heapinfo:
  54              	.LFB288:
  66:../../iot_link/shell/shell_test.c **** OSSHELL_EXPORT_CMD(shell_taskinfo,"taskinfo","taskinfo");
  67:../../iot_link/shell/shell_test.c **** 
  68:../../iot_link/shell/shell_test.c **** //show the memstatus here
  69:../../iot_link/shell/shell_test.c **** static int shell_heapinfo(int argc,const char *argv[])
  70:../../iot_link/shell/shell_test.c **** {
  55              		.loc 1 70 0
  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 0, uses_anonymous_args = 0
  59              	.LVL2:
  60 0000 08B5     		push	{r3, lr}
  61              	.LCFI1:
  62              		.cfi_def_cfa_offset 8
  63              		.cfi_offset 3, -8
  64              		.cfi_offset 14, -4
  71:../../iot_link/shell/shell_test.c **** #if (LOSCFG_HEAP_IMPROVED == YES)
  72:../../iot_link/shell/shell_test.c ****     LOS_MemInfo(NULL, 1);
  65              		.loc 1 72 0
  66 0002 0121     		movs	r1, #1
  67              	.LVL3:
  68 0004 0020     		movs	r0, #0
  69              	.LVL4:
  70 0006 FFF7FEFF 		bl	LOS_MemInfo
  71              	.LVL5:
  73:../../iot_link/shell/shell_test.c **** #else
  74:../../iot_link/shell/shell_test.c ****     LOS_MemPoolList();
  75:../../iot_link/shell/shell_test.c **** #endif
  76:../../iot_link/shell/shell_test.c ****     return 0;
  77:../../iot_link/shell/shell_test.c **** }
  72              		.loc 1 77 0
  73 000a 0020     		movs	r0, #0
  74 000c 08BD     		pop	{r3, pc}
  75              		.cfi_endproc
  76              	.LFE288:
  78              		.section	.text.shell_reboot,"ax",%progbits
  79              		.align	1
  80              		.syntax unified
  81              		.thumb
  82              		.thumb_func
  83              		.fpu fpv4-sp-d16
  85              	shell_reboot:
  86              	.LFB289:
  78:../../iot_link/shell/shell_test.c **** OSSHELL_EXPORT_CMD(shell_heapinfo,"heapinfo","heapinfo");
  79:../../iot_link/shell/shell_test.c **** 
  80:../../iot_link/shell/shell_test.c **** 
  81:../../iot_link/shell/shell_test.c **** static int shell_reboot(int argc,const char *argv[])
  82:../../iot_link/shell/shell_test.c **** {
  87              		.loc 1 82 0
  88              		.cfi_startproc
  89              		@ args = 0, pretend = 0, frame = 0
  90              		@ frame_needed = 0, uses_anonymous_args = 0
  91              	.LVL6:
  92 0000 10B5     		push	{r4, lr}
  93              	.LCFI2:
  94              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\LuckyE\AppData\Local\Temp\ccZiBBAT.s 			page 4


  95              		.cfi_offset 4, -8
  96              		.cfi_offset 14, -4
  83:../../iot_link/shell/shell_test.c ****     osal_reboot();
  97              		.loc 1 83 0
  98 0002 FFF7FEFF 		bl	osal_reboot
  99              	.LVL7:
  84:../../iot_link/shell/shell_test.c **** 
  85:../../iot_link/shell/shell_test.c ****     LINK_LOG_DEBUG("reboot failed\n\r");
 100              		.loc 1 85 0
 101 0006 FFF7FEFF 		bl	link_log_level_get
 102              	.LVL8:
 103 000a 0128     		cmp	r0, #1
 104 000c 10D8     		bhi	.L4
 105              	.LVL9:
 106              	.LBB4:
 107              	.LBB5:
 108 000e 0120     		movs	r0, #1
 109 0010 FFF7FEFF 		bl	link_log_level_name
 110              	.LVL10:
 111 0014 0446     		mov	r4, r0
 112 0016 FFF7FEFF 		bl	osal_sys_time
 113              	.LVL11:
 114 001a 074B     		ldr	r3, .L5
 115 001c 0246     		mov	r2, r0
 116 001e 2146     		mov	r1, r4
 117 0020 0648     		ldr	r0, .L5+4
 118 0022 FFF7FEFF 		bl	printf
 119              	.LVL12:
 120 0026 064B     		ldr	r3, .L5+8
 121 0028 1B68     		ldr	r3, [r3]
 122 002a 9868     		ldr	r0, [r3, #8]
 123 002c FFF7FEFF 		bl	fflush
 124              	.LVL13:
 125              	.L4:
 126              	.LBE5:
 127              	.LBE4:
  86:../../iot_link/shell/shell_test.c **** 
  87:../../iot_link/shell/shell_test.c ****     return -1;
  88:../../iot_link/shell/shell_test.c **** }
 128              		.loc 1 88 0
 129 0030 4FF0FF30 		mov	r0, #-1
 130 0034 10BD     		pop	{r4, pc}
 131              	.L6:
 132 0036 00BF     		.align	2
 133              	.L5:
 134 0038 00000000 		.word	.LANCHOR0
 135 003c 00000000 		.word	.LC0
 136 0040 00000000 		.word	_impure_ptr
 137              		.cfi_endproc
 138              	.LFE289:
 140              		.section	.rodata.__FUNCTION__.11584,"a",%progbits
 141              		.set	.LANCHOR0,. + 0
 144              	__FUNCTION__.11584:
 145 0000 7368656C 		.ascii	"shell_reboot\000"
 145      6C5F7265 
 145      626F6F74 
 145      00
ARM GAS  C:\Users\LuckyE\AppData\Local\Temp\ccZiBBAT.s 			page 5


 146              		.section	.rodata.shell_reboot.str1.1,"aMS",%progbits,1
 147              	.LC0:
 148 0000 5B25735D 		.ascii	"[%s][%u][%s] reboot failed\012\015\015\012\000"
 148      5B25755D 
 148      5B25735D 
 148      20726562 
 148      6F6F7420 
 149              		.section	.rodata.str1.1,"aMS",%progbits,1
 150              	.LC1:
 151 0000 7265626F 		.ascii	"reboot\000"
 151      6F7400
 152              	.LC2:
 153 0007 68656170 		.ascii	"heapinfo\000"
 153      696E666F 
 153      00
 154              	.LC3:
 155 0010 7461736B 		.ascii	"taskinfo\000"
 155      696E666F 
 155      00
 156              		.section	oshell,"a",%progbits
 157              		.align	2
 160              	__oshell_shell_reboot:
 161 0000 00000000 		.word	.LC1
 162 0004 00000000 		.word	.LC1
 163 0008 00000000 		.word	shell_reboot
 164 000c 0000     		.short	0
 165 000e 0400     		.short	4
 168              	__oshell_shell_heapinfo:
 169 0010 07000000 		.word	.LC2
 170 0014 07000000 		.word	.LC2
 171 0018 00000000 		.word	shell_heapinfo
 172 001c 0000     		.short	0
 173 001e 0400     		.short	4
 176              	__oshell_shell_taskinfo:
 177 0020 10000000 		.word	.LC3
 178 0024 10000000 		.word	.LC3
 179 0028 00000000 		.word	shell_taskinfo
 180 002c 0000     		.short	0
 181 002e 0400     		.short	4
 182              		.text
 183              	.Letext0:
 184              		.file 2 "c:\\bearpi\\developtools\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\includ
 185              		.file 3 "c:\\bearpi\\developtools\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\includ
 186              		.file 4 "c:\\bearpi\\developtools\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\includ
 187              		.file 5 "c:\\bearpi\\developtools\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\includ
 188              		.file 6 "c:\\bearpi\\developtools\\gnu tools arm embedded\\7 2018-q2-update\\lib\\gcc\\arm-none-ea
 189              		.file 7 "c:\\bearpi\\developtools\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\includ
 190              		.file 8 "../../iot_link/inc/shell.h"
 191              		.file 9 "../../iot_link/os/liteos/include/los_typedef.h"
 192              		.file 10 "../../iot_link/os/liteos/arch/arm/common/cmsis/core_cm4.h"
 193              		.file 11 "D:/File/bearpi_liteos/bearpi-iot_std_liteos-master/targets/STM32L431_BearPi/Inc/system_s
 194              		.file 12 "../../iot_link/os/liteos/include/los_config.h"
 195              		.file 13 "../../iot_link/os/liteos/include/los_err.h"
 196              		.file 14 "../../iot_link/os/liteos/include/los_memory.h"
 197              		.file 15 "../../iot_link/inc/link_log.h"
 198              		.file 16 "c:\\bearpi\\developtools\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\inclu
 199              		.file 17 "../../iot_link/os/osal/osal.h"
ARM GAS  C:\Users\LuckyE\AppData\Local\Temp\ccZiBBAT.s 			page 6


ARM GAS  C:\Users\LuckyE\AppData\Local\Temp\ccZiBBAT.s 			page 7


DEFINED SYMBOLS
                            *ABS*:00000000 shell_test.c
C:\Users\LuckyE\AppData\Local\Temp\ccZiBBAT.s:18     .text.shell_taskinfo:00000000 $t
C:\Users\LuckyE\AppData\Local\Temp\ccZiBBAT.s:24     .text.shell_taskinfo:00000000 shell_taskinfo
C:\Users\LuckyE\AppData\Local\Temp\ccZiBBAT.s:47     .text.shell_heapinfo:00000000 $t
C:\Users\LuckyE\AppData\Local\Temp\ccZiBBAT.s:53     .text.shell_heapinfo:00000000 shell_heapinfo
C:\Users\LuckyE\AppData\Local\Temp\ccZiBBAT.s:79     .text.shell_reboot:00000000 $t
C:\Users\LuckyE\AppData\Local\Temp\ccZiBBAT.s:85     .text.shell_reboot:00000000 shell_reboot
C:\Users\LuckyE\AppData\Local\Temp\ccZiBBAT.s:134    .text.shell_reboot:00000038 $d
C:\Users\LuckyE\AppData\Local\Temp\ccZiBBAT.s:144    .rodata.__FUNCTION__.11584:00000000 __FUNCTION__.11584
C:\Users\LuckyE\AppData\Local\Temp\ccZiBBAT.s:157    oshell:00000000 $d
C:\Users\LuckyE\AppData\Local\Temp\ccZiBBAT.s:160    oshell:00000000 __oshell_shell_reboot
C:\Users\LuckyE\AppData\Local\Temp\ccZiBBAT.s:168    oshell:00000010 __oshell_shell_heapinfo
C:\Users\LuckyE\AppData\Local\Temp\ccZiBBAT.s:176    oshell:00000020 __oshell_shell_taskinfo

UNDEFINED SYMBOLS
osGetAllTskInfo
LOS_MemInfo
osal_reboot
link_log_level_get
link_log_level_name
osal_sys_time
printf
fflush
_impure_ptr
