ARM GAS  C:\Users\LuckyE\AppData\Local\Temp\ccJs9MOV.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"system_stm32l4xx.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.SystemInit,"ax",%progbits
  18              		.align	1
  19              		.global	SystemInit
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	SystemInit:
  26              	.LFB280:
  27              		.file 1 "Src/system_stm32l4xx.c"
   1:Src/system_stm32l4xx.c **** /**
   2:Src/system_stm32l4xx.c ****   ******************************************************************************
   3:Src/system_stm32l4xx.c ****   * @file    system_stm32l4xx.c
   4:Src/system_stm32l4xx.c ****   * @author  MCD Application Team
   5:Src/system_stm32l4xx.c ****   * @brief   CMSIS Cortex-M4 Device Peripheral Access Layer System Source File
   6:Src/system_stm32l4xx.c ****   *
   7:Src/system_stm32l4xx.c ****   *   This file provides two functions and one global variable to be called from
   8:Src/system_stm32l4xx.c ****   *   user application:
   9:Src/system_stm32l4xx.c ****   *      - SystemInit(): This function is called at startup just after reset and
  10:Src/system_stm32l4xx.c ****   *                      before branch to main program. This call is made inside
  11:Src/system_stm32l4xx.c ****   *                      the "startup_stm32l4xx.s" file.
  12:Src/system_stm32l4xx.c ****   *
  13:Src/system_stm32l4xx.c ****   *      - SystemCoreClock variable: Contains the core clock (HCLK), it can be used
  14:Src/system_stm32l4xx.c ****   *                                  by the user application to setup the SysTick
  15:Src/system_stm32l4xx.c ****   *                                  timer or configure other parameters.
  16:Src/system_stm32l4xx.c ****   *
  17:Src/system_stm32l4xx.c ****   *      - SystemCoreClockUpdate(): Updates the variable SystemCoreClock and must
  18:Src/system_stm32l4xx.c ****   *                                 be called whenever the core clock is changed
  19:Src/system_stm32l4xx.c ****   *                                 during program execution.
  20:Src/system_stm32l4xx.c ****   *
  21:Src/system_stm32l4xx.c ****   *   After each device reset the MSI (4 MHz) is used as system clock source.
  22:Src/system_stm32l4xx.c ****   *   Then SystemInit() function is called, in "startup_stm32l4xx.s" file, to
  23:Src/system_stm32l4xx.c ****   *   configure the system clock before to branch to main program.
  24:Src/system_stm32l4xx.c ****   *
  25:Src/system_stm32l4xx.c ****   *   This file configures the system clock as follows:
  26:Src/system_stm32l4xx.c ****   *=============================================================================
  27:Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  28:Src/system_stm32l4xx.c ****   *        System Clock source                    | MSI
  29:Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  30:Src/system_stm32l4xx.c ****   *        SYSCLK(Hz)                             | 4000000
  31:Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
ARM GAS  C:\Users\LuckyE\AppData\Local\Temp\ccJs9MOV.s 			page 2


  32:Src/system_stm32l4xx.c ****   *        HCLK(Hz)                               | 4000000
  33:Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  34:Src/system_stm32l4xx.c ****   *        AHB Prescaler                          | 1
  35:Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  36:Src/system_stm32l4xx.c ****   *        APB1 Prescaler                         | 1
  37:Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  38:Src/system_stm32l4xx.c ****   *        APB2 Prescaler                         | 1
  39:Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  40:Src/system_stm32l4xx.c ****   *        PLL_M                                  | 1
  41:Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  42:Src/system_stm32l4xx.c ****   *        PLL_N                                  | 8
  43:Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  44:Src/system_stm32l4xx.c ****   *        PLL_P                                  | 7
  45:Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  46:Src/system_stm32l4xx.c ****   *        PLL_Q                                  | 2
  47:Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  48:Src/system_stm32l4xx.c ****   *        PLL_R                                  | 2
  49:Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  50:Src/system_stm32l4xx.c ****   *        PLLSAI1_P                              | NA
  51:Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  52:Src/system_stm32l4xx.c ****   *        PLLSAI1_Q                              | NA
  53:Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  54:Src/system_stm32l4xx.c ****   *        PLLSAI1_R                              | NA
  55:Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  56:Src/system_stm32l4xx.c ****   *        PLLSAI2_P                              | NA
  57:Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  58:Src/system_stm32l4xx.c ****   *        PLLSAI2_Q                              | NA
  59:Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  60:Src/system_stm32l4xx.c ****   *        PLLSAI2_R                              | NA
  61:Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  62:Src/system_stm32l4xx.c ****   *        Require 48MHz for USB OTG FS,          | Disabled
  63:Src/system_stm32l4xx.c ****   *        SDIO and RNG clock                     |
  64:Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  65:Src/system_stm32l4xx.c ****   *=============================================================================
  66:Src/system_stm32l4xx.c ****   ******************************************************************************
  67:Src/system_stm32l4xx.c ****   * @attention
  68:Src/system_stm32l4xx.c ****   *
  69:Src/system_stm32l4xx.c ****   * <h2><center>&copy; COPYRIGHT(c) 2017 STMicroelectronics</center></h2>
  70:Src/system_stm32l4xx.c ****   *
  71:Src/system_stm32l4xx.c ****   * Redistribution and use in source and binary forms, with or without modification,
  72:Src/system_stm32l4xx.c ****   * are permitted provided that the following conditions are met:
  73:Src/system_stm32l4xx.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  74:Src/system_stm32l4xx.c ****   *      this list of conditions and the following disclaimer.
  75:Src/system_stm32l4xx.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  76:Src/system_stm32l4xx.c ****   *      this list of conditions and the following disclaimer in the documentation
  77:Src/system_stm32l4xx.c ****   *      and/or other materials provided with the distribution.
  78:Src/system_stm32l4xx.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  79:Src/system_stm32l4xx.c ****   *      may be used to endorse or promote products derived from this software
  80:Src/system_stm32l4xx.c ****   *      without specific prior written permission.
  81:Src/system_stm32l4xx.c ****   *
  82:Src/system_stm32l4xx.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  83:Src/system_stm32l4xx.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  84:Src/system_stm32l4xx.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  85:Src/system_stm32l4xx.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  86:Src/system_stm32l4xx.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  87:Src/system_stm32l4xx.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  88:Src/system_stm32l4xx.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
ARM GAS  C:\Users\LuckyE\AppData\Local\Temp\ccJs9MOV.s 			page 3


  89:Src/system_stm32l4xx.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  90:Src/system_stm32l4xx.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  91:Src/system_stm32l4xx.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  92:Src/system_stm32l4xx.c ****   *
  93:Src/system_stm32l4xx.c ****   ******************************************************************************
  94:Src/system_stm32l4xx.c ****   */
  95:Src/system_stm32l4xx.c **** 
  96:Src/system_stm32l4xx.c **** /** @addtogroup CMSIS
  97:Src/system_stm32l4xx.c ****   * @{
  98:Src/system_stm32l4xx.c ****   */
  99:Src/system_stm32l4xx.c **** 
 100:Src/system_stm32l4xx.c **** /** @addtogroup stm32l4xx_system
 101:Src/system_stm32l4xx.c ****   * @{
 102:Src/system_stm32l4xx.c ****   */
 103:Src/system_stm32l4xx.c **** 
 104:Src/system_stm32l4xx.c **** /** @addtogroup STM32L4xx_System_Private_Includes
 105:Src/system_stm32l4xx.c ****   * @{
 106:Src/system_stm32l4xx.c ****   */
 107:Src/system_stm32l4xx.c **** 
 108:Src/system_stm32l4xx.c **** #include "stm32l4xx.h"
 109:Src/system_stm32l4xx.c **** 
 110:Src/system_stm32l4xx.c **** #if !defined  (HSE_VALUE)
 111:Src/system_stm32l4xx.c ****   #define HSE_VALUE    8000000U  /*!< Value of the External oscillator in Hz */
 112:Src/system_stm32l4xx.c **** #endif /* HSE_VALUE */
 113:Src/system_stm32l4xx.c **** 
 114:Src/system_stm32l4xx.c **** #if !defined  (MSI_VALUE)
 115:Src/system_stm32l4xx.c ****   #define MSI_VALUE    4000000U  /*!< Value of the Internal oscillator in Hz*/
 116:Src/system_stm32l4xx.c **** #endif /* MSI_VALUE */
 117:Src/system_stm32l4xx.c **** 
 118:Src/system_stm32l4xx.c **** #if !defined  (HSI_VALUE)
 119:Src/system_stm32l4xx.c ****   #define HSI_VALUE    16000000U /*!< Value of the Internal oscillator in Hz*/
 120:Src/system_stm32l4xx.c **** #endif /* HSI_VALUE */
 121:Src/system_stm32l4xx.c **** 
 122:Src/system_stm32l4xx.c **** /**
 123:Src/system_stm32l4xx.c ****   * @}
 124:Src/system_stm32l4xx.c ****   */
 125:Src/system_stm32l4xx.c **** 
 126:Src/system_stm32l4xx.c **** /** @addtogroup STM32L4xx_System_Private_TypesDefinitions
 127:Src/system_stm32l4xx.c ****   * @{
 128:Src/system_stm32l4xx.c ****   */
 129:Src/system_stm32l4xx.c **** 
 130:Src/system_stm32l4xx.c **** /**
 131:Src/system_stm32l4xx.c ****   * @}
 132:Src/system_stm32l4xx.c ****   */
 133:Src/system_stm32l4xx.c **** 
 134:Src/system_stm32l4xx.c **** /** @addtogroup STM32L4xx_System_Private_Defines
 135:Src/system_stm32l4xx.c ****   * @{
 136:Src/system_stm32l4xx.c ****   */
 137:Src/system_stm32l4xx.c **** 
 138:Src/system_stm32l4xx.c **** /************************* Miscellaneous Configuration ************************/
 139:Src/system_stm32l4xx.c **** /*!< Uncomment the following line if you need to relocate your vector Table in
 140:Src/system_stm32l4xx.c ****      Internal SRAM. */
 141:Src/system_stm32l4xx.c **** /* #define VECT_TAB_SRAM */
 142:Src/system_stm32l4xx.c **** #define VECT_TAB_OFFSET  0x10000 /*!< Vector Table base offset field.
 143:Src/system_stm32l4xx.c ****                                    This value must be a multiple of 0x200. */
 144:Src/system_stm32l4xx.c **** /******************************************************************************/
 145:Src/system_stm32l4xx.c **** /**
ARM GAS  C:\Users\LuckyE\AppData\Local\Temp\ccJs9MOV.s 			page 4


 146:Src/system_stm32l4xx.c ****   * @}
 147:Src/system_stm32l4xx.c ****   */
 148:Src/system_stm32l4xx.c **** 
 149:Src/system_stm32l4xx.c **** /** @addtogroup STM32L4xx_System_Private_Macros
 150:Src/system_stm32l4xx.c ****   * @{
 151:Src/system_stm32l4xx.c ****   */
 152:Src/system_stm32l4xx.c **** 
 153:Src/system_stm32l4xx.c **** /**
 154:Src/system_stm32l4xx.c ****   * @}
 155:Src/system_stm32l4xx.c ****   */
 156:Src/system_stm32l4xx.c **** 
 157:Src/system_stm32l4xx.c **** /** @addtogroup STM32L4xx_System_Private_Variables
 158:Src/system_stm32l4xx.c ****   * @{
 159:Src/system_stm32l4xx.c ****   */
 160:Src/system_stm32l4xx.c ****   /* The SystemCoreClock variable is updated in three ways:
 161:Src/system_stm32l4xx.c ****       1) by calling CMSIS function SystemCoreClockUpdate()
 162:Src/system_stm32l4xx.c ****       2) by calling HAL API function HAL_RCC_GetHCLKFreq()
 163:Src/system_stm32l4xx.c ****       3) each time HAL_RCC_ClockConfig() is called to configure the system clock frequency
 164:Src/system_stm32l4xx.c ****          Note: If you use this function to configure the system clock; then there
 165:Src/system_stm32l4xx.c ****                is no need to call the 2 first functions listed above, since SystemCoreClock
 166:Src/system_stm32l4xx.c ****                variable is updated automatically.
 167:Src/system_stm32l4xx.c ****   */
 168:Src/system_stm32l4xx.c ****   uint32_t SystemCoreClock = 4000000U;
 169:Src/system_stm32l4xx.c **** 
 170:Src/system_stm32l4xx.c ****   const uint8_t  AHBPrescTable[16] = {0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 1U, 2U, 3U, 4U, 6U, 7U, 8U, 9
 171:Src/system_stm32l4xx.c ****   const uint8_t  APBPrescTable[8] =  {0U, 0U, 0U, 0U, 1U, 2U, 3U, 4U};
 172:Src/system_stm32l4xx.c ****   const uint32_t MSIRangeTable[12] = {100000U,   200000U,   400000U,   800000U,  1000000U,  2000000
 173:Src/system_stm32l4xx.c ****                                       4000000U, 8000000U, 16000000U, 24000000U, 32000000U, 48000000
 174:Src/system_stm32l4xx.c **** /**
 175:Src/system_stm32l4xx.c ****   * @}
 176:Src/system_stm32l4xx.c ****   */
 177:Src/system_stm32l4xx.c **** 
 178:Src/system_stm32l4xx.c **** /** @addtogroup STM32L4xx_System_Private_FunctionPrototypes
 179:Src/system_stm32l4xx.c ****   * @{
 180:Src/system_stm32l4xx.c ****   */
 181:Src/system_stm32l4xx.c **** 
 182:Src/system_stm32l4xx.c **** /**
 183:Src/system_stm32l4xx.c ****   * @}
 184:Src/system_stm32l4xx.c ****   */
 185:Src/system_stm32l4xx.c **** 
 186:Src/system_stm32l4xx.c **** /** @addtogroup STM32L4xx_System_Private_Functions
 187:Src/system_stm32l4xx.c ****   * @{
 188:Src/system_stm32l4xx.c ****   */
 189:Src/system_stm32l4xx.c **** 
 190:Src/system_stm32l4xx.c **** /**
 191:Src/system_stm32l4xx.c ****   * @brief  Setup the microcontroller system.
 192:Src/system_stm32l4xx.c ****   * @param  None
 193:Src/system_stm32l4xx.c ****   * @retval None
 194:Src/system_stm32l4xx.c ****   */
 195:Src/system_stm32l4xx.c **** 
 196:Src/system_stm32l4xx.c **** void SystemInit(void)
 197:Src/system_stm32l4xx.c **** {
  28              		.loc 1 197 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
ARM GAS  C:\Users\LuckyE\AppData\Local\Temp\ccJs9MOV.s 			page 5


 198:Src/system_stm32l4xx.c ****   /* FPU settings ------------------------------------------------------------*/
 199:Src/system_stm32l4xx.c ****   #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
 200:Src/system_stm32l4xx.c ****     SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
  33              		.loc 1 200 0
  34 0000 0F49     		ldr	r1, .L2
  35 0002 D1F88830 		ldr	r3, [r1, #136]
  36 0006 43F47003 		orr	r3, r3, #15728640
  37 000a C1F88830 		str	r3, [r1, #136]
 201:Src/system_stm32l4xx.c ****   #endif
 202:Src/system_stm32l4xx.c **** 
 203:Src/system_stm32l4xx.c ****   /* Reset the RCC clock configuration to the default reset state ------------*/
 204:Src/system_stm32l4xx.c ****   /* Set MSION bit */
 205:Src/system_stm32l4xx.c ****   RCC->CR |= RCC_CR_MSION;
  38              		.loc 1 205 0
  39 000e 0D4B     		ldr	r3, .L2+4
  40 0010 1A68     		ldr	r2, [r3]
 206:Src/system_stm32l4xx.c **** 
 207:Src/system_stm32l4xx.c ****   /* Reset CFGR register */
 208:Src/system_stm32l4xx.c ****   RCC->CFGR = 0x00000000U;
  41              		.loc 1 208 0
  42 0012 0020     		movs	r0, #0
 205:Src/system_stm32l4xx.c **** 
  43              		.loc 1 205 0
  44 0014 42F00102 		orr	r2, r2, #1
  45 0018 1A60     		str	r2, [r3]
  46              		.loc 1 208 0
  47 001a 9860     		str	r0, [r3, #8]
 209:Src/system_stm32l4xx.c **** 
 210:Src/system_stm32l4xx.c ****   /* Reset HSEON, CSSON , HSION, and PLLON bits */
 211:Src/system_stm32l4xx.c ****   RCC->CR &= 0xEAF6FFFFU;
  48              		.loc 1 211 0
  49 001c 1A68     		ldr	r2, [r3]
  50 001e 22F0A852 		bic	r2, r2, #352321536
  51 0022 22F41022 		bic	r2, r2, #589824
  52 0026 1A60     		str	r2, [r3]
 212:Src/system_stm32l4xx.c **** 
 213:Src/system_stm32l4xx.c ****   /* Reset PLLCFGR register */
 214:Src/system_stm32l4xx.c ****   RCC->PLLCFGR = 0x00001000U;
  53              		.loc 1 214 0
  54 0028 4FF48052 		mov	r2, #4096
  55 002c DA60     		str	r2, [r3, #12]
 215:Src/system_stm32l4xx.c **** 
 216:Src/system_stm32l4xx.c ****   /* Reset HSEBYP bit */
 217:Src/system_stm32l4xx.c ****   RCC->CR &= 0xFFFBFFFFU;
  56              		.loc 1 217 0
  57 002e 1A68     		ldr	r2, [r3]
  58 0030 22F48022 		bic	r2, r2, #262144
  59 0034 1A60     		str	r2, [r3]
 218:Src/system_stm32l4xx.c **** 
 219:Src/system_stm32l4xx.c ****   /* Disable all interrupts */
 220:Src/system_stm32l4xx.c ****   RCC->CIER = 0x00000000U;
  60              		.loc 1 220 0
  61 0036 9861     		str	r0, [r3, #24]
 221:Src/system_stm32l4xx.c **** 
 222:Src/system_stm32l4xx.c ****   /* Configure the Vector Table location add offset address ------------------*/
 223:Src/system_stm32l4xx.c **** #ifdef VECT_TAB_SRAM
 224:Src/system_stm32l4xx.c ****   SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
ARM GAS  C:\Users\LuckyE\AppData\Local\Temp\ccJs9MOV.s 			page 6


 225:Src/system_stm32l4xx.c **** #else
 226:Src/system_stm32l4xx.c ****   SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
  62              		.loc 1 226 0
  63 0038 034B     		ldr	r3, .L2+8
  64 003a 8B60     		str	r3, [r1, #8]
 227:Src/system_stm32l4xx.c **** #endif
 228:Src/system_stm32l4xx.c **** }
  65              		.loc 1 228 0
  66 003c 7047     		bx	lr
  67              	.L3:
  68 003e 00BF     		.align	2
  69              	.L2:
  70 0040 00ED00E0 		.word	-536810240
  71 0044 00100240 		.word	1073876992
  72 0048 00000108 		.word	134283264
  73              		.cfi_endproc
  74              	.LFE280:
  76              		.section	.text.SystemCoreClockUpdate,"ax",%progbits
  77              		.align	1
  78              		.global	SystemCoreClockUpdate
  79              		.syntax unified
  80              		.thumb
  81              		.thumb_func
  82              		.fpu fpv4-sp-d16
  84              	SystemCoreClockUpdate:
  85              	.LFB281:
 229:Src/system_stm32l4xx.c **** 
 230:Src/system_stm32l4xx.c **** /**
 231:Src/system_stm32l4xx.c ****   * @brief  Update SystemCoreClock variable according to Clock Register Values.
 232:Src/system_stm32l4xx.c ****   *         The SystemCoreClock variable contains the core clock (HCLK), it can
 233:Src/system_stm32l4xx.c ****   *         be used by the user application to setup the SysTick timer or configure
 234:Src/system_stm32l4xx.c ****   *         other parameters.
 235:Src/system_stm32l4xx.c ****   *
 236:Src/system_stm32l4xx.c ****   * @note   Each time the core clock (HCLK) changes, this function must be called
 237:Src/system_stm32l4xx.c ****   *         to update SystemCoreClock variable value. Otherwise, any configuration
 238:Src/system_stm32l4xx.c ****   *         based on this variable will be incorrect.
 239:Src/system_stm32l4xx.c ****   *
 240:Src/system_stm32l4xx.c ****   * @note   - The system frequency computed by this function is not the real
 241:Src/system_stm32l4xx.c ****   *           frequency in the chip. It is calculated based on the predefined
 242:Src/system_stm32l4xx.c ****   *           constant and the selected clock source:
 243:Src/system_stm32l4xx.c ****   *
 244:Src/system_stm32l4xx.c ****   *           - If SYSCLK source is MSI, SystemCoreClock will contain the MSI_VALUE(*)
 245:Src/system_stm32l4xx.c ****   *
 246:Src/system_stm32l4xx.c ****   *           - If SYSCLK source is HSI, SystemCoreClock will contain the HSI_VALUE(**)
 247:Src/system_stm32l4xx.c ****   *
 248:Src/system_stm32l4xx.c ****   *           - If SYSCLK source is HSE, SystemCoreClock will contain the HSE_VALUE(***)
 249:Src/system_stm32l4xx.c ****   *
 250:Src/system_stm32l4xx.c ****   *           - If SYSCLK source is PLL, SystemCoreClock will contain the HSE_VALUE(***)
 251:Src/system_stm32l4xx.c ****   *             or HSI_VALUE(*) or MSI_VALUE(*) multiplied/divided by the PLL factors.
 252:Src/system_stm32l4xx.c ****   *
 253:Src/system_stm32l4xx.c ****   *         (*) MSI_VALUE is a constant defined in stm32l4xx_hal.h file (default value
 254:Src/system_stm32l4xx.c ****   *             4 MHz) but the real value may vary depending on the variations
 255:Src/system_stm32l4xx.c ****   *             in voltage and temperature.
 256:Src/system_stm32l4xx.c ****   *
 257:Src/system_stm32l4xx.c ****   *         (**) HSI_VALUE is a constant defined in stm32l4xx_hal.h file (default value
 258:Src/system_stm32l4xx.c ****   *              16 MHz) but the real value may vary depending on the variations
 259:Src/system_stm32l4xx.c ****   *              in voltage and temperature.
ARM GAS  C:\Users\LuckyE\AppData\Local\Temp\ccJs9MOV.s 			page 7


 260:Src/system_stm32l4xx.c ****   *
 261:Src/system_stm32l4xx.c ****   *         (***) HSE_VALUE is a constant defined in stm32l4xx_hal.h file (default value
 262:Src/system_stm32l4xx.c ****   *              8 MHz), user has to ensure that HSE_VALUE is same as the real
 263:Src/system_stm32l4xx.c ****   *              frequency of the crystal used. Otherwise, this function may
 264:Src/system_stm32l4xx.c ****   *              have wrong result.
 265:Src/system_stm32l4xx.c ****   *
 266:Src/system_stm32l4xx.c ****   *         - The result of this function could be not correct when using fractional
 267:Src/system_stm32l4xx.c ****   *           value for HSE crystal.
 268:Src/system_stm32l4xx.c ****   *
 269:Src/system_stm32l4xx.c ****   * @param  None
 270:Src/system_stm32l4xx.c ****   * @retval None
 271:Src/system_stm32l4xx.c ****   */
 272:Src/system_stm32l4xx.c **** void SystemCoreClockUpdate(void)
 273:Src/system_stm32l4xx.c **** {
  86              		.loc 1 273 0
  87              		.cfi_startproc
  88              		@ args = 0, pretend = 0, frame = 0
  89              		@ frame_needed = 0, uses_anonymous_args = 0
  90              	.LVL0:
 274:Src/system_stm32l4xx.c ****   uint32_t tmp = 0U, msirange = 0U, pllvco = 0U, pllr = 2U, pllsource = 0U, pllm = 2U;
 275:Src/system_stm32l4xx.c **** 
 276:Src/system_stm32l4xx.c ****   /* Get MSI Range frequency--------------------------------------------------*/
 277:Src/system_stm32l4xx.c ****   if((RCC->CR & RCC_CR_MSIRGSEL) == RESET)
  91              		.loc 1 277 0
  92 0000 234A     		ldr	r2, .L20
 278:Src/system_stm32l4xx.c ****   { /* MSISRANGE from RCC_CSR applies */
 279:Src/system_stm32l4xx.c ****     msirange = (RCC->CSR & RCC_CSR_MSISRANGE) >> 8U;
 280:Src/system_stm32l4xx.c ****   }
 281:Src/system_stm32l4xx.c ****   else
 282:Src/system_stm32l4xx.c ****   { /* MSIRANGE from RCC_CR applies */
 283:Src/system_stm32l4xx.c ****     msirange = (RCC->CR & RCC_CR_MSIRANGE) >> 4U;
 284:Src/system_stm32l4xx.c ****   }
 285:Src/system_stm32l4xx.c ****   /*MSI frequency range in HZ*/
 286:Src/system_stm32l4xx.c ****   msirange = MSIRangeTable[msirange];
  93              		.loc 1 286 0
  94 0002 2449     		ldr	r1, .L20+4
 277:Src/system_stm32l4xx.c ****   { /* MSISRANGE from RCC_CSR applies */
  95              		.loc 1 277 0
  96 0004 1368     		ldr	r3, [r2]
  97 0006 2448     		ldr	r0, .L20+8
  98 0008 1B07     		lsls	r3, r3, #28
 279:Src/system_stm32l4xx.c ****   }
  99              		.loc 1 279 0
 100 000a 55BF     		itete	pl
 101 000c D2F89430 		ldrpl	r3, [r2, #148]
 283:Src/system_stm32l4xx.c ****   }
 102              		.loc 1 283 0
 103 0010 1368     		ldrmi	r3, [r2]
 279:Src/system_stm32l4xx.c ****   }
 104              		.loc 1 279 0
 105 0012 C3F30323 		ubfxpl	r3, r3, #8, #4
 106              	.LVL1:
 283:Src/system_stm32l4xx.c ****   }
 107              		.loc 1 283 0
 108 0016 C3F30313 		ubfxmi	r3, r3, #4, #4
 109              	.LVL2:
 273:Src/system_stm32l4xx.c ****   uint32_t tmp = 0U, msirange = 0U, pllvco = 0U, pllr = 2U, pllsource = 0U, pllm = 2U;
ARM GAS  C:\Users\LuckyE\AppData\Local\Temp\ccJs9MOV.s 			page 8


 110              		.loc 1 273 0
 111 001a 10B5     		push	{r4, lr}
 112              	.LCFI0:
 113              		.cfi_def_cfa_offset 8
 114              		.cfi_offset 4, -8
 115              		.cfi_offset 14, -4
 116              		.loc 1 286 0
 117 001c 51F82340 		ldr	r4, [r1, r3, lsl #2]
 118              	.LVL3:
 287:Src/system_stm32l4xx.c **** 
 288:Src/system_stm32l4xx.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 289:Src/system_stm32l4xx.c ****   switch (RCC->CFGR & RCC_CFGR_SWS)
 119              		.loc 1 289 0
 120 0020 9168     		ldr	r1, [r2, #8]
 121 0022 01F00C01 		and	r1, r1, #12
 122 0026 0829     		cmp	r1, #8
 123 0028 0ED0     		beq	.L8
 124 002a 0C29     		cmp	r1, #12
 125 002c 0ED0     		beq	.L9
 126 002e 0429     		cmp	r1, #4
 127 0030 2CD1     		bne	.L16
 290:Src/system_stm32l4xx.c ****   {
 291:Src/system_stm32l4xx.c ****     case 0x00:  /* MSI used as system clock source */
 292:Src/system_stm32l4xx.c ****       SystemCoreClock = msirange;
 293:Src/system_stm32l4xx.c ****       break;
 294:Src/system_stm32l4xx.c **** 
 295:Src/system_stm32l4xx.c ****     case 0x04:  /* HSI used as system clock source */
 296:Src/system_stm32l4xx.c ****       SystemCoreClock = HSI_VALUE;
 128              		.loc 1 296 0
 129 0032 1A4B     		ldr	r3, .L20+12
 130              	.LVL4:
 131              	.L19:
 297:Src/system_stm32l4xx.c ****       break;
 298:Src/system_stm32l4xx.c **** 
 299:Src/system_stm32l4xx.c ****     case 0x08:  /* HSE used as system clock source */
 300:Src/system_stm32l4xx.c ****       SystemCoreClock = HSE_VALUE;
 301:Src/system_stm32l4xx.c ****       break;
 302:Src/system_stm32l4xx.c **** 
 303:Src/system_stm32l4xx.c ****     case 0x0C:  /* PLL used as system clock  source */
 304:Src/system_stm32l4xx.c ****       /* PLL_VCO = (HSE_VALUE or HSI_VALUE or MSI_VALUE/ PLLM) * PLLN
 305:Src/system_stm32l4xx.c ****          SYSCLK = PLL_VCO / PLLR
 306:Src/system_stm32l4xx.c ****          */
 307:Src/system_stm32l4xx.c ****       pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC);
 308:Src/system_stm32l4xx.c ****       pllm = ((RCC->PLLCFGR & RCC_PLLCFGR_PLLM) >> 4U) + 1U ;
 309:Src/system_stm32l4xx.c **** 
 310:Src/system_stm32l4xx.c ****       switch (pllsource)
 311:Src/system_stm32l4xx.c ****       {
 312:Src/system_stm32l4xx.c ****         case 0x02:  /* HSI used as PLL clock source */
 313:Src/system_stm32l4xx.c ****           pllvco = (HSI_VALUE / pllm);
 314:Src/system_stm32l4xx.c ****           break;
 315:Src/system_stm32l4xx.c **** 
 316:Src/system_stm32l4xx.c ****         case 0x03:  /* HSE used as PLL clock source */
 317:Src/system_stm32l4xx.c ****           pllvco = (HSE_VALUE / pllm);
 318:Src/system_stm32l4xx.c ****           break;
 319:Src/system_stm32l4xx.c **** 
 320:Src/system_stm32l4xx.c ****         default:    /* MSI used as PLL clock source */
 321:Src/system_stm32l4xx.c ****           pllvco = (msirange / pllm);
ARM GAS  C:\Users\LuckyE\AppData\Local\Temp\ccJs9MOV.s 			page 9


 322:Src/system_stm32l4xx.c ****           break;
 323:Src/system_stm32l4xx.c ****       }
 324:Src/system_stm32l4xx.c ****       pllvco = pllvco * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 8U);
 325:Src/system_stm32l4xx.c ****       pllr = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLR) >> 25U) + 1U) * 2U;
 326:Src/system_stm32l4xx.c ****       SystemCoreClock = pllvco/pllr;
 132              		.loc 1 326 0
 133 0034 0360     		str	r3, [r0]
 134              	.L11:
 327:Src/system_stm32l4xx.c ****       break;
 328:Src/system_stm32l4xx.c **** 
 329:Src/system_stm32l4xx.c ****     default:
 330:Src/system_stm32l4xx.c ****       SystemCoreClock = msirange;
 331:Src/system_stm32l4xx.c ****       break;
 332:Src/system_stm32l4xx.c ****   }
 333:Src/system_stm32l4xx.c ****   /* Compute HCLK clock frequency --------------------------------------------*/
 334:Src/system_stm32l4xx.c ****   /* Get HCLK prescaler */
 335:Src/system_stm32l4xx.c ****   tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4U)];
 135              		.loc 1 335 0
 136 0036 9368     		ldr	r3, [r2, #8]
 137              	.LVL5:
 138 0038 194A     		ldr	r2, .L20+16
 139 003a C3F30313 		ubfx	r3, r3, #4, #4
 140              	.LVL6:
 141 003e D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 336:Src/system_stm32l4xx.c ****   /* HCLK clock frequency */
 337:Src/system_stm32l4xx.c ****   SystemCoreClock >>= tmp;
 142              		.loc 1 337 0
 143 0040 0368     		ldr	r3, [r0]
 144 0042 D340     		lsrs	r3, r3, r2
 145 0044 0360     		str	r3, [r0]
 338:Src/system_stm32l4xx.c **** }
 146              		.loc 1 338 0
 147 0046 10BD     		pop	{r4, pc}
 148              	.LVL7:
 149              	.L8:
 300:Src/system_stm32l4xx.c ****       break;
 150              		.loc 1 300 0
 151 0048 164B     		ldr	r3, .L20+20
 152 004a F3E7     		b	.L19
 153              	.L9:
 307:Src/system_stm32l4xx.c ****       pllm = ((RCC->PLLCFGR & RCC_PLLCFGR_PLLM) >> 4U) + 1U ;
 154              		.loc 1 307 0
 155 004c D168     		ldr	r1, [r2, #12]
 156              	.LVL8:
 308:Src/system_stm32l4xx.c **** 
 157              		.loc 1 308 0
 158 004e D368     		ldr	r3, [r2, #12]
 307:Src/system_stm32l4xx.c ****       pllm = ((RCC->PLLCFGR & RCC_PLLCFGR_PLLM) >> 4U) + 1U ;
 159              		.loc 1 307 0
 160 0050 01F00301 		and	r1, r1, #3
 161              	.LVL9:
 308:Src/system_stm32l4xx.c **** 
 162              		.loc 1 308 0
 163 0054 C3F30213 		ubfx	r3, r3, #4, #3
 310:Src/system_stm32l4xx.c ****       {
 164              		.loc 1 310 0
 165 0058 0229     		cmp	r1, #2
ARM GAS  C:\Users\LuckyE\AppData\Local\Temp\ccJs9MOV.s 			page 10


 308:Src/system_stm32l4xx.c **** 
 166              		.loc 1 308 0
 167 005a 03F10103 		add	r3, r3, #1
 168              	.LVL10:
 310:Src/system_stm32l4xx.c ****       {
 169              		.loc 1 310 0
 170 005e 04D0     		beq	.L13
 171 0060 0329     		cmp	r1, #3
 172 0062 11D0     		beq	.L14
 321:Src/system_stm32l4xx.c ****           break;
 173              		.loc 1 321 0
 174 0064 B4FBF3F3 		udiv	r3, r4, r3
 175              	.LVL11:
 322:Src/system_stm32l4xx.c ****       }
 176              		.loc 1 322 0
 177 0068 02E0     		b	.L15
 178              	.LVL12:
 179              	.L13:
 313:Src/system_stm32l4xx.c ****           break;
 180              		.loc 1 313 0
 181 006a 0C49     		ldr	r1, .L20+12
 182              	.LVL13:
 183              	.L18:
 317:Src/system_stm32l4xx.c ****           break;
 184              		.loc 1 317 0
 185 006c B1FBF3F3 		udiv	r3, r1, r3
 186              	.LVL14:
 187              	.L15:
 324:Src/system_stm32l4xx.c ****       pllr = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLR) >> 25U) + 1U) * 2U;
 188              		.loc 1 324 0
 189 0070 D468     		ldr	r4, [r2, #12]
 190              	.LVL15:
 325:Src/system_stm32l4xx.c ****       SystemCoreClock = pllvco/pllr;
 191              		.loc 1 325 0
 192 0072 D168     		ldr	r1, [r2, #12]
 193              	.LVL16:
 194 0074 C1F34161 		ubfx	r1, r1, #25, #2
 195              	.LVL17:
 324:Src/system_stm32l4xx.c ****       pllr = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLR) >> 25U) + 1U) * 2U;
 196              		.loc 1 324 0
 197 0078 C4F30624 		ubfx	r4, r4, #8, #7
 198              	.LVL18:
 325:Src/system_stm32l4xx.c ****       SystemCoreClock = pllvco/pllr;
 199              		.loc 1 325 0
 200 007c 0131     		adds	r1, r1, #1
 324:Src/system_stm32l4xx.c ****       pllr = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLR) >> 25U) + 1U) * 2U;
 201              		.loc 1 324 0
 202 007e 6343     		muls	r3, r4, r3
 325:Src/system_stm32l4xx.c ****       SystemCoreClock = pllvco/pllr;
 203              		.loc 1 325 0
 204 0080 4900     		lsls	r1, r1, #1
 326:Src/system_stm32l4xx.c ****       break;
 205              		.loc 1 326 0
 206 0082 B3FBF1F3 		udiv	r3, r3, r1
 207 0086 D5E7     		b	.L19
 208              	.LVL19:
 209              	.L14:
ARM GAS  C:\Users\LuckyE\AppData\Local\Temp\ccJs9MOV.s 			page 11


 317:Src/system_stm32l4xx.c ****           break;
 210              		.loc 1 317 0
 211 0088 0649     		ldr	r1, .L20+20
 212              	.LVL20:
 213 008a EFE7     		b	.L18
 214              	.LVL21:
 215              	.L16:
 330:Src/system_stm32l4xx.c ****       break;
 216              		.loc 1 330 0
 217 008c 0460     		str	r4, [r0]
 331:Src/system_stm32l4xx.c ****   }
 218              		.loc 1 331 0
 219 008e D2E7     		b	.L11
 220              	.L21:
 221              		.align	2
 222              	.L20:
 223 0090 00100240 		.word	1073876992
 224 0094 00000000 		.word	.LANCHOR0
 225 0098 00000000 		.word	.LANCHOR1
 226 009c 0024F400 		.word	16000000
 227 00a0 00000000 		.word	.LANCHOR2
 228 00a4 00127A00 		.word	8000000
 229              		.cfi_endproc
 230              	.LFE281:
 232              		.global	MSIRangeTable
 233              		.global	APBPrescTable
 234              		.global	AHBPrescTable
 235              		.global	SystemCoreClock
 236              		.section	.data.SystemCoreClock,"aw",%progbits
 237              		.align	2
 238              		.set	.LANCHOR1,. + 0
 241              	SystemCoreClock:
 242 0000 00093D00 		.word	4000000
 243              		.section	.rodata.AHBPrescTable,"a",%progbits
 244              		.set	.LANCHOR2,. + 0
 247              	AHBPrescTable:
 248 0000 00       		.byte	0
 249 0001 00       		.byte	0
 250 0002 00       		.byte	0
 251 0003 00       		.byte	0
 252 0004 00       		.byte	0
 253 0005 00       		.byte	0
 254 0006 00       		.byte	0
 255 0007 00       		.byte	0
 256 0008 01       		.byte	1
 257 0009 02       		.byte	2
 258 000a 03       		.byte	3
 259 000b 04       		.byte	4
 260 000c 06       		.byte	6
 261 000d 07       		.byte	7
 262 000e 08       		.byte	8
 263 000f 09       		.byte	9
 264              		.section	.rodata.APBPrescTable,"a",%progbits
 267              	APBPrescTable:
 268 0000 00       		.byte	0
 269 0001 00       		.byte	0
 270 0002 00       		.byte	0
ARM GAS  C:\Users\LuckyE\AppData\Local\Temp\ccJs9MOV.s 			page 12


 271 0003 00       		.byte	0
 272 0004 01       		.byte	1
 273 0005 02       		.byte	2
 274 0006 03       		.byte	3
 275 0007 04       		.byte	4
 276              		.section	.rodata.MSIRangeTable,"a",%progbits
 277              		.align	2
 278              		.set	.LANCHOR0,. + 0
 281              	MSIRangeTable:
 282 0000 A0860100 		.word	100000
 283 0004 400D0300 		.word	200000
 284 0008 801A0600 		.word	400000
 285 000c 00350C00 		.word	800000
 286 0010 40420F00 		.word	1000000
 287 0014 80841E00 		.word	2000000
 288 0018 00093D00 		.word	4000000
 289 001c 00127A00 		.word	8000000
 290 0020 0024F400 		.word	16000000
 291 0024 00366E01 		.word	24000000
 292 0028 0048E801 		.word	32000000
 293 002c 006CDC02 		.word	48000000
 294              		.text
 295              	.Letext0:
 296              		.file 2 "c:\\bearpi\\developtools\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\includ
 297              		.file 3 "c:\\bearpi\\developtools\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\includ
 298              		.file 4 "../../iot_link/os/liteos/arch/arm/common/cmsis/core_cm4.h"
 299              		.file 5 "D:/File/bearpi_liteos/bearpi-iot_std_liteos-master/targets/STM32L431_BearPi/Inc/system_st
 300              		.file 6 "D:/File/bearpi_liteos/bearpi-iot_std_liteos-master/targets/STM32L431_BearPi/Inc/stm32l431
 301              		.file 7 "c:\\bearpi\\developtools\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\includ
 302              		.file 8 "c:\\bearpi\\developtools\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\includ
 303              		.file 9 "c:\\bearpi\\developtools\\gnu tools arm embedded\\7 2018-q2-update\\lib\\gcc\\arm-none-ea
 304              		.file 10 "c:\\bearpi\\developtools\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\inclu
 305              		.file 11 "D:/File/bearpi_liteos/bearpi-iot_std_liteos-master/targets/STM32L431_BearPi/Inc/stm32l4x
ARM GAS  C:\Users\LuckyE\AppData\Local\Temp\ccJs9MOV.s 			page 13


DEFINED SYMBOLS
                            *ABS*:00000000 system_stm32l4xx.c
C:\Users\LuckyE\AppData\Local\Temp\ccJs9MOV.s:18     .text.SystemInit:00000000 $t
C:\Users\LuckyE\AppData\Local\Temp\ccJs9MOV.s:25     .text.SystemInit:00000000 SystemInit
C:\Users\LuckyE\AppData\Local\Temp\ccJs9MOV.s:70     .text.SystemInit:00000040 $d
C:\Users\LuckyE\AppData\Local\Temp\ccJs9MOV.s:77     .text.SystemCoreClockUpdate:00000000 $t
C:\Users\LuckyE\AppData\Local\Temp\ccJs9MOV.s:84     .text.SystemCoreClockUpdate:00000000 SystemCoreClockUpdate
C:\Users\LuckyE\AppData\Local\Temp\ccJs9MOV.s:223    .text.SystemCoreClockUpdate:00000090 $d
C:\Users\LuckyE\AppData\Local\Temp\ccJs9MOV.s:281    .rodata.MSIRangeTable:00000000 MSIRangeTable
C:\Users\LuckyE\AppData\Local\Temp\ccJs9MOV.s:267    .rodata.APBPrescTable:00000000 APBPrescTable
C:\Users\LuckyE\AppData\Local\Temp\ccJs9MOV.s:247    .rodata.AHBPrescTable:00000000 AHBPrescTable
C:\Users\LuckyE\AppData\Local\Temp\ccJs9MOV.s:241    .data.SystemCoreClock:00000000 SystemCoreClock
C:\Users\LuckyE\AppData\Local\Temp\ccJs9MOV.s:237    .data.SystemCoreClock:00000000 $d
C:\Users\LuckyE\AppData\Local\Temp\ccJs9MOV.s:277    .rodata.MSIRangeTable:00000000 $d

NO UNDEFINED SYMBOLS
